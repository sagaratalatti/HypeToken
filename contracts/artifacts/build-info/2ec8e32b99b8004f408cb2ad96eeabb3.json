{
	"id": "2ec8e32b99b8004f408cb2ad96eeabb3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SocialToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ninterface ISocialMetricsOracle {\n    struct SocialMetrics {\n        uint256 tweetCount;\n        uint256 sentimentScore;\n        uint256 engagementRate;\n        uint256 timestamp;\n    }\n    \n    function getLatestMetrics() external view returns (SocialMetrics memory);\n    function requestSocialMetrics() external returns (bytes32);\n}\n\ncontract SocialToken is ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable, PausableUpgradeable {\n    using SafeMath for uint256;\n\n    // Oracle interface\n    ISocialMetricsOracle public socialOracle;\n    \n    // Token mechanics configuration\n    struct TokenMechanics {\n        uint256 minSentimentScore;      // Minimum sentiment score for positive action\n        uint256 minEngagementRate;      // Minimum engagement rate for positive action\n        uint256 minTweetCount;          // Minimum tweet count for valid metrics\n        uint256 rewardBaseAmount;       // Base amount for rewards\n        uint256 penaltyBaseAmount;      // Base amount for penalties\n        uint256 cooldownPeriod;         // Cooldown between mechanics triggers\n    }\n    \n    TokenMechanics public mechanics;\n    \n    // Tracking variables\n    uint256 public lastMechanicsUpdate;\n    mapping(address => uint256) public lastRewardClaim;\n    \n    // Events\n    event OracleUpdated(address indexed newOracle);\n    event MechanicsUpdated(TokenMechanics mechanics);\n    event RewardDistributed(uint256 amount, uint256 sentimentScore, uint256 engagementRate);\n    event PenaltyApplied(uint256 amount, uint256 sentimentScore, uint256 engagementRate);\n\n    // Errors\n    error InvalidOracleAddress();\n    error CooldownPeriodNotElapsed();\n    error InvalidMetricsTimestamp();\n    error InsufficientTweetCount();\n    error RewardClaimTooSoon();\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        string memory name,\n        string memory symbol,\n        address _socialOracle,\n        TokenMechanics memory _mechanics\n    ) public initializer {\n        __ERC20_init(name, symbol);\n        __Ownable_init(msg.sender);\n        __Pausable_init();\n        __UUPSUpgradeable_init();\n\n        if (_socialOracle == address(0)) revert InvalidOracleAddress();\n        socialOracle = ISocialMetricsOracle(_socialOracle);\n        mechanics = _mechanics;\n        \n        // Mint initial supply\n        _mint(msg.sender, 1000000 * 10**decimals());\n    }\n\n    // Oracle integration functions\n    function updateBasedOnMetrics() external whenNotPaused {\n        if (block.timestamp < lastMechanicsUpdate + mechanics.cooldownPeriod) \n            revert CooldownPeriodNotElapsed();\n\n        ISocialMetricsOracle.SocialMetrics memory metrics = socialOracle.getLatestMetrics();\n        \n        // Validate metrics\n        if (block.timestamp - metrics.timestamp > 1 hours) \n            revert InvalidMetricsTimestamp();\n        if (metrics.tweetCount < mechanics.minTweetCount) \n            revert InsufficientTweetCount();\n\n        // Calculate reward/penalty\n        if (\n            metrics.sentimentScore >= mechanics.minSentimentScore &&\n            metrics.engagementRate >= mechanics.minEngagementRate\n        ) {\n            _handlePositiveMetrics(metrics);\n        } else {\n            _handleNegativeMetrics(metrics);\n        }\n\n        lastMechanicsUpdate = block.timestamp;\n        \n        // Request new metrics for next update\n        socialOracle.requestSocialMetrics();\n    }\n\n    function claimReward() external whenNotPaused {\n        if (block.timestamp < lastRewardClaim[msg.sender] + mechanics.cooldownPeriod)\n            revert RewardClaimTooSoon();\n\n        ISocialMetricsOracle.SocialMetrics memory metrics = socialOracle.getLatestMetrics();\n        \n        uint256 rewardAmount = _calculateReward(\n            metrics.sentimentScore,\n            metrics.engagementRate,\n            balanceOf(msg.sender)\n        );\n\n        if (rewardAmount > 0) {\n            _mint(msg.sender, rewardAmount);\n            lastRewardClaim[msg.sender] = block.timestamp;\n        }\n    }\n\n    // Internal functions\n    function _handlePositiveMetrics(ISocialMetricsOracle.SocialMetrics memory metrics) internal {\n        uint256 rewardAmount = _calculateReward(\n            metrics.sentimentScore,\n            metrics.engagementRate,\n            totalSupply()\n        );\n\n        if (rewardAmount > 0) {\n            _burn(address(this), rewardAmount);\n            emit RewardDistributed(rewardAmount, metrics.sentimentScore, metrics.engagementRate);\n        }\n    }\n\n    function _handleNegativeMetrics(ISocialMetricsOracle.SocialMetrics memory metrics) internal {\n        uint256 penaltyAmount = _calculatePenalty(\n            metrics.sentimentScore,\n            metrics.engagementRate,\n            totalSupply()\n        );\n\n        if (penaltyAmount > 0) {\n            _mint(address(this), penaltyAmount);\n            emit PenaltyApplied(penaltyAmount, metrics.sentimentScore, metrics.engagementRate);\n        }\n    }\n\n    function _calculateReward(\n        uint256 sentimentScore,\n        uint256 engagementRate,\n        uint256 baseAmount\n    ) internal view returns (uint256) {\n        uint256 sentimentMultiplier = sentimentScore.sub(mechanics.minSentimentScore);\n        uint256 engagementMultiplier = engagementRate.sub(mechanics.minEngagementRate);\n        \n        return mechanics.rewardBaseAmount\n            .mul(sentimentMultiplier)\n            .mul(engagementMultiplier)\n            .mul(baseAmount)\n            .div(10000) // Adjust for precision\n            .div(100);  // Scale down multipliers\n    }\n\n    function _calculatePenalty(\n        uint256 sentimentScore,\n        uint256 engagementRate,\n        uint256 baseAmount\n    ) internal view returns (uint256) {\n        uint256 sentimentDiff = mechanics.minSentimentScore > sentimentScore ? \n            mechanics.minSentimentScore.sub(sentimentScore) : 0;\n        uint256 engagementDiff = mechanics.minEngagementRate > engagementRate ? \n            mechanics.minEngagementRate.sub(engagementRate) : 0;\n        \n        return mechanics.penaltyBaseAmount\n            .mul(sentimentDiff)\n            .mul(engagementDiff)\n            .mul(baseAmount)\n            .div(10000) // Adjust for precision\n            .div(100);  // Scale down multipliers\n    }\n\n    // Admin functions\n    function updateOracle(address newOracle) external onlyOwner {\n        if (newOracle == address(0)) revert InvalidOracleAddress();\n        socialOracle = ISocialMetricsOracle(newOracle);\n        emit OracleUpdated(newOracle);\n    }\n\n    function updateMechanics(TokenMechanics memory newMechanics) external onlyOwner {\n        mechanics = newMechanics;\n        emit MechanicsUpdated(newMechanics);\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    // UUPS required function\n    function _authorizeUpgrade(address) internal override onlyOwner {}\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 652,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 757,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xbb96dc9c468170c3224126e953de917e06332ec5909a3d85e6e5bb0df10c5139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d14e6486e127e7e31c2ffccfc212c7ebaaecf8fb05677575128b449ee113def2\",\"dweb:/ipfs/QmabvyfStwBcum8mGfkmxcTV45rjyHmzHGCxfxyhmu48Yx\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220883961d9d5c474d2244afcb0147c18bbb7a37f3f38719fcf41c5080a2f2ecc0d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220883961d9d5c474d2244afcb0147c18bbb7a37f3f38719fcf41c5080a2f2ecc0d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 CODECOPY PUSH2 0xD9D5 0xC4 PUSH21 0xD2244AFCB0147C18BBB7A37F3F38719FCF41C5080A 0x2F 0x2E 0xCC 0xD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "496:5741:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220883961d9d5c474d2244afcb0147c18bbb7a37f3f38719fcf41c5080a2f2ecc0d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 CODECOPY PUSH2 0xD9D5 0xC4 PUSH21 0xD2244AFCB0147C18BBB7A37F3F38719FCF41C5080A 0x2F 0x2E 0xCC 0xD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "496:5741:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220883961d9d5c474d2244afcb0147c18bbb7a37f3f38719fcf41c5080a2f2ecc0d64736f6c634300081a0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/SocialToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/SocialToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/SocialToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xA7 SIGNEXTEND PUSH26 0xDDE3A68BE008AD909ECEB9714B0A021B843D5091DCC7DF482D70 PUSH17 0xC364736F6C634300081A00330000000000 ",
							"sourceMap": "1407:2774:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xA7 SIGNEXTEND PUSH26 0xDDE3A68BE008AD909ECEB9714B0A021B843D5091DCC7DF482D70 PUSH17 0xC364736F6C634300081A00330000000000 ",
							"sourceMap": "1407:2774:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/SocialToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xC4 MSTORE8 PUSH29 0x112E7DFD362FBBC3109DCD7EFAD1E9F705B895D9C42D83F61DD9CEDB64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "482:6210:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xC4 MSTORE8 PUSH29 0x112E7DFD362FBBC3109DCD7EFAD1E9F705B895D9C42D83F61DD9CEDB64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "482:6210:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/SocialToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SocialToken.sol": {
				"ISocialMetricsOracle": {
					"abi": [
						{
							"inputs": [],
							"name": "getLatestMetrics",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tweetCount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "sentimentScore",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "engagementRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										}
									],
									"internalType": "struct ISocialMetricsOracle.SocialMetrics",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestSocialMetrics",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getLatestMetrics()": "395924dc",
							"requestSocialMetrics()": "09c22c5d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getLatestMetrics\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tweetCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sentimentScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"engagementRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct ISocialMetricsOracle.SocialMetrics\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestSocialMetrics\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SocialToken.sol\":\"ISocialMetricsOracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xbb96dc9c468170c3224126e953de917e06332ec5909a3d85e6e5bb0df10c5139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d14e6486e127e7e31c2ffccfc212c7ebaaecf8fb05677575128b449ee113def2\",\"dweb:/ipfs/QmabvyfStwBcum8mGfkmxcTV45rjyHmzHGCxfxyhmu48Yx\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/SocialToken.sol\":{\"keccak256\":\"0x0f874dc49667a865f8bd47587c7a9e094174e69d6e2dd3ac12aaa9b675e1f5c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57e9c446861cae02d5bd3b7c1ca7a5bc9cbd0a72ae66ff614e03070c2f53a5b7\",\"dweb:/ipfs/QmZA75e3qddxuSEBB2znsspSZzh5453cYAyXVZc3ep3occ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SocialToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CooldownPeriodNotElapsed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientTweetCount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidMetricsTimestamp",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidOracleAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RewardClaimTooSoon",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "minSentimentScore",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minEngagementRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minTweetCount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "rewardBaseAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "penaltyBaseAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "cooldownPeriod",
											"type": "uint256"
										}
									],
									"indexed": false,
									"internalType": "struct SocialToken.TokenMechanics",
									"name": "mechanics",
									"type": "tuple"
								}
							],
							"name": "MechanicsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOracle",
									"type": "address"
								}
							],
							"name": "OracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "sentimentScore",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "engagementRate",
									"type": "uint256"
								}
							],
							"name": "PenaltyApplied",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "sentimentScore",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "engagementRate",
									"type": "uint256"
								}
							],
							"name": "RewardDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_socialOracle",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "minSentimentScore",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minEngagementRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minTweetCount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "rewardBaseAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "penaltyBaseAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "cooldownPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct SocialToken.TokenMechanics",
									"name": "_mechanics",
									"type": "tuple"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastMechanicsUpdate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastRewardClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mechanics",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "minSentimentScore",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minEngagementRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minTweetCount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardBaseAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "penaltyBaseAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cooldownPeriod",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "socialOracle",
							"outputs": [
								{
									"internalType": "contract ISocialMetricsOracle",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateBasedOnMetrics",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "minSentimentScore",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minEngagementRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minTweetCount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "rewardBaseAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "penaltyBaseAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "cooldownPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct SocialToken.TokenMechanics",
									"name": "newMechanics",
									"type": "tuple"
								}
							],
							"name": "updateMechanics",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOracle",
									"type": "address"
								}
							],
							"name": "updateOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SocialToken.sol\":763:7418  contract SocialToken is ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable, PausableUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"contracts/SocialToken.sol\":2240:2293  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/SocialToken.sol\":2264:2286  _disableInitializers() */\n  tag_4\n    /* \"contracts/SocialToken.sol\":2264:2284  _disableInitializers */\n  shl(0x20, tag_5)\n    /* \"contracts/SocialToken.sol\":2264:2286  _disableInitializers() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/SocialToken.sol\":763:7418  contract SocialToken is ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable, PausableUpgradeable {... */\n  jump(tag_6)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7826:7856  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  tag_8\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7883  _getInitializableStorage */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7826:7885  InitializableStorage storage $ = _getInitializableStorage() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7901  $ */\n  dup1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  0x00\n  add\n  0x08\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  0xf92ee8a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8003:8019  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  dup1\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7986  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  0x00\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  0xffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8052:8068  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8036  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8049  $._initialized */\n  0x00\n  add\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8099:8115  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\ntag_9:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:108   */\ntag_15:\n    /* \"#utility.yul\":43:50   */\n  0x00\n    /* \"#utility.yul\":83:101   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":76:81   */\n  dup3\n    /* \"#utility.yul\":72:102   */\n  and\n    /* \"#utility.yul\":61:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":114:229   */\ntag_16:\n    /* \"#utility.yul\":199:222   */\n  tag_20\n    /* \"#utility.yul\":216:221   */\n  dup2\n    /* \"#utility.yul\":199:222   */\n  tag_15\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":194:197   */\n  dup3\n    /* \"#utility.yul\":187:223   */\n  mstore\n    /* \"#utility.yul\":114:229   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":235:453   */\ntag_13:\n    /* \"#utility.yul\":326:330   */\n  0x00\n    /* \"#utility.yul\":364:366   */\n  0x20\n    /* \"#utility.yul\":353:362   */\n  dup3\n    /* \"#utility.yul\":349:367   */\n  add\n    /* \"#utility.yul\":341:367   */\n  swap1\n  pop\n    /* \"#utility.yul\":377:446   */\n  tag_22\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":432:441   */\n  dup4\n    /* \"#utility.yul\":428:445   */\n  add\n    /* \"#utility.yul\":419:425   */\n  dup5\n    /* \"#utility.yul\":377:446   */\n  tag_16\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":235:453   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SocialToken.sol\":763:7418  contract SocialToken is ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable, PausableUpgradeable {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/SocialToken.sol\":763:7418  contract SocialToken is ERC20Upgradeable, OwnableUpgradeable, UUPSUpgradeable, PausableUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xb88a802f\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd8ad5231\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xaf9dcc2c\n      eq\n      tag_24\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x9e24f236\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa7892c11\n      eq\n      tag_21\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x78f3c4b6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_29:\n      dup1\n      0x313ce567\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x4f1ef286\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x38b42785\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0b594036\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1cb44dfc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SocialToken.sol\":7010:7176  function updateMechanics(TokenMechanics memory newMechanics) external onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SocialToken.sol\":6774:7004  function updateOracle(address newOracle) external onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SocialToken.sol\":1522:1553  TokenMechanics public mechanics */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SocialToken.sol\":7249:7314  function unpause() external onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_11:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      stop\n        /* \"contracts/SocialToken.sol\":925:965  ISocialMetricsOracle public socialOracle */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SocialToken.sol\":7182:7243  function pause() external onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SocialToken.sol\":1590:1624  uint256 public lastMechanicsUpdate */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SocialToken.sol\":2915:3907  function updateBasedOnMetrics() external whenNotPaused {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SocialToken.sol\":2299:2873  function initialize(... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      tag_139\n      jump\t// in\n    tag_136:\n      stop\n        /* \"contracts/SocialToken.sol\":3913:4509  function claimReward() external whenNotPaused {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      stop\n        /* \"contracts/SocialToken.sol\":1630:1680  mapping(address => uint256) public lastRewardClaim */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_149\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      tag_152\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n    tag_155:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2761:2774  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2786:2808  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2829  _getERC20Storage() */\n      tag_159\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2827  _getERC20Storage */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2829  _getERC20Storage() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2786:2829  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2846:2847  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2846:2853  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2839:2853  return $._name */\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_163\n      swap1\n      tag_162\n      jump\t// in\n    tag_163:\n      dup1\n      iszero\n      tag_164\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_165\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_164)\n    tag_165:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_166:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_166\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5283:5287  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5299:5312  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5327  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5325  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5327  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5299:5327  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5368  _approve(owner, spender, value) */\n      tag_170\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5346:5351  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5353:5360  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5362:5367  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5345  _approve */\n      tag_171\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5368  _approve(owner, spender, value) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5385:5389  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5378:5389  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SocialToken.sol\":7010:7176  function updateMechanics(TokenMechanics memory newMechanics) external onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/SocialToken.sol\":7112:7124  newMechanics */\n      dup1\n        /* \"contracts/SocialToken.sol\":7100:7109  mechanics */\n      0x33\n        /* \"contracts/SocialToken.sol\":7100:7124  mechanics = newMechanics */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/SocialToken.sol\":7139:7169  MechanicsUpdated(newMechanics) */\n      0x367b6b00685ae263e44e2231e399d2e112eac1979516a9e0e1069d7cd4ac3a2d\n        /* \"contracts/SocialToken.sol\":7156:7168  newMechanics */\n      dup2\n        /* \"contracts/SocialToken.sol\":7139:7169  MechanicsUpdated(newMechanics) */\n      mload(0x40)\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/SocialToken.sol\":7010:7176  function updateMechanics(TokenMechanics memory newMechanics) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3948:3955  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3967:3989  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4010  _getERC20Storage() */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4008  _getERC20Storage */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4010  _getERC20Storage() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3967:4010  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4027:4028  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4027:4041  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4020:4041  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SocialToken.sol\":6774:7004  function updateOracle(address newOracle) external onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_181\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_181:\n        /* \"contracts/SocialToken.sol\":6869:6870  0 */\n      0x00\n        /* \"contracts/SocialToken.sol\":6848:6871  newOracle == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SocialToken.sol\":6848:6857  newOracle */\n      dup2\n        /* \"contracts/SocialToken.sol\":6848:6871  newOracle == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/SocialToken.sol\":6844:6902  if (newOracle == address(0)) revert InvalidOracleAddress() */\n      tag_183\n      jumpi\n        /* \"contracts/SocialToken.sol\":6880:6902  InvalidOracleAddress() */\n      mload(0x40)\n      0x5521068100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SocialToken.sol\":6844:6902  if (newOracle == address(0)) revert InvalidOracleAddress() */\n    tag_183:\n        /* \"contracts/SocialToken.sol\":6948:6957  newOracle */\n      dup1\n        /* \"contracts/SocialToken.sol\":6912:6924  socialOracle */\n      0x32\n      0x00\n        /* \"contracts/SocialToken.sol\":6912:6958  socialOracle = ISocialMetricsOracle(newOracle) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SocialToken.sol\":6987:6996  newOracle */\n      dup1\n        /* \"contracts/SocialToken.sol\":6973:6997  OracleUpdated(newOracle) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3df77beb5db05fcdd70a30fc8adf3f83f9501b68579455adbd100b8180940394\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SocialToken.sol\":6774:7004  function updateOracle(address newOracle) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6075:6079  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6091:6106  address spender */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6121  _msgSender() */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6119  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6121  _msgSender() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6091:6121  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6168  _spendAllowance(from, spender, value) */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6147:6151  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6153:6160  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6162:6167  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6146  _spendAllowance */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6168  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6204  _transfer(from, to, value) */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6188:6192  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6194:6196  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6198:6203  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6187  _transfer */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6204  _transfer(from, to, value) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6221:6225  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6214:6225  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3803:3808  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3827:3829  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3820:3829  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SocialToken.sol\":1522:1553  TokenMechanics public mechanics */\n    tag_75:\n      0x33\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"contracts/SocialToken.sol\":7249:7314  function unpause() external onlyOwner {... */\n    tag_80:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_192:\n        /* \"contracts/SocialToken.sol\":7297:7307  _unpause() */\n      tag_194\n        /* \"contracts/SocialToken.sol\":7297:7305  _unpause */\n      tag_195\n        /* \"contracts/SocialToken.sol\":7297:7307  _unpause() */\n      jump\t// in\n    tag_194:\n        /* \"contracts/SocialToken.sol\":7249:7314  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_198\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_200\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_201\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_203\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3803:3835  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3796:3835  return ERC1967Utils.IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1926:1930  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1949:1956  _paused */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1942:1956  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4171:4178  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4190:4212  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4233  _getERC20Storage() */\n      tag_210\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4231  _getERC20Storage */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4233  _getERC20Storage() */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4190:4233  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4251  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4261  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4270  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4262:4269  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4270  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4243:4270  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_101:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_214\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SocialToken.sol\":925:965  ISocialMetricsOracle public socialOracle */\n    tag_104:\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SocialToken.sol\":7182:7243  function pause() external onlyOwner {... */\n    tag_109:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_217:\n        /* \"contracts/SocialToken.sol\":7228:7236  _pause() */\n      tag_219\n        /* \"contracts/SocialToken.sol\":7228:7234  _pause */\n      tag_220\n        /* \"contracts/SocialToken.sol\":7228:7236  _pause() */\n      jump\t// in\n    tag_219:\n        /* \"contracts/SocialToken.sol\":7182:7243  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_222\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3020:3033  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3045:3067  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3088  _getERC20Storage() */\n      tag_225\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3086  _getERC20Storage */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3088  _getERC20Storage() */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3045:3088  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3105:3106  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3105:3114  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3098:3114  return $._symbol */\n      dup1\n      sload\n      tag_226\n      swap1\n      tag_162\n      jump\t// in\n    tag_226:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_227\n      swap1\n      tag_162\n      jump\t// in\n    tag_227:\n      dup1\n      iszero\n      tag_228\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_229\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_228)\n    tag_229:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_230:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_230\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SocialToken.sol\":1590:1624  uint256 public lastMechanicsUpdate */\n    tag_121:\n      sload(0x39)\n      dup2\n      jump\t// out\n        /* \"contracts/SocialToken.sol\":2915:3907  function updateBasedOnMetrics() external whenNotPaused {... */\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_232\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_232:\n        /* \"contracts/SocialToken.sol\":3024:3033  mechanics */\n      0x33\n        /* \"contracts/SocialToken.sol\":3024:3048  mechanics.cooldownPeriod */\n      0x05\n      add\n      sload\n        /* \"contracts/SocialToken.sol\":3002:3021  lastMechanicsUpdate */\n      sload(0x39)\n        /* \"contracts/SocialToken.sol\":3002:3048  lastMechanicsUpdate + mechanics.cooldownPeriod */\n      tag_235\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"contracts/SocialToken.sol\":2984:2999  block.timestamp */\n      timestamp\n        /* \"contracts/SocialToken.sol\":2984:3048  block.timestamp < lastMechanicsUpdate + mechanics.cooldownPeriod */\n      lt\n        /* \"contracts/SocialToken.sol\":2980:3096  if (block.timestamp < lastMechanicsUpdate + mechanics.cooldownPeriod) ... */\n      iszero\n      tag_237\n      jumpi\n        /* \"contracts/SocialToken.sol\":3070:3096  CooldownPeriodNotElapsed() */\n      mload(0x40)\n      0x4a448f3700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SocialToken.sol\":2980:3096  if (block.timestamp < lastMechanicsUpdate + mechanics.cooldownPeriod) ... */\n    tag_237:\n        /* \"contracts/SocialToken.sol\":3107:3156  ISocialMetricsOracle.SocialMetrics memory metrics */\n      0x00\n        /* \"contracts/SocialToken.sol\":3159:3171  socialOracle */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SocialToken.sol\":3159:3188  socialOracle.getLatestMetrics */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x395924dc\n        /* \"contracts/SocialToken.sol\":3159:3190  socialOracle.getLatestMetrics() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_239\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_239:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_240\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"contracts/SocialToken.sol\":3107:3190  ISocialMetricsOracle.SocialMetrics memory metrics = socialOracle.getLatestMetrics() */\n      swap1\n      pop\n        /* \"contracts/SocialToken.sol\":3279:3286  1 hours */\n      0x0e10\n        /* \"contracts/SocialToken.sol\":3259:3266  metrics */\n      dup2\n        /* \"contracts/SocialToken.sol\":3259:3276  metrics.timestamp */\n      0x60\n      add\n      mload\n        /* \"contracts/SocialToken.sol\":3241:3256  block.timestamp */\n      timestamp\n        /* \"contracts/SocialToken.sol\":3241:3276  block.timestamp - metrics.timestamp */\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"contracts/SocialToken.sol\":3241:3286  block.timestamp - metrics.timestamp > 1 hours */\n      gt\n        /* \"contracts/SocialToken.sol\":3237:3333  if (block.timestamp - metrics.timestamp > 1 hours) ... */\n      iszero\n      tag_244\n      jumpi\n        /* \"contracts/SocialToken.sol\":3308:3333  InvalidMetricsTimestamp() */\n      mload(0x40)\n      0x7428474c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SocialToken.sol\":3237:3333  if (block.timestamp - metrics.timestamp > 1 hours) ... */\n    tag_244:\n        /* \"contracts/SocialToken.sol\":3368:3377  mechanics */\n      0x33\n        /* \"contracts/SocialToken.sol\":3368:3391  mechanics.minTweetCount */\n      0x02\n      add\n      sload\n        /* \"contracts/SocialToken.sol\":3347:3354  metrics */\n      dup2\n        /* \"contracts/SocialToken.sol\":3347:3365  metrics.tweetCount */\n      0x00\n      add\n      mload\n        /* \"contracts/SocialToken.sol\":3347:3391  metrics.tweetCount < mechanics.minTweetCount */\n      lt\n        /* \"contracts/SocialToken.sol\":3343:3437  if (metrics.tweetCount < mechanics.minTweetCount) ... */\n      iszero\n      tag_245\n      jumpi\n        /* \"contracts/SocialToken.sol\":3413:3437  InsufficientTweetCount() */\n      mload(0x40)\n      0xda2029d100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SocialToken.sol\":3343:3437  if (metrics.tweetCount < mechanics.minTweetCount) ... */\n    tag_245:\n        /* \"contracts/SocialToken.sol\":3527:3536  mechanics */\n      0x33\n        /* \"contracts/SocialToken.sol\":3527:3554  mechanics.minSentimentScore */\n      0x00\n      add\n      sload\n        /* \"contracts/SocialToken.sol\":3501:3508  metrics */\n      dup2\n        /* \"contracts/SocialToken.sol\":3501:3523  metrics.sentimentScore */\n      0x20\n      add\n      mload\n        /* \"contracts/SocialToken.sol\":3501:3554  metrics.sentimentScore >= mechanics.minSentimentScore */\n      lt\n      iszero\n        /* \"contracts/SocialToken.sol\":3501:3623  metrics.sentimentScore >= mechanics.minSentimentScore &&... */\n      dup1\n      iszero\n      tag_246\n      jumpi\n      pop\n        /* \"contracts/SocialToken.sol\":3596:3605  mechanics */\n      0x33\n        /* \"contracts/SocialToken.sol\":3596:3623  mechanics.minEngagementRate */\n      0x01\n      add\n      sload\n        /* \"contracts/SocialToken.sol\":3570:3577  metrics */\n      dup2\n        /* \"contracts/SocialToken.sol\":3570:3592  metrics.engagementRate */\n      0x40\n      add\n      mload\n        /* \"contracts/SocialToken.sol\":3570:3623  metrics.engagementRate >= mechanics.minEngagementRate */\n      lt\n      iszero\n        /* \"contracts/SocialToken.sol\":3501:3623  metrics.sentimentScore >= mechanics.minSentimentScore &&... */\n    tag_246:\n        /* \"contracts/SocialToken.sol\":3484:3752  if (... */\n      iszero\n      tag_247\n      jumpi\n        /* \"contracts/SocialToken.sol\":3648:3679  _handlePositiveMetrics(metrics) */\n      tag_248\n        /* \"contracts/SocialToken.sol\":3671:3678  metrics */\n      dup2\n        /* \"contracts/SocialToken.sol\":3648:3670  _handlePositiveMetrics */\n      tag_249\n        /* \"contracts/SocialToken.sol\":3648:3679  _handlePositiveMetrics(metrics) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/SocialToken.sol\":3484:3752  if (... */\n      jump(tag_250)\n    tag_247:\n        /* \"contracts/SocialToken.sol\":3710:3741  _handleNegativeMetrics(metrics) */\n      tag_251\n        /* \"contracts/SocialToken.sol\":3733:3740  metrics */\n      dup2\n        /* \"contracts/SocialToken.sol\":3710:3732  _handleNegativeMetrics */\n      tag_252\n        /* \"contracts/SocialToken.sol\":3710:3741  _handleNegativeMetrics(metrics) */\n      jump\t// in\n    tag_251:\n        /* \"contracts/SocialToken.sol\":3484:3752  if (... */\n    tag_250:\n        /* \"contracts/SocialToken.sol\":3784:3799  block.timestamp */\n      timestamp\n        /* \"contracts/SocialToken.sol\":3762:3781  lastMechanicsUpdate */\n      0x39\n        /* \"contracts/SocialToken.sol\":3762:3799  lastMechanicsUpdate = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SocialToken.sol\":3865:3877  socialOracle */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SocialToken.sol\":3865:3898  socialOracle.requestSocialMetrics */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x09c22c5d\n        /* \"contracts/SocialToken.sol\":3865:3900  socialOracle.requestSocialMetrics() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_254\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_254:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_255\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      pop\n        /* \"contracts/SocialToken.sol\":2970:3907  {... */\n      pop\n        /* \"contracts/SocialToken.sol\":2915:3907  function updateBasedOnMetrics() external whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4541:4545  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4557:4570  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4585  _msgSender() */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4583  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4585  _msgSender() */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4557:4585  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4622  _transfer(owner, to, value) */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4605:4610  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4612:4614  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4616:4621  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4604  _transfer */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4622  _transfer(owner, to, value) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4639:4643  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4632:4643  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_133:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/SocialToken.sol\":2299:2873  function initialize(... */\n    tag_139:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_261\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_263\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_263:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_264\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_264:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_265\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_265:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_267:\n        /* \"contracts/SocialToken.sol\":2485:2511  __ERC20_init(name, symbol) */\n      tag_269\n        /* \"contracts/SocialToken.sol\":2498:2502  name */\n      dup10\n        /* \"contracts/SocialToken.sol\":2504:2510  symbol */\n      dup10\n        /* \"contracts/SocialToken.sol\":2485:2497  __ERC20_init */\n      tag_270\n        /* \"contracts/SocialToken.sol\":2485:2511  __ERC20_init(name, symbol) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/SocialToken.sol\":2521:2547  __Ownable_init(msg.sender) */\n      tag_271\n        /* \"contracts/SocialToken.sol\":2536:2546  msg.sender */\n      caller\n        /* \"contracts/SocialToken.sol\":2521:2535  __Ownable_init */\n      tag_272\n        /* \"contracts/SocialToken.sol\":2521:2547  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_271:\n        /* \"contracts/SocialToken.sol\":2557:2574  __Pausable_init() */\n      tag_273\n        /* \"contracts/SocialToken.sol\":2557:2572  __Pausable_init */\n      tag_274\n        /* \"contracts/SocialToken.sol\":2557:2574  __Pausable_init() */\n      jump\t// in\n    tag_273:\n        /* \"contracts/SocialToken.sol\":2584:2608  __UUPSUpgradeable_init() */\n      tag_275\n        /* \"contracts/SocialToken.sol\":2584:2606  __UUPSUpgradeable_init */\n      tag_276\n        /* \"contracts/SocialToken.sol\":2584:2608  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_275:\n        /* \"contracts/SocialToken.sol\":2648:2649  0 */\n      0x00\n        /* \"contracts/SocialToken.sol\":2623:2650  _socialOracle == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SocialToken.sol\":2623:2636  _socialOracle */\n      dup8\n        /* \"contracts/SocialToken.sol\":2623:2650  _socialOracle == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/SocialToken.sol\":2619:2681  if (_socialOracle == address(0)) revert InvalidOracleAddress() */\n      tag_277\n      jumpi\n        /* \"contracts/SocialToken.sol\":2659:2681  InvalidOracleAddress() */\n      mload(0x40)\n      0x5521068100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SocialToken.sol\":2619:2681  if (_socialOracle == address(0)) revert InvalidOracleAddress() */\n    tag_277:\n        /* \"contracts/SocialToken.sol\":2727:2740  _socialOracle */\n      dup7\n        /* \"contracts/SocialToken.sol\":2691:2703  socialOracle */\n      0x32\n      0x00\n        /* \"contracts/SocialToken.sol\":2691:2741  socialOracle = ISocialMetricsOracle(_socialOracle) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SocialToken.sol\":2763:2773  _mechanics */\n      dup6\n        /* \"contracts/SocialToken.sol\":2751:2760  mechanics */\n      0x33\n        /* \"contracts/SocialToken.sol\":2751:2773  mechanics = _mechanics */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/SocialToken.sol\":2823:2866  _mint(msg.sender, 1000000 * 10**decimals()) */\n      tag_278\n        /* \"contracts/SocialToken.sol\":2829:2839  msg.sender */\n      caller\n        /* \"contracts/SocialToken.sol\":2855:2865  decimals() */\n      tag_279\n        /* \"contracts/SocialToken.sol\":2855:2863  decimals */\n      tag_70\n        /* \"contracts/SocialToken.sol\":2855:2865  decimals() */\n      jump\t// in\n    tag_279:\n        /* \"contracts/SocialToken.sol\":2851:2853  10 */\n      0x0a\n        /* \"contracts/SocialToken.sol\":2851:2865  10**decimals() */\n      tag_280\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n        /* \"contracts/SocialToken.sol\":2841:2848  1000000 */\n      0x0f4240\n        /* \"contracts/SocialToken.sol\":2841:2865  1000000 * 10**decimals() */\n      tag_282\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n        /* \"contracts/SocialToken.sol\":2823:2828  _mint */\n      tag_284\n        /* \"contracts/SocialToken.sol\":2823:2866  _mint(msg.sender, 1000000 * 10**decimals()) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_286\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SocialToken.sol\":2299:2873  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SocialToken.sol\":3913:4509  function claimReward() external whenNotPaused {... */\n    tag_142:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_289\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_289:\n        /* \"contracts/SocialToken.sol\":4021:4030  mechanics */\n      0x33\n        /* \"contracts/SocialToken.sol\":4021:4045  mechanics.cooldownPeriod */\n      0x05\n      add\n      sload\n        /* \"contracts/SocialToken.sol\":3991:4006  lastRewardClaim */\n      0x3a\n        /* \"contracts/SocialToken.sol\":3991:4018  lastRewardClaim[msg.sender] */\n      0x00\n        /* \"contracts/SocialToken.sol\":4007:4017  msg.sender */\n      caller\n        /* \"contracts/SocialToken.sol\":3991:4018  lastRewardClaim[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SocialToken.sol\":3991:4045  lastRewardClaim[msg.sender] + mechanics.cooldownPeriod */\n      tag_291\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_291:\n        /* \"contracts/SocialToken.sol\":3973:3988  block.timestamp */\n      timestamp\n        /* \"contracts/SocialToken.sol\":3973:4045  block.timestamp < lastRewardClaim[msg.sender] + mechanics.cooldownPeriod */\n      lt\n        /* \"contracts/SocialToken.sol\":3969:4086  if (block.timestamp < lastRewardClaim[msg.sender] + mechanics.cooldownPeriod)... */\n      iszero\n      tag_292\n      jumpi\n        /* \"contracts/SocialToken.sol\":4066:4086  RewardClaimTooSoon() */\n      mload(0x40)\n      0x2bc08a7300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SocialToken.sol\":3969:4086  if (block.timestamp < lastRewardClaim[msg.sender] + mechanics.cooldownPeriod)... */\n    tag_292:\n        /* \"contracts/SocialToken.sol\":4097:4146  ISocialMetricsOracle.SocialMetrics memory metrics */\n      0x00\n        /* \"contracts/SocialToken.sol\":4149:4161  socialOracle */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SocialToken.sol\":4149:4178  socialOracle.getLatestMetrics */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x395924dc\n        /* \"contracts/SocialToken.sol\":4149:4180  socialOracle.getLatestMetrics() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_294\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_294:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_295\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_295:\n        /* \"contracts/SocialToken.sol\":4097:4180  ISocialMetricsOracle.SocialMetrics memory metrics = socialOracle.getLatestMetrics() */\n      swap1\n      pop\n        /* \"contracts/SocialToken.sol\":4199:4219  uint256 rewardAmount */\n      0x00\n        /* \"contracts/SocialToken.sol\":4222:4355  _calculateReward(... */\n      tag_296\n        /* \"contracts/SocialToken.sol\":4252:4259  metrics */\n      dup3\n        /* \"contracts/SocialToken.sol\":4252:4274  metrics.sentimentScore */\n      0x20\n      add\n      mload\n        /* \"contracts/SocialToken.sol\":4288:4295  metrics */\n      dup4\n        /* \"contracts/SocialToken.sol\":4288:4310  metrics.engagementRate */\n      0x40\n      add\n      mload\n        /* \"contracts/SocialToken.sol\":4324:4345  balanceOf(msg.sender) */\n      tag_297\n        /* \"contracts/SocialToken.sol\":4334:4344  msg.sender */\n      caller\n        /* \"contracts/SocialToken.sol\":4324:4333  balanceOf */\n      tag_97\n        /* \"contracts/SocialToken.sol\":4324:4345  balanceOf(msg.sender) */\n      jump\t// in\n    tag_297:\n        /* \"contracts/SocialToken.sol\":4222:4238  _calculateReward */\n      tag_298\n        /* \"contracts/SocialToken.sol\":4222:4355  _calculateReward(... */\n      jump\t// in\n    tag_296:\n        /* \"contracts/SocialToken.sol\":4199:4355  uint256 rewardAmount = _calculateReward(... */\n      swap1\n      pop\n        /* \"contracts/SocialToken.sol\":4385:4386  0 */\n      0x00\n        /* \"contracts/SocialToken.sol\":4370:4382  rewardAmount */\n      dup2\n        /* \"contracts/SocialToken.sol\":4370:4386  rewardAmount > 0 */\n      gt\n        /* \"contracts/SocialToken.sol\":4366:4503  if (rewardAmount > 0) {... */\n      iszero\n      tag_299\n      jumpi\n        /* \"contracts/SocialToken.sol\":4402:4433  _mint(msg.sender, rewardAmount) */\n      tag_300\n        /* \"contracts/SocialToken.sol\":4408:4418  msg.sender */\n      caller\n        /* \"contracts/SocialToken.sol\":4420:4432  rewardAmount */\n      dup3\n        /* \"contracts/SocialToken.sol\":4402:4407  _mint */\n      tag_284\n        /* \"contracts/SocialToken.sol\":4402:4433  _mint(msg.sender, rewardAmount) */\n      jump\t// in\n    tag_300:\n        /* \"contracts/SocialToken.sol\":4477:4492  block.timestamp */\n      timestamp\n        /* \"contracts/SocialToken.sol\":4447:4462  lastRewardClaim */\n      0x3a\n        /* \"contracts/SocialToken.sol\":4447:4474  lastRewardClaim[msg.sender] */\n      0x00\n        /* \"contracts/SocialToken.sol\":4463:4473  msg.sender */\n      caller\n        /* \"contracts/SocialToken.sol\":4447:4474  lastRewardClaim[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SocialToken.sol\":4447:4492  lastRewardClaim[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SocialToken.sol\":4366:4503  if (rewardAmount > 0) {... */\n    tag_299:\n        /* \"contracts/SocialToken.sol\":3959:4509  {... */\n      pop\n      pop\n        /* \"contracts/SocialToken.sol\":3913:4509  function claimReward() external whenNotPaused {... */\n      jump\t// out\n        /* \"contracts/SocialToken.sol\":1630:1680  mapping(address => uint256) public lastRewardClaim */\n    tag_146:\n      mstore(0x20, 0x3a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4788:4795  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4807:4829  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4850  _getERC20Storage() */\n      tag_302\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4848  _getERC20Storage */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4850  _getERC20Storage() */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4807:4850  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4868  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4880  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4881:4886  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4896  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4888:4895  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4896  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4860:4896  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_304\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_307\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_308\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1997:2019  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2054:2084  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10001:10129  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_171:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10122  _approve(owner, spender, value, true) */\n      tag_312\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10094:10099  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10101:10108  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10110:10115  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10117:10121  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10093  _approve */\n      tag_313\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10122  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10001:10129  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_174:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_315\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_316\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_112\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_318\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11745:12222  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_187:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11844:11868  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11896  allowance(owner, spender) */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11881:11886  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11888:11895  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11880  allowance */\n      tag_152\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11896  allowance(owner, spender) */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11844:11896  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11930:11947  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11910:11926  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11910:11947  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11906:12216  if (currentAllowance != type(uint256).max) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11986:11991  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11967:11983  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11967:11991  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11963:12093  if (currentAllowance < value) {... */\n      iszero\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12045:12052  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12054:12070  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12072:12077  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12018:12078  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11963:12093  if (currentAllowance < value) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12134:12191  _approve(owner, spender, currentAllowance - value, false) */\n      tag_326\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12143:12148  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12150:12157  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12178:12183  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12159:12175  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12159:12183  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12185:12190  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12134:12142  _approve */\n      tag_313\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12134:12191  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11906:12216  if (currentAllowance != type(uint256).max) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11834:12222  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11745:12222  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6605:6905  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_189:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6704:6705  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6706  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6692  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6706  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6684:6770  if (from == address(0)) {... */\n      tag_328\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6756:6757  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6729:6759  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6684:6770  if (from == address(0)) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6797:6798  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6799  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6785  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6799  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6779:6865  if (to == address(0)) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6851:6852  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6822:6854  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6779:6865  if (to == address(0)) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6898  _update(from, to, value) */\n      tag_332\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6882:6886  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6888:6890  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6892:6897  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6881  _update */\n      tag_333\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6898  _update(from, to, value) */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6605:6905  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      tag_335\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1764  _requirePaused */\n      tag_336\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2765:2770  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2755:2762  _paused */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2755:2770  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2806  _msgSender() */\n      tag_338\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2804  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2806  _msgSender() */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_339\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_339:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n    tag_198:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4692:4698  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4683:4687  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n      dup1\n      tag_341\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4789:4795  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      tag_342\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4783  ERC1967Utils.getImplementation */\n      tag_343\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_342:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n    tag_341:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n      iszero\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4869:4898  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n    tag_344:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/SocialToken.sol\":7350:7416  function _authorizeUpgrade(address) internal override onlyOwner {} */\n    tag_201:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_346\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_346:\n        /* \"contracts/SocialToken.sol\":7350:7416  function _authorizeUpgrade(address) internal override onlyOwner {} */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6174:6191  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6206  IERC1822Proxiable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6208  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_349\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_350\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_350:\n      0x01\n    tag_349:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_351\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6560:6577  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_355:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_351:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6258:6290  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6254  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6290  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_357\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6346:6350  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6317:6351  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      0xaa1d49a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_358\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_357:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6409:6426  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6428:6432  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6408  ERC1967Utils.upgradeToAndCall */\n      tag_360\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6209:6444  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5115:5121  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5106:5110  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n      tag_362\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5199:5228  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_364\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2450:2565  function _pause() internal virtual whenNotPaused {... */\n    tag_220:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_366\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2519:2523  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2516  _paused */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2523  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2538:2558  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2557  _msgSender() */\n      tag_368\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2555  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2557  _msgSender() */\n      jump\t// in\n    tag_368:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2538:2558  Paused(_msgSender()) */\n      mload(0x40)\n      tag_369\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_369:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2450:2565  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2109  paused() */\n      tag_372\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2107  paused */\n      tag_92\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2109  paused() */\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2100:2109  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      tag_373\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_374\n      swap1\n      tag_375\n      jump\t// in\n    tag_374:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_373:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/SocialToken.sol\":4541:4987  function _handlePositiveMetrics(ISocialMetricsOracle.SocialMetrics memory metrics) internal {... */\n    tag_249:\n        /* \"contracts/SocialToken.sol\":4643:4663  uint256 rewardAmount */\n      0x00\n        /* \"contracts/SocialToken.sol\":4666:4791  _calculateReward(... */\n      tag_377\n        /* \"contracts/SocialToken.sol\":4696:4703  metrics */\n      dup3\n        /* \"contracts/SocialToken.sol\":4696:4718  metrics.sentimentScore */\n      0x20\n      add\n      mload\n        /* \"contracts/SocialToken.sol\":4732:4739  metrics */\n      dup4\n        /* \"contracts/SocialToken.sol\":4732:4754  metrics.engagementRate */\n      0x40\n      add\n      mload\n        /* \"contracts/SocialToken.sol\":4768:4781  totalSupply() */\n      tag_378\n        /* \"contracts/SocialToken.sol\":4768:4779  totalSupply */\n      tag_54\n        /* \"contracts/SocialToken.sol\":4768:4781  totalSupply() */\n      jump\t// in\n    tag_378:\n        /* \"contracts/SocialToken.sol\":4666:4682  _calculateReward */\n      tag_298\n        /* \"contracts/SocialToken.sol\":4666:4791  _calculateReward(... */\n      jump\t// in\n    tag_377:\n        /* \"contracts/SocialToken.sol\":4643:4791  uint256 rewardAmount = _calculateReward(... */\n      swap1\n      pop\n        /* \"contracts/SocialToken.sol\":4821:4822  0 */\n      0x00\n        /* \"contracts/SocialToken.sol\":4806:4818  rewardAmount */\n      dup2\n        /* \"contracts/SocialToken.sol\":4806:4822  rewardAmount > 0 */\n      gt\n        /* \"contracts/SocialToken.sol\":4802:4981  if (rewardAmount > 0) {... */\n      iszero\n      tag_379\n      jumpi\n        /* \"contracts/SocialToken.sol\":4838:4872  _burn(address(this), rewardAmount) */\n      tag_380\n        /* \"contracts/SocialToken.sol\":4852:4856  this */\n      address\n        /* \"contracts/SocialToken.sol\":4859:4871  rewardAmount */\n      dup3\n        /* \"contracts/SocialToken.sol\":4838:4843  _burn */\n      tag_381\n        /* \"contracts/SocialToken.sol\":4838:4872  _burn(address(this), rewardAmount) */\n      jump\t// in\n    tag_380:\n        /* \"contracts/SocialToken.sol\":4891:4970  RewardDistributed(rewardAmount, metrics.sentimentScore, metrics.engagementRate) */\n      0xda04004d58812f3e164f58e498158acca1b0054d975fce0e3bafdf56f2e254ba\n        /* \"contracts/SocialToken.sol\":4909:4921  rewardAmount */\n      dup2\n        /* \"contracts/SocialToken.sol\":4923:4930  metrics */\n      dup4\n        /* \"contracts/SocialToken.sol\":4923:4945  metrics.sentimentScore */\n      0x20\n      add\n      mload\n        /* \"contracts/SocialToken.sol\":4947:4954  metrics */\n      dup5\n        /* \"contracts/SocialToken.sol\":4947:4969  metrics.engagementRate */\n      0x40\n      add\n      mload\n        /* \"contracts/SocialToken.sol\":4891:4970  RewardDistributed(rewardAmount, metrics.sentimentScore, metrics.engagementRate) */\n      mload(0x40)\n      tag_382\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_383\n      jump\t// in\n    tag_382:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/SocialToken.sol\":4802:4981  if (rewardAmount > 0) {... */\n    tag_379:\n        /* \"contracts/SocialToken.sol\":4633:4987  {... */\n      pop\n        /* \"contracts/SocialToken.sol\":4541:4987  function _handlePositiveMetrics(ISocialMetricsOracle.SocialMetrics memory metrics) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/SocialToken.sol\":4993:5441  function _handleNegativeMetrics(ISocialMetricsOracle.SocialMetrics memory metrics) internal {... */\n    tag_252:\n        /* \"contracts/SocialToken.sol\":5095:5116  uint256 penaltyAmount */\n      0x00\n        /* \"contracts/SocialToken.sol\":5119:5245  _calculatePenalty(... */\n      tag_385\n        /* \"contracts/SocialToken.sol\":5150:5157  metrics */\n      dup3\n        /* \"contracts/SocialToken.sol\":5150:5172  metrics.sentimentScore */\n      0x20\n      add\n      mload\n        /* \"contracts/SocialToken.sol\":5186:5193  metrics */\n      dup4\n        /* \"contracts/SocialToken.sol\":5186:5208  metrics.engagementRate */\n      0x40\n      add\n      mload\n        /* \"contracts/SocialToken.sol\":5222:5235  totalSupply() */\n      tag_386\n        /* \"contracts/SocialToken.sol\":5222:5233  totalSupply */\n      tag_54\n        /* \"contracts/SocialToken.sol\":5222:5235  totalSupply() */\n      jump\t// in\n    tag_386:\n        /* \"contracts/SocialToken.sol\":5119:5136  _calculatePenalty */\n      tag_387\n        /* \"contracts/SocialToken.sol\":5119:5245  _calculatePenalty(... */\n      jump\t// in\n    tag_385:\n        /* \"contracts/SocialToken.sol\":5095:5245  uint256 penaltyAmount = _calculatePenalty(... */\n      swap1\n      pop\n        /* \"contracts/SocialToken.sol\":5276:5277  0 */\n      0x00\n        /* \"contracts/SocialToken.sol\":5260:5273  penaltyAmount */\n      dup2\n        /* \"contracts/SocialToken.sol\":5260:5277  penaltyAmount > 0 */\n      gt\n        /* \"contracts/SocialToken.sol\":5256:5435  if (penaltyAmount > 0) {... */\n      iszero\n      tag_388\n      jumpi\n        /* \"contracts/SocialToken.sol\":5293:5328  _mint(address(this), penaltyAmount) */\n      tag_389\n        /* \"contracts/SocialToken.sol\":5307:5311  this */\n      address\n        /* \"contracts/SocialToken.sol\":5314:5327  penaltyAmount */\n      dup3\n        /* \"contracts/SocialToken.sol\":5293:5298  _mint */\n      tag_284\n        /* \"contracts/SocialToken.sol\":5293:5328  _mint(address(this), penaltyAmount) */\n      jump\t// in\n    tag_389:\n        /* \"contracts/SocialToken.sol\":5347:5424  PenaltyApplied(penaltyAmount, metrics.sentimentScore, metrics.engagementRate) */\n      0x0958e73d0165cd8413c567ddcfecfbdfb06498a561de5cd56849c2b463f66cdf\n        /* \"contracts/SocialToken.sol\":5362:5375  penaltyAmount */\n      dup2\n        /* \"contracts/SocialToken.sol\":5377:5384  metrics */\n      dup4\n        /* \"contracts/SocialToken.sol\":5377:5399  metrics.sentimentScore */\n      0x20\n      add\n      mload\n        /* \"contracts/SocialToken.sol\":5401:5408  metrics */\n      dup5\n        /* \"contracts/SocialToken.sol\":5401:5423  metrics.engagementRate */\n      0x40\n      add\n      mload\n        /* \"contracts/SocialToken.sol\":5347:5424  PenaltyApplied(penaltyAmount, metrics.sentimentScore, metrics.engagementRate) */\n      mload(0x40)\n      tag_390\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_383\n      jump\t// in\n    tag_390:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/SocialToken.sol\":5256:5435  if (penaltyAmount > 0) {... */\n    tag_388:\n        /* \"contracts/SocialToken.sol\":5085:5441  {... */\n      pop\n        /* \"contracts/SocialToken.sol\":4993:5441  function _handleNegativeMetrics(ISocialMetricsOracle.SocialMetrics memory metrics) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2282:2429  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_270:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_393\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_394\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_393:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2422  __ERC20_init_unchained(name_, symbol_) */\n      tag_396\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2407:2412  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2414:2421  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2406  __ERC20_init_unchained */\n      tag_397\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2422  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_396:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2282:2429  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_272:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_399\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_394\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_399:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_401\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_402\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_401:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1084:1181  function __Pausable_init() internal onlyInitializing {... */\n    tag_274:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_404\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_394\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_404:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      tag_406\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1172  __Pausable_init_unchained */\n      tag_407\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      jump\t// in\n    tag_406:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1084:1181  function __Pausable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_276:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_409\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_394\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_409:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8733:8941  function _mint(address account, uint256 value) internal {... */\n    tag_284:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8822:8823  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8824  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8810  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8824  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8799:8890  if (account == address(0)) {... */\n      tag_412\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8876:8877  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8847:8879  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_413\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_413:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8799:8890  if (account == address(0)) {... */\n    tag_412:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8934  _update(address(0), account, value) */\n      tag_414\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8915:8916  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8919:8926  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8928:8933  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8906  _update */\n      tag_333\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8934  _update(address(0), account, value) */\n      jump\t// in\n    tag_414:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8733:8941  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SocialToken.sol\":5447:6040  function _calculateReward(... */\n    tag_298:\n        /* \"contracts/SocialToken.sol\":5594:5601  uint256 */\n      0x00\n        /* \"contracts/SocialToken.sol\":5613:5640  uint256 sentimentMultiplier */\n      dup1\n        /* \"contracts/SocialToken.sol\":5643:5690  sentimentScore.sub(mechanics.minSentimentScore) */\n      tag_416\n        /* \"contracts/SocialToken.sol\":5662:5671  mechanics */\n      0x33\n        /* \"contracts/SocialToken.sol\":5662:5689  mechanics.minSentimentScore */\n      0x00\n      add\n      sload\n        /* \"contracts/SocialToken.sol\":5643:5657  sentimentScore */\n      dup7\n        /* \"contracts/SocialToken.sol\":5643:5661  sentimentScore.sub */\n      tag_417\n      swap1\n        /* \"contracts/SocialToken.sol\":5643:5690  sentimentScore.sub(mechanics.minSentimentScore) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_416:\n        /* \"contracts/SocialToken.sol\":5613:5690  uint256 sentimentMultiplier = sentimentScore.sub(mechanics.minSentimentScore) */\n      swap1\n      pop\n        /* \"contracts/SocialToken.sol\":5700:5728  uint256 engagementMultiplier */\n      0x00\n        /* \"contracts/SocialToken.sol\":5731:5778  engagementRate.sub(mechanics.minEngagementRate) */\n      tag_418\n        /* \"contracts/SocialToken.sol\":5750:5759  mechanics */\n      0x33\n        /* \"contracts/SocialToken.sol\":5750:5777  mechanics.minEngagementRate */\n      0x01\n      add\n      sload\n        /* \"contracts/SocialToken.sol\":5731:5745  engagementRate */\n      dup7\n        /* \"contracts/SocialToken.sol\":5731:5749  engagementRate.sub */\n      tag_417\n      swap1\n        /* \"contracts/SocialToken.sol\":5731:5778  engagementRate.sub(mechanics.minEngagementRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_418:\n        /* \"contracts/SocialToken.sol\":5700:5778  uint256 engagementMultiplier = engagementRate.sub(mechanics.minEngagementRate) */\n      swap1\n      pop\n        /* \"contracts/SocialToken.sol\":5804:6006  mechanics.rewardBaseAmount... */\n      tag_419\n        /* \"contracts/SocialToken.sol\":6002:6005  100 */\n      0x64\n        /* \"contracts/SocialToken.sol\":5804:5960  mechanics.rewardBaseAmount... */\n      tag_420\n        /* \"contracts/SocialToken.sol\":5954:5959  10000 */\n      0x2710\n        /* \"contracts/SocialToken.sol\":5804:5936  mechanics.rewardBaseAmount... */\n      tag_421\n        /* \"contracts/SocialToken.sol\":5925:5935  baseAmount */\n      dup9\n        /* \"contracts/SocialToken.sol\":5804:5907  mechanics.rewardBaseAmount... */\n      tag_422\n        /* \"contracts/SocialToken.sol\":5886:5906  engagementMultiplier */\n      dup8\n        /* \"contracts/SocialToken.sol\":5804:5868  mechanics.rewardBaseAmount... */\n      tag_423\n        /* \"contracts/SocialToken.sol\":5848:5867  sentimentMultiplier */\n      dup11\n        /* \"contracts/SocialToken.sol\":5804:5813  mechanics */\n      0x33\n        /* \"contracts/SocialToken.sol\":5804:5830  mechanics.rewardBaseAmount */\n      0x03\n      add\n      sload\n        /* \"contracts/SocialToken.sol\":5804:5847  mechanics.rewardBaseAmount... */\n      tag_424\n      swap1\n        /* \"contracts/SocialToken.sol\":5804:5868  mechanics.rewardBaseAmount... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_423:\n        /* \"contracts/SocialToken.sol\":5804:5885  mechanics.rewardBaseAmount... */\n      tag_424\n      swap1\n        /* \"contracts/SocialToken.sol\":5804:5907  mechanics.rewardBaseAmount... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_422:\n        /* \"contracts/SocialToken.sol\":5804:5924  mechanics.rewardBaseAmount... */\n      tag_424\n      swap1\n        /* \"contracts/SocialToken.sol\":5804:5936  mechanics.rewardBaseAmount... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_421:\n        /* \"contracts/SocialToken.sol\":5804:5953  mechanics.rewardBaseAmount... */\n      tag_425\n      swap1\n        /* \"contracts/SocialToken.sol\":5804:5960  mechanics.rewardBaseAmount... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_420:\n        /* \"contracts/SocialToken.sol\":5804:6001  mechanics.rewardBaseAmount... */\n      tag_425\n      swap1\n        /* \"contracts/SocialToken.sol\":5804:6006  mechanics.rewardBaseAmount... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_419:\n        /* \"contracts/SocialToken.sol\":5797:6006  return mechanics.rewardBaseAmount... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/SocialToken.sol\":5447:6040  function _calculateReward(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10976:11463  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_313:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11084:11106  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11127  _getERC20Storage() */\n      tag_427\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11125  _getERC20Storage */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11127  _getERC20Storage() */\n      jump\t// in\n    tag_427:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11084:11127  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11158:11159  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11160  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11146  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11160  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11137:11226  if (owner == address(0)) {... */\n      tag_428\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11212:11213  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11183:11215  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_429\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_429:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11137:11226  if (owner == address(0)) {... */\n    tag_428:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11258:11259  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11260  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11246  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11260  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11235:11325  if (spender == address(0)) {... */\n      tag_430\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11311:11312  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11283:11314  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_431\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_431:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11235:11325  if (spender == address(0)) {... */\n    tag_430:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11366:11371  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11335  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11347  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11354  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11348:11353  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11354  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11363  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11355:11362  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11363  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11371  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11385:11394  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11381:11457  if (emitEvent) {... */\n      iszero\n      tag_432\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11431:11438  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11424:11429  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11440:11445  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_433\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_433:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11381:11457  if (emitEvent) {... */\n    tag_432:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11074:11463  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10976:11463  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7220:8390  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_333:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7305:7327  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7348  _getERC20Storage() */\n      tag_435\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7346  _getERC20Storage */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7348  _getERC20Storage() */\n      jump\t// in\n    tag_435:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7305:7348  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7378:7379  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7380  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7366  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7380  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n      tag_436\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7516:7521  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7499  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7512  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7521  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_437\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_437:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n      jump(tag_438)\n    tag_436:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7552:7571  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7575  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7585  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7591  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7586:7590  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7591  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7552:7591  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7623:7628  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7609:7620  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7609:7628  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7605:7720  if (fromBalance < value) {... */\n      iszero\n      tag_439\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7680:7684  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7686:7697  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7699:7704  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7655:7705  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_440\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_325\n      jump\t// in\n    tag_440:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7605:7720  if (fromBalance < value) {... */\n    tag_439:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7874:7879  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7860:7871  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7860:7879  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7841  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7851  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7857  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7852:7856  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7857  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7879  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7538:7904  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n    tag_438:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7932:7933  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7934  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7920  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7934  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n      tag_441\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8099:8104  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8082  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8095  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8104  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n      jump(tag_442)\n    tag_441:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8313:8318  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8295  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8305  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8309  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8306:8308  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8309  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8318  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n    tag_442:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8373:8375  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8367:8371  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8377:8382  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      mload(0x40)\n      tag_443\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_443:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7295:8390  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7220:8390  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2209:2315  function _requirePaused() internal view virtual {... */\n    tag_336:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2283  paused() */\n      tag_445\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2281  paused */\n      tag_92\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2283  paused() */\n      jump\t// in\n    tag_445:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2267:2308  require(paused(), \"Pausable: not paused\") */\n      tag_446\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_447\n      swap1\n      tag_448\n      jump\t// in\n    tag_447:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_446:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2209:2315  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1493:1500  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_450\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1546:1565  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1545  StorageSlot.getAddressSlot */\n      tag_451\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_450:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1512:1572  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_453\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_454\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_453:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2425:2442  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2472:2473  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2462  data */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      iszero\n      tag_455\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_456\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_457\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_456:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      jump(tag_458)\n    tag_455:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_459\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_460\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n    tag_459:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_458:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9259:9465  function _burn(address account, uint256 value) internal {... */\n    tag_381:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9348:9349  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9329:9350  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9329:9336  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9329:9350  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9325:9414  if (account == address(0)) {... */\n      tag_462\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9400:9401  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9373:9403  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_463\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_463:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9325:9414  if (account == address(0)) {... */\n    tag_462:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9423:9458  _update(account, address(0), value) */\n      tag_464\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9431:9438  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9448:9449  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9452:9457  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9423:9430  _update */\n      tag_333\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9423:9458  _update(account, address(0), value) */\n      jump\t// in\n    tag_464:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9259:9465  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SocialToken.sol\":6046:6745  function _calculatePenalty(... */\n    tag_387:\n        /* \"contracts/SocialToken.sol\":6194:6201  uint256 */\n      0x00\n        /* \"contracts/SocialToken.sol\":6213:6234  uint256 sentimentDiff */\n      dup1\n        /* \"contracts/SocialToken.sol\":6267:6281  sentimentScore */\n      dup5\n        /* \"contracts/SocialToken.sol\":6237:6246  mechanics */\n      0x33\n        /* \"contracts/SocialToken.sol\":6237:6264  mechanics.minSentimentScore */\n      0x00\n      add\n      sload\n        /* \"contracts/SocialToken.sol\":6237:6281  mechanics.minSentimentScore > sentimentScore */\n      gt\n        /* \"contracts/SocialToken.sol\":6237:6348  mechanics.minSentimentScore > sentimentScore ? ... */\n      tag_466\n      jumpi\n        /* \"contracts/SocialToken.sol\":6347:6348  0 */\n      0x00\n        /* \"contracts/SocialToken.sol\":6237:6348  mechanics.minSentimentScore > sentimentScore ? ... */\n      jump(tag_467)\n    tag_466:\n        /* \"contracts/SocialToken.sol\":6297:6344  mechanics.minSentimentScore.sub(sentimentScore) */\n      tag_468\n        /* \"contracts/SocialToken.sol\":6329:6343  sentimentScore */\n      dup6\n        /* \"contracts/SocialToken.sol\":6297:6306  mechanics */\n      0x33\n        /* \"contracts/SocialToken.sol\":6297:6324  mechanics.minSentimentScore */\n      0x00\n      add\n      sload\n        /* \"contracts/SocialToken.sol\":6297:6328  mechanics.minSentimentScore.sub */\n      tag_417\n      swap1\n        /* \"contracts/SocialToken.sol\":6297:6344  mechanics.minSentimentScore.sub(sentimentScore) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_468:\n        /* \"contracts/SocialToken.sol\":6237:6348  mechanics.minSentimentScore > sentimentScore ? ... */\n    tag_467:\n        /* \"contracts/SocialToken.sol\":6213:6348  uint256 sentimentDiff = mechanics.minSentimentScore > sentimentScore ? ... */\n      swap1\n      pop\n        /* \"contracts/SocialToken.sol\":6358:6380  uint256 engagementDiff */\n      0x00\n        /* \"contracts/SocialToken.sol\":6413:6427  engagementRate */\n      dup5\n        /* \"contracts/SocialToken.sol\":6383:6392  mechanics */\n      0x33\n        /* \"contracts/SocialToken.sol\":6383:6410  mechanics.minEngagementRate */\n      0x01\n      add\n      sload\n        /* \"contracts/SocialToken.sol\":6383:6427  mechanics.minEngagementRate > engagementRate */\n      gt\n        /* \"contracts/SocialToken.sol\":6383:6494  mechanics.minEngagementRate > engagementRate ? ... */\n      tag_469\n      jumpi\n        /* \"contracts/SocialToken.sol\":6493:6494  0 */\n      0x00\n        /* \"contracts/SocialToken.sol\":6383:6494  mechanics.minEngagementRate > engagementRate ? ... */\n      jump(tag_470)\n    tag_469:\n        /* \"contracts/SocialToken.sol\":6443:6490  mechanics.minEngagementRate.sub(engagementRate) */\n      tag_471\n        /* \"contracts/SocialToken.sol\":6475:6489  engagementRate */\n      dup6\n        /* \"contracts/SocialToken.sol\":6443:6452  mechanics */\n      0x33\n        /* \"contracts/SocialToken.sol\":6443:6470  mechanics.minEngagementRate */\n      0x01\n      add\n      sload\n        /* \"contracts/SocialToken.sol\":6443:6474  mechanics.minEngagementRate.sub */\n      tag_417\n      swap1\n        /* \"contracts/SocialToken.sol\":6443:6490  mechanics.minEngagementRate.sub(engagementRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_471:\n        /* \"contracts/SocialToken.sol\":6383:6494  mechanics.minEngagementRate > engagementRate ? ... */\n    tag_470:\n        /* \"contracts/SocialToken.sol\":6358:6494  uint256 engagementDiff = mechanics.minEngagementRate > engagementRate ? ... */\n      swap1\n      pop\n        /* \"contracts/SocialToken.sol\":6520:6711  mechanics.penaltyBaseAmount... */\n      tag_472\n        /* \"contracts/SocialToken.sol\":6707:6710  100 */\n      0x64\n        /* \"contracts/SocialToken.sol\":6520:6665  mechanics.penaltyBaseAmount... */\n      tag_473\n        /* \"contracts/SocialToken.sol\":6659:6664  10000 */\n      0x2710\n        /* \"contracts/SocialToken.sol\":6520:6641  mechanics.penaltyBaseAmount... */\n      tag_474\n        /* \"contracts/SocialToken.sol\":6630:6640  baseAmount */\n      dup9\n        /* \"contracts/SocialToken.sol\":6520:6612  mechanics.penaltyBaseAmount... */\n      tag_475\n        /* \"contracts/SocialToken.sol\":6597:6611  engagementDiff */\n      dup8\n        /* \"contracts/SocialToken.sol\":6520:6579  mechanics.penaltyBaseAmount... */\n      tag_476\n        /* \"contracts/SocialToken.sol\":6565:6578  sentimentDiff */\n      dup11\n        /* \"contracts/SocialToken.sol\":6520:6529  mechanics */\n      0x33\n        /* \"contracts/SocialToken.sol\":6520:6547  mechanics.penaltyBaseAmount */\n      0x04\n      add\n      sload\n        /* \"contracts/SocialToken.sol\":6520:6564  mechanics.penaltyBaseAmount... */\n      tag_424\n      swap1\n        /* \"contracts/SocialToken.sol\":6520:6579  mechanics.penaltyBaseAmount... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_476:\n        /* \"contracts/SocialToken.sol\":6520:6596  mechanics.penaltyBaseAmount... */\n      tag_424\n      swap1\n        /* \"contracts/SocialToken.sol\":6520:6612  mechanics.penaltyBaseAmount... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_475:\n        /* \"contracts/SocialToken.sol\":6520:6629  mechanics.penaltyBaseAmount... */\n      tag_424\n      swap1\n        /* \"contracts/SocialToken.sol\":6520:6641  mechanics.penaltyBaseAmount... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_474:\n        /* \"contracts/SocialToken.sol\":6520:6658  mechanics.penaltyBaseAmount... */\n      tag_425\n      swap1\n        /* \"contracts/SocialToken.sol\":6520:6665  mechanics.penaltyBaseAmount... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_473:\n        /* \"contracts/SocialToken.sol\":6520:6706  mechanics.penaltyBaseAmount... */\n      tag_425\n      swap1\n        /* \"contracts/SocialToken.sol\":6520:6711  mechanics.penaltyBaseAmount... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_472:\n        /* \"contracts/SocialToken.sol\":6513:6711  return mechanics.penaltyBaseAmount... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/SocialToken.sol\":6046:6745  function _calculatePenalty(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_394:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_478\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_479\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_478:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_480\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_480:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2435:2651  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_397:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_482\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_394\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_482:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2569  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2590  _getERC20Storage() */\n      tag_484\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2588  _getERC20Storage */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2590  _getERC20Storage() */\n      jump\t// in\n    tag_484:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2590  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2610:2615  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2601  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2607  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2615  $._name = name_ */\n      swap1\n      dup2\n      tag_485\n      swap2\n      swap1\n      tag_486\n      jump\t// in\n    tag_485:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2637:2644  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2626  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2634  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2644  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_487\n      swap2\n      swap1\n      tag_486\n      jump\t// in\n    tag_487:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2537:2651  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2435:2651  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_402:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_489\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_394\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_489:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_491\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_492\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_492:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_491:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_493\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_493:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_407:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_495\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_394\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_495:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1270:1275  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1260:1267  _paused */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1260:1275  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_417:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_498\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_498:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_424:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_500\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_500:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_425:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_502\n      swap2\n      swap1\n      tag_503\n      jump\t// in\n    tag_502:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_451:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1960:1981  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2042:2046  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2032:2046  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_454:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_506\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1834:1851  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_507\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_507:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_506:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1928:1945  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_508\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1899:1918  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1898  StorageSlot.getAddressSlot */\n      tag_451\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_508:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1925  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_457:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3983:3995  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4008:4020  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4022:4045  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4055  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4068  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4069:4073  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n      mload(0x40)\n      tag_510\n      swap2\n      swap1\n      tag_511\n      jump\t// in\n    tag_510:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_514\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_513)\n    tag_514:\n      0x60\n      swap2\n      pop\n    tag_513:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      tag_515\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4118:4124  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4126:4133  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4135:4145  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4117  verifyCallResultFromTarget */\n      tag_516\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_515:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4084:4146  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_460:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6175:6176  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      iszero\n      tag_518\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n    tag_518:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_479:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_520\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_520:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n    tag_516:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4565:4577  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4594:4601  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      tag_522\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      tag_523\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:4635  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4624  _revert */\n      tag_524\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      jump\t// in\n    tag_523:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      jump(tag_525)\n    tag_522:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4862:4863  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4851  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4858  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_526\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4889:4890  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4873  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4885  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n    tag_526:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_527\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4934:4940  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_528\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_528:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_527:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4986  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4969:4986  return returndata */\n      swap1\n      pop\n      jump(tag_521)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n    tag_525:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n    tag_521:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5543:6030  function _revert(bytes memory returndata) private pure {... */\n    tag_524:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5694:5695  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5684  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5691  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n      iszero\n      tag_530\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5871:5881  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5865:5882  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5927:5942  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5914:5924  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5910:5912  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5906:5925  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5899:5943  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n    tag_530:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n      mload(0x40)\n      0xd6bda27500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:106   */\n    tag_532:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_533:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_534:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_535:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_536:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_618\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_532\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":711:782   */\n      tag_619\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_533\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_620\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_534\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":881:910   */\n      tag_621\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_535\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_39:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_623\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_536\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_537:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_538:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_539:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_540:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_541:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_629\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_540\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_542:\n        /* \"#utility.yul\":1876:1900   */\n      tag_631\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_541\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_632\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_632:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_543:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_634\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_542\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_544:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_545:\n        /* \"#utility.yul\":2232:2256   */\n      tag_637\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_544\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_638\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_638:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_546:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_640\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_545\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_43:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_642\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_643\n      tag_538\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":2525:2644   */\n    tag_642:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_644\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_543\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_645\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_546\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_547:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_548:\n        /* \"#utility.yul\":3089:3110   */\n      tag_648\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_547\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_46:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_650\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_548\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3456   */\n    tag_549:\n        /* \"#utility.yul\":3448:3449   */\n      0x00\n        /* \"#utility.yul\":3445:3446   */\n      dup1\n        /* \"#utility.yul\":3438:3450   */\n      revert\n        /* \"#utility.yul\":3462:3642   */\n    tag_550:\n        /* \"#utility.yul\":3510:3587   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3507:3508   */\n      0x00\n        /* \"#utility.yul\":3500:3588   */\n      mstore\n        /* \"#utility.yul\":3607:3611   */\n      0x41\n        /* \"#utility.yul\":3604:3605   */\n      0x04\n        /* \"#utility.yul\":3597:3612   */\n      mstore\n        /* \"#utility.yul\":3631:3635   */\n      0x24\n        /* \"#utility.yul\":3628:3629   */\n      0x00\n        /* \"#utility.yul\":3621:3636   */\n      revert\n        /* \"#utility.yul\":3648:3929   */\n    tag_551:\n        /* \"#utility.yul\":3731:3758   */\n      tag_654\n        /* \"#utility.yul\":3753:3757   */\n      dup3\n        /* \"#utility.yul\":3731:3758   */\n      tag_535\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":3723:3729   */\n      dup2\n        /* \"#utility.yul\":3719:3759   */\n      add\n        /* \"#utility.yul\":3861:3867   */\n      dup2\n        /* \"#utility.yul\":3849:3859   */\n      dup2\n        /* \"#utility.yul\":3846:3868   */\n      lt\n        /* \"#utility.yul\":3825:3843   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3813:3823   */\n      dup3\n        /* \"#utility.yul\":3810:3844   */\n      gt\n        /* \"#utility.yul\":3807:3869   */\n      or\n        /* \"#utility.yul\":3804:3892   */\n      iszero\n      tag_655\n      jumpi\n        /* \"#utility.yul\":3872:3890   */\n      tag_656\n      tag_550\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":3804:3892   */\n    tag_655:\n        /* \"#utility.yul\":3912:3922   */\n      dup1\n        /* \"#utility.yul\":3908:3910   */\n      0x40\n        /* \"#utility.yul\":3901:3923   */\n      mstore\n        /* \"#utility.yul\":3691:3929   */\n      pop\n        /* \"#utility.yul\":3648:3929   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3935:4064   */\n    tag_552:\n        /* \"#utility.yul\":3969:3975   */\n      0x00\n        /* \"#utility.yul\":3996:4016   */\n      tag_658\n      tag_537\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":3986:4016   */\n      swap1\n      pop\n        /* \"#utility.yul\":4025:4058   */\n      tag_659\n        /* \"#utility.yul\":4053:4057   */\n      dup3\n        /* \"#utility.yul\":4045:4051   */\n      dup3\n        /* \"#utility.yul\":4025:4058   */\n      tag_551\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":3935:4064   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4234:5531   */\n    tag_554:\n        /* \"#utility.yul\":4315:4320   */\n      0x00\n        /* \"#utility.yul\":4359:4363   */\n      0xc0\n        /* \"#utility.yul\":4347:4356   */\n      dup3\n        /* \"#utility.yul\":4342:4345   */\n      dup5\n        /* \"#utility.yul\":4338:4357   */\n      sub\n        /* \"#utility.yul\":4334:4364   */\n      slt\n        /* \"#utility.yul\":4331:4448   */\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":4367:4446   */\n      tag_663\n      tag_549\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":4331:4448   */\n    tag_662:\n        /* \"#utility.yul\":4466:4487   */\n      tag_664\n        /* \"#utility.yul\":4482:4486   */\n      0xc0\n        /* \"#utility.yul\":4466:4487   */\n      tag_552\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":4457:4487   */\n      swap1\n      pop\n        /* \"#utility.yul\":4559:4560   */\n      0x00\n        /* \"#utility.yul\":4599:4648   */\n      tag_665\n        /* \"#utility.yul\":4644:4647   */\n      dup5\n        /* \"#utility.yul\":4635:4641   */\n      dup3\n        /* \"#utility.yul\":4624:4633   */\n      dup6\n        /* \"#utility.yul\":4620:4642   */\n      add\n        /* \"#utility.yul\":4599:4648   */\n      tag_546\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":4592:4596   */\n      0x00\n        /* \"#utility.yul\":4585:4590   */\n      dup4\n        /* \"#utility.yul\":4581:4597   */\n      add\n        /* \"#utility.yul\":4574:4649   */\n      mstore\n        /* \"#utility.yul\":4497:4660   */\n      pop\n        /* \"#utility.yul\":4732:4734   */\n      0x20\n        /* \"#utility.yul\":4773:4822   */\n      tag_666\n        /* \"#utility.yul\":4818:4821   */\n      dup5\n        /* \"#utility.yul\":4809:4815   */\n      dup3\n        /* \"#utility.yul\":4798:4807   */\n      dup6\n        /* \"#utility.yul\":4794:4816   */\n      add\n        /* \"#utility.yul\":4773:4822   */\n      tag_546\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":4766:4770   */\n      0x20\n        /* \"#utility.yul\":4759:4764   */\n      dup4\n        /* \"#utility.yul\":4755:4771   */\n      add\n        /* \"#utility.yul\":4748:4823   */\n      mstore\n        /* \"#utility.yul\":4670:4834   */\n      pop\n        /* \"#utility.yul\":4902:4904   */\n      0x40\n        /* \"#utility.yul\":4943:4992   */\n      tag_667\n        /* \"#utility.yul\":4988:4991   */\n      dup5\n        /* \"#utility.yul\":4979:4985   */\n      dup3\n        /* \"#utility.yul\":4968:4977   */\n      dup6\n        /* \"#utility.yul\":4964:4986   */\n      add\n        /* \"#utility.yul\":4943:4992   */\n      tag_546\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":4936:4940   */\n      0x40\n        /* \"#utility.yul\":4929:4934   */\n      dup4\n        /* \"#utility.yul\":4925:4941   */\n      add\n        /* \"#utility.yul\":4918:4993   */\n      mstore\n        /* \"#utility.yul\":4844:5004   */\n      pop\n        /* \"#utility.yul\":5075:5077   */\n      0x60\n        /* \"#utility.yul\":5116:5165   */\n      tag_668\n        /* \"#utility.yul\":5161:5164   */\n      dup5\n        /* \"#utility.yul\":5152:5158   */\n      dup3\n        /* \"#utility.yul\":5141:5150   */\n      dup6\n        /* \"#utility.yul\":5137:5159   */\n      add\n        /* \"#utility.yul\":5116:5165   */\n      tag_546\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":5109:5113   */\n      0x60\n        /* \"#utility.yul\":5102:5107   */\n      dup4\n        /* \"#utility.yul\":5098:5114   */\n      add\n        /* \"#utility.yul\":5091:5166   */\n      mstore\n        /* \"#utility.yul\":5014:5177   */\n      pop\n        /* \"#utility.yul\":5249:5252   */\n      0x80\n        /* \"#utility.yul\":5291:5340   */\n      tag_669\n        /* \"#utility.yul\":5336:5339   */\n      dup5\n        /* \"#utility.yul\":5327:5333   */\n      dup3\n        /* \"#utility.yul\":5316:5325   */\n      dup6\n        /* \"#utility.yul\":5312:5334   */\n      add\n        /* \"#utility.yul\":5291:5340   */\n      tag_546\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":5284:5288   */\n      0x80\n        /* \"#utility.yul\":5277:5282   */\n      dup4\n        /* \"#utility.yul\":5273:5289   */\n      add\n        /* \"#utility.yul\":5266:5341   */\n      mstore\n        /* \"#utility.yul\":5187:5352   */\n      pop\n        /* \"#utility.yul\":5421:5424   */\n      0xa0\n        /* \"#utility.yul\":5463:5512   */\n      tag_670\n        /* \"#utility.yul\":5508:5511   */\n      dup5\n        /* \"#utility.yul\":5499:5505   */\n      dup3\n        /* \"#utility.yul\":5488:5497   */\n      dup6\n        /* \"#utility.yul\":5484:5506   */\n      add\n        /* \"#utility.yul\":5463:5512   */\n      tag_546\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":5456:5460   */\n      0xa0\n        /* \"#utility.yul\":5449:5454   */\n      dup4\n        /* \"#utility.yul\":5445:5461   */\n      add\n        /* \"#utility.yul\":5438:5513   */\n      mstore\n        /* \"#utility.yul\":5362:5524   */\n      pop\n        /* \"#utility.yul\":4234:5531   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5537:5931   */\n    tag_50:\n        /* \"#utility.yul\":5628:5634   */\n      0x00\n        /* \"#utility.yul\":5677:5680   */\n      0xc0\n        /* \"#utility.yul\":5665:5674   */\n      dup3\n        /* \"#utility.yul\":5656:5663   */\n      dup5\n        /* \"#utility.yul\":5652:5675   */\n      sub\n        /* \"#utility.yul\":5648:5681   */\n      slt\n        /* \"#utility.yul\":5645:5765   */\n      iszero\n      tag_672\n      jumpi\n        /* \"#utility.yul\":5684:5763   */\n      tag_673\n      tag_538\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":5645:5765   */\n    tag_672:\n        /* \"#utility.yul\":5804:5805   */\n      0x00\n        /* \"#utility.yul\":5829:5914   */\n      tag_674\n        /* \"#utility.yul\":5906:5913   */\n      dup5\n        /* \"#utility.yul\":5897:5903   */\n      dup3\n        /* \"#utility.yul\":5886:5895   */\n      dup6\n        /* \"#utility.yul\":5882:5904   */\n      add\n        /* \"#utility.yul\":5829:5914   */\n      tag_554\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":5819:5914   */\n      swap2\n      pop\n        /* \"#utility.yul\":5775:5924   */\n      pop\n        /* \"#utility.yul\":5537:5931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5937:6055   */\n    tag_555:\n        /* \"#utility.yul\":6024:6048   */\n      tag_676\n        /* \"#utility.yul\":6042:6047   */\n      dup2\n        /* \"#utility.yul\":6024:6048   */\n      tag_544\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":6019:6022   */\n      dup3\n        /* \"#utility.yul\":6012:6049   */\n      mstore\n        /* \"#utility.yul\":5937:6055   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6061:6283   */\n    tag_56:\n        /* \"#utility.yul\":6154:6158   */\n      0x00\n        /* \"#utility.yul\":6192:6194   */\n      0x20\n        /* \"#utility.yul\":6181:6190   */\n      dup3\n        /* \"#utility.yul\":6177:6195   */\n      add\n        /* \"#utility.yul\":6169:6195   */\n      swap1\n      pop\n        /* \"#utility.yul\":6205:6276   */\n      tag_678\n        /* \"#utility.yul\":6273:6274   */\n      0x00\n        /* \"#utility.yul\":6262:6271   */\n      dup4\n        /* \"#utility.yul\":6258:6275   */\n      add\n        /* \"#utility.yul\":6249:6255   */\n      dup5\n        /* \"#utility.yul\":6205:6276   */\n      tag_555\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":6061:6283   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6289:6618   */\n    tag_60:\n        /* \"#utility.yul\":6348:6354   */\n      0x00\n        /* \"#utility.yul\":6397:6399   */\n      0x20\n        /* \"#utility.yul\":6385:6394   */\n      dup3\n        /* \"#utility.yul\":6376:6383   */\n      dup5\n        /* \"#utility.yul\":6372:6395   */\n      sub\n        /* \"#utility.yul\":6368:6400   */\n      slt\n        /* \"#utility.yul\":6365:6484   */\n      iszero\n      tag_680\n      jumpi\n        /* \"#utility.yul\":6403:6482   */\n      tag_681\n      tag_538\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":6365:6484   */\n    tag_680:\n        /* \"#utility.yul\":6523:6524   */\n      0x00\n        /* \"#utility.yul\":6548:6601   */\n      tag_682\n        /* \"#utility.yul\":6593:6600   */\n      dup5\n        /* \"#utility.yul\":6584:6590   */\n      dup3\n        /* \"#utility.yul\":6573:6582   */\n      dup6\n        /* \"#utility.yul\":6569:6591   */\n      add\n        /* \"#utility.yul\":6548:6601   */\n      tag_543\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":6538:6601   */\n      swap2\n      pop\n        /* \"#utility.yul\":6494:6611   */\n      pop\n        /* \"#utility.yul\":6289:6618   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6624:7243   */\n    tag_65:\n        /* \"#utility.yul\":6701:6707   */\n      0x00\n        /* \"#utility.yul\":6709:6715   */\n      dup1\n        /* \"#utility.yul\":6717:6723   */\n      0x00\n        /* \"#utility.yul\":6766:6768   */\n      0x60\n        /* \"#utility.yul\":6754:6763   */\n      dup5\n        /* \"#utility.yul\":6745:6752   */\n      dup7\n        /* \"#utility.yul\":6741:6764   */\n      sub\n        /* \"#utility.yul\":6737:6769   */\n      slt\n        /* \"#utility.yul\":6734:6853   */\n      iszero\n      tag_684\n      jumpi\n        /* \"#utility.yul\":6772:6851   */\n      tag_685\n      tag_538\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":6734:6853   */\n    tag_684:\n        /* \"#utility.yul\":6892:6893   */\n      0x00\n        /* \"#utility.yul\":6917:6970   */\n      tag_686\n        /* \"#utility.yul\":6962:6969   */\n      dup7\n        /* \"#utility.yul\":6953:6959   */\n      dup3\n        /* \"#utility.yul\":6942:6951   */\n      dup8\n        /* \"#utility.yul\":6938:6960   */\n      add\n        /* \"#utility.yul\":6917:6970   */\n      tag_543\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":6907:6970   */\n      swap4\n      pop\n        /* \"#utility.yul\":6863:6980   */\n      pop\n        /* \"#utility.yul\":7019:7021   */\n      0x20\n        /* \"#utility.yul\":7045:7098   */\n      tag_687\n        /* \"#utility.yul\":7090:7097   */\n      dup7\n        /* \"#utility.yul\":7081:7087   */\n      dup3\n        /* \"#utility.yul\":7070:7079   */\n      dup8\n        /* \"#utility.yul\":7066:7088   */\n      add\n        /* \"#utility.yul\":7045:7098   */\n      tag_543\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":7035:7098   */\n      swap3\n      pop\n        /* \"#utility.yul\":6990:7108   */\n      pop\n        /* \"#utility.yul\":7147:7149   */\n      0x40\n        /* \"#utility.yul\":7173:7226   */\n      tag_688\n        /* \"#utility.yul\":7218:7225   */\n      dup7\n        /* \"#utility.yul\":7209:7215   */\n      dup3\n        /* \"#utility.yul\":7198:7207   */\n      dup8\n        /* \"#utility.yul\":7194:7216   */\n      add\n        /* \"#utility.yul\":7173:7226   */\n      tag_546\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":7163:7226   */\n      swap2\n      pop\n        /* \"#utility.yul\":7118:7236   */\n      pop\n        /* \"#utility.yul\":6624:7243   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7249:7335   */\n    tag_556:\n        /* \"#utility.yul\":7284:7291   */\n      0x00\n        /* \"#utility.yul\":7324:7328   */\n      0xff\n        /* \"#utility.yul\":7317:7322   */\n      dup3\n        /* \"#utility.yul\":7313:7329   */\n      and\n        /* \"#utility.yul\":7302:7329   */\n      swap1\n      pop\n        /* \"#utility.yul\":7249:7335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7341:7453   */\n    tag_557:\n        /* \"#utility.yul\":7424:7446   */\n      tag_691\n        /* \"#utility.yul\":7440:7445   */\n      dup2\n        /* \"#utility.yul\":7424:7446   */\n      tag_556\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":7419:7422   */\n      dup3\n        /* \"#utility.yul\":7412:7447   */\n      mstore\n        /* \"#utility.yul\":7341:7453   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7459:7673   */\n    tag_72:\n        /* \"#utility.yul\":7548:7552   */\n      0x00\n        /* \"#utility.yul\":7586:7588   */\n      0x20\n        /* \"#utility.yul\":7575:7584   */\n      dup3\n        /* \"#utility.yul\":7571:7589   */\n      add\n        /* \"#utility.yul\":7563:7589   */\n      swap1\n      pop\n        /* \"#utility.yul\":7599:7666   */\n      tag_693\n        /* \"#utility.yul\":7663:7664   */\n      0x00\n        /* \"#utility.yul\":7652:7661   */\n      dup4\n        /* \"#utility.yul\":7648:7665   */\n      add\n        /* \"#utility.yul\":7639:7645   */\n      dup5\n        /* \"#utility.yul\":7599:7666   */\n      tag_557\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":7459:7673   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7679:8454   */\n    tag_77:\n        /* \"#utility.yul\":7912:7916   */\n      0x00\n        /* \"#utility.yul\":7950:7953   */\n      0xc0\n        /* \"#utility.yul\":7939:7948   */\n      dup3\n        /* \"#utility.yul\":7935:7954   */\n      add\n        /* \"#utility.yul\":7927:7954   */\n      swap1\n      pop\n        /* \"#utility.yul\":7964:8035   */\n      tag_695\n        /* \"#utility.yul\":8032:8033   */\n      0x00\n        /* \"#utility.yul\":8021:8030   */\n      dup4\n        /* \"#utility.yul\":8017:8034   */\n      add\n        /* \"#utility.yul\":8008:8014   */\n      dup10\n        /* \"#utility.yul\":7964:8035   */\n      tag_555\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":8045:8117   */\n      tag_696\n        /* \"#utility.yul\":8113:8115   */\n      0x20\n        /* \"#utility.yul\":8102:8111   */\n      dup4\n        /* \"#utility.yul\":8098:8116   */\n      add\n        /* \"#utility.yul\":8089:8095   */\n      dup9\n        /* \"#utility.yul\":8045:8117   */\n      tag_555\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":8127:8199   */\n      tag_697\n        /* \"#utility.yul\":8195:8197   */\n      0x40\n        /* \"#utility.yul\":8184:8193   */\n      dup4\n        /* \"#utility.yul\":8180:8198   */\n      add\n        /* \"#utility.yul\":8171:8177   */\n      dup8\n        /* \"#utility.yul\":8127:8199   */\n      tag_555\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":8209:8281   */\n      tag_698\n        /* \"#utility.yul\":8277:8279   */\n      0x60\n        /* \"#utility.yul\":8266:8275   */\n      dup4\n        /* \"#utility.yul\":8262:8280   */\n      add\n        /* \"#utility.yul\":8253:8259   */\n      dup7\n        /* \"#utility.yul\":8209:8281   */\n      tag_555\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":8291:8364   */\n      tag_699\n        /* \"#utility.yul\":8359:8362   */\n      0x80\n        /* \"#utility.yul\":8348:8357   */\n      dup4\n        /* \"#utility.yul\":8344:8363   */\n      add\n        /* \"#utility.yul\":8335:8341   */\n      dup6\n        /* \"#utility.yul\":8291:8364   */\n      tag_555\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":8374:8447   */\n      tag_700\n        /* \"#utility.yul\":8442:8445   */\n      0xa0\n        /* \"#utility.yul\":8431:8440   */\n      dup4\n        /* \"#utility.yul\":8427:8446   */\n      add\n        /* \"#utility.yul\":8418:8424   */\n      dup5\n        /* \"#utility.yul\":8374:8447   */\n      tag_555\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":7679:8454   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8460:8577   */\n    tag_558:\n        /* \"#utility.yul\":8569:8570   */\n      0x00\n        /* \"#utility.yul\":8566:8567   */\n      dup1\n        /* \"#utility.yul\":8559:8571   */\n      revert\n        /* \"#utility.yul\":8583:8700   */\n    tag_559:\n        /* \"#utility.yul\":8692:8693   */\n      0x00\n        /* \"#utility.yul\":8689:8690   */\n      dup1\n        /* \"#utility.yul\":8682:8694   */\n      revert\n        /* \"#utility.yul\":8706:9013   */\n    tag_560:\n        /* \"#utility.yul\":8767:8771   */\n      0x00\n        /* \"#utility.yul\":8857:8875   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8849:8855   */\n      dup3\n        /* \"#utility.yul\":8846:8876   */\n      gt\n        /* \"#utility.yul\":8843:8899   */\n      iszero\n      tag_704\n      jumpi\n        /* \"#utility.yul\":8879:8897   */\n      tag_705\n      tag_550\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":8843:8899   */\n    tag_704:\n        /* \"#utility.yul\":8917:8946   */\n      tag_706\n        /* \"#utility.yul\":8939:8945   */\n      dup3\n        /* \"#utility.yul\":8917:8946   */\n      tag_535\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":8909:8946   */\n      swap1\n      pop\n        /* \"#utility.yul\":9001:9005   */\n      0x20\n        /* \"#utility.yul\":8995:8999   */\n      dup2\n        /* \"#utility.yul\":8991:9006   */\n      add\n        /* \"#utility.yul\":8983:9006   */\n      swap1\n      pop\n        /* \"#utility.yul\":8706:9013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9019:9167   */\n    tag_561:\n        /* \"#utility.yul\":9117:9123   */\n      dup3\n        /* \"#utility.yul\":9112:9115   */\n      dup2\n        /* \"#utility.yul\":9107:9110   */\n      dup4\n        /* \"#utility.yul\":9094:9124   */\n      calldatacopy\n        /* \"#utility.yul\":9158:9159   */\n      0x00\n        /* \"#utility.yul\":9149:9155   */\n      dup4\n        /* \"#utility.yul\":9144:9147   */\n      dup4\n        /* \"#utility.yul\":9140:9156   */\n      add\n        /* \"#utility.yul\":9133:9160   */\n      mstore\n        /* \"#utility.yul\":9019:9167   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9173:9596   */\n    tag_562:\n        /* \"#utility.yul\":9250:9255   */\n      0x00\n        /* \"#utility.yul\":9275:9340   */\n      tag_709\n        /* \"#utility.yul\":9291:9339   */\n      tag_710\n        /* \"#utility.yul\":9332:9338   */\n      dup5\n        /* \"#utility.yul\":9291:9339   */\n      tag_560\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":9275:9340   */\n      tag_552\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":9266:9340   */\n      swap1\n      pop\n        /* \"#utility.yul\":9363:9369   */\n      dup3\n        /* \"#utility.yul\":9356:9361   */\n      dup2\n        /* \"#utility.yul\":9349:9370   */\n      mstore\n        /* \"#utility.yul\":9401:9405   */\n      0x20\n        /* \"#utility.yul\":9394:9399   */\n      dup2\n        /* \"#utility.yul\":9390:9406   */\n      add\n        /* \"#utility.yul\":9439:9442   */\n      dup5\n        /* \"#utility.yul\":9430:9436   */\n      dup5\n        /* \"#utility.yul\":9425:9428   */\n      dup5\n        /* \"#utility.yul\":9421:9437   */\n      add\n        /* \"#utility.yul\":9418:9443   */\n      gt\n        /* \"#utility.yul\":9415:9527   */\n      iszero\n      tag_711\n      jumpi\n        /* \"#utility.yul\":9446:9525   */\n      tag_712\n      tag_559\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":9415:9527   */\n    tag_711:\n        /* \"#utility.yul\":9536:9590   */\n      tag_713\n        /* \"#utility.yul\":9583:9589   */\n      dup5\n        /* \"#utility.yul\":9578:9581   */\n      dup3\n        /* \"#utility.yul\":9573:9576   */\n      dup6\n        /* \"#utility.yul\":9536:9590   */\n      tag_561\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":9256:9596   */\n      pop\n        /* \"#utility.yul\":9173:9596   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9615:9953   */\n    tag_563:\n        /* \"#utility.yul\":9670:9675   */\n      0x00\n        /* \"#utility.yul\":9719:9722   */\n      dup3\n        /* \"#utility.yul\":9712:9716   */\n      0x1f\n        /* \"#utility.yul\":9704:9710   */\n      dup4\n        /* \"#utility.yul\":9700:9717   */\n      add\n        /* \"#utility.yul\":9696:9723   */\n      slt\n        /* \"#utility.yul\":9686:9808   */\n      tag_715\n      jumpi\n        /* \"#utility.yul\":9727:9806   */\n      tag_716\n      tag_558\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":9686:9808   */\n    tag_715:\n        /* \"#utility.yul\":9844:9850   */\n      dup2\n        /* \"#utility.yul\":9831:9851   */\n      calldataload\n        /* \"#utility.yul\":9869:9947   */\n      tag_717\n        /* \"#utility.yul\":9943:9946   */\n      dup5\n        /* \"#utility.yul\":9935:9941   */\n      dup3\n        /* \"#utility.yul\":9928:9932   */\n      0x20\n        /* \"#utility.yul\":9920:9926   */\n      dup7\n        /* \"#utility.yul\":9916:9933   */\n      add\n        /* \"#utility.yul\":9869:9947   */\n      tag_562\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":9860:9947   */\n      swap2\n      pop\n        /* \"#utility.yul\":9676:9953   */\n      pop\n        /* \"#utility.yul\":9615:9953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9959:10611   */\n    tag_83:\n        /* \"#utility.yul\":10036:10042   */\n      0x00\n        /* \"#utility.yul\":10044:10050   */\n      dup1\n        /* \"#utility.yul\":10093:10095   */\n      0x40\n        /* \"#utility.yul\":10081:10090   */\n      dup4\n        /* \"#utility.yul\":10072:10079   */\n      dup6\n        /* \"#utility.yul\":10068:10091   */\n      sub\n        /* \"#utility.yul\":10064:10096   */\n      slt\n        /* \"#utility.yul\":10061:10180   */\n      iszero\n      tag_719\n      jumpi\n        /* \"#utility.yul\":10099:10178   */\n      tag_720\n      tag_538\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":10061:10180   */\n    tag_719:\n        /* \"#utility.yul\":10219:10220   */\n      0x00\n        /* \"#utility.yul\":10244:10297   */\n      tag_721\n        /* \"#utility.yul\":10289:10296   */\n      dup6\n        /* \"#utility.yul\":10280:10286   */\n      dup3\n        /* \"#utility.yul\":10269:10278   */\n      dup7\n        /* \"#utility.yul\":10265:10287   */\n      add\n        /* \"#utility.yul\":10244:10297   */\n      tag_543\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":10234:10297   */\n      swap3\n      pop\n        /* \"#utility.yul\":10190:10307   */\n      pop\n        /* \"#utility.yul\":10374:10376   */\n      0x20\n        /* \"#utility.yul\":10363:10372   */\n      dup4\n        /* \"#utility.yul\":10359:10377   */\n      add\n        /* \"#utility.yul\":10346:10378   */\n      calldataload\n        /* \"#utility.yul\":10405:10423   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10397:10403   */\n      dup2\n        /* \"#utility.yul\":10394:10424   */\n      gt\n        /* \"#utility.yul\":10391:10508   */\n      iszero\n      tag_722\n      jumpi\n        /* \"#utility.yul\":10427:10506   */\n      tag_723\n      tag_539\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":10391:10508   */\n    tag_722:\n        /* \"#utility.yul\":10532:10594   */\n      tag_724\n        /* \"#utility.yul\":10586:10593   */\n      dup6\n        /* \"#utility.yul\":10577:10583   */\n      dup3\n        /* \"#utility.yul\":10566:10575   */\n      dup7\n        /* \"#utility.yul\":10562:10584   */\n      add\n        /* \"#utility.yul\":10532:10594   */\n      tag_563\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":10522:10594   */\n      swap2\n      pop\n        /* \"#utility.yul\":10317:10604   */\n      pop\n        /* \"#utility.yul\":9959:10611   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10617:10694   */\n    tag_564:\n        /* \"#utility.yul\":10654:10661   */\n      0x00\n        /* \"#utility.yul\":10683:10688   */\n      dup2\n        /* \"#utility.yul\":10672:10688   */\n      swap1\n      pop\n        /* \"#utility.yul\":10617:10694   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10700:10818   */\n    tag_565:\n        /* \"#utility.yul\":10787:10811   */\n      tag_727\n        /* \"#utility.yul\":10805:10810   */\n      dup2\n        /* \"#utility.yul\":10787:10811   */\n      tag_564\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":10782:10785   */\n      dup3\n        /* \"#utility.yul\":10775:10812   */\n      mstore\n        /* \"#utility.yul\":10700:10818   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10824:11046   */\n    tag_89:\n        /* \"#utility.yul\":10917:10921   */\n      0x00\n        /* \"#utility.yul\":10955:10957   */\n      0x20\n        /* \"#utility.yul\":10944:10953   */\n      dup3\n        /* \"#utility.yul\":10940:10958   */\n      add\n        /* \"#utility.yul\":10932:10958   */\n      swap1\n      pop\n        /* \"#utility.yul\":10968:11039   */\n      tag_729\n        /* \"#utility.yul\":11036:11037   */\n      0x00\n        /* \"#utility.yul\":11025:11034   */\n      dup4\n        /* \"#utility.yul\":11021:11038   */\n      add\n        /* \"#utility.yul\":11012:11018   */\n      dup5\n        /* \"#utility.yul\":10968:11039   */\n      tag_565\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":10824:11046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11052:11112   */\n    tag_566:\n        /* \"#utility.yul\":11080:11083   */\n      0x00\n        /* \"#utility.yul\":11101:11106   */\n      dup2\n        /* \"#utility.yul\":11094:11106   */\n      swap1\n      pop\n        /* \"#utility.yul\":11052:11112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11118:11260   */\n    tag_567:\n        /* \"#utility.yul\":11168:11177   */\n      0x00\n        /* \"#utility.yul\":11201:11254   */\n      tag_732\n        /* \"#utility.yul\":11219:11253   */\n      tag_733\n        /* \"#utility.yul\":11228:11252   */\n      tag_734\n        /* \"#utility.yul\":11246:11251   */\n      dup5\n        /* \"#utility.yul\":11228:11252   */\n      tag_540\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":11219:11253   */\n      tag_566\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":11201:11254   */\n      tag_540\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":11188:11254   */\n      swap1\n      pop\n        /* \"#utility.yul\":11118:11260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11266:11392   */\n    tag_568:\n        /* \"#utility.yul\":11316:11325   */\n      0x00\n        /* \"#utility.yul\":11349:11386   */\n      tag_736\n        /* \"#utility.yul\":11380:11385   */\n      dup3\n        /* \"#utility.yul\":11349:11386   */\n      tag_567\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":11336:11386   */\n      swap1\n      pop\n        /* \"#utility.yul\":11266:11392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11398:11553   */\n    tag_569:\n        /* \"#utility.yul\":11477:11486   */\n      0x00\n        /* \"#utility.yul\":11510:11547   */\n      tag_738\n        /* \"#utility.yul\":11541:11546   */\n      dup3\n        /* \"#utility.yul\":11510:11547   */\n      tag_568\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":11497:11547   */\n      swap1\n      pop\n        /* \"#utility.yul\":11398:11553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11559:11748   */\n    tag_570:\n        /* \"#utility.yul\":11675:11741   */\n      tag_740\n        /* \"#utility.yul\":11735:11740   */\n      dup2\n        /* \"#utility.yul\":11675:11741   */\n      tag_569\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":11670:11673   */\n      dup3\n        /* \"#utility.yul\":11663:11742   */\n      mstore\n        /* \"#utility.yul\":11559:11748   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11754:12034   */\n    tag_106:\n        /* \"#utility.yul\":11876:11880   */\n      0x00\n        /* \"#utility.yul\":11914:11916   */\n      0x20\n        /* \"#utility.yul\":11903:11912   */\n      dup3\n        /* \"#utility.yul\":11899:11917   */\n      add\n        /* \"#utility.yul\":11891:11917   */\n      swap1\n      pop\n        /* \"#utility.yul\":11927:12027   */\n      tag_742\n        /* \"#utility.yul\":12024:12025   */\n      0x00\n        /* \"#utility.yul\":12013:12022   */\n      dup4\n        /* \"#utility.yul\":12009:12026   */\n      add\n        /* \"#utility.yul\":12000:12006   */\n      dup5\n        /* \"#utility.yul\":11927:12027   */\n      tag_570\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":11754:12034   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12040:12158   */\n    tag_571:\n        /* \"#utility.yul\":12127:12151   */\n      tag_744\n        /* \"#utility.yul\":12145:12150   */\n      dup2\n        /* \"#utility.yul\":12127:12151   */\n      tag_541\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":12122:12125   */\n      dup3\n        /* \"#utility.yul\":12115:12152   */\n      mstore\n        /* \"#utility.yul\":12040:12158   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12164:12386   */\n    tag_114:\n        /* \"#utility.yul\":12257:12261   */\n      0x00\n        /* \"#utility.yul\":12295:12297   */\n      0x20\n        /* \"#utility.yul\":12284:12293   */\n      dup3\n        /* \"#utility.yul\":12280:12298   */\n      add\n        /* \"#utility.yul\":12272:12298   */\n      swap1\n      pop\n        /* \"#utility.yul\":12308:12379   */\n      tag_746\n        /* \"#utility.yul\":12376:12377   */\n      0x00\n        /* \"#utility.yul\":12365:12374   */\n      dup4\n        /* \"#utility.yul\":12361:12378   */\n      add\n        /* \"#utility.yul\":12352:12358   */\n      dup5\n        /* \"#utility.yul\":12308:12379   */\n      tag_571\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":12164:12386   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12392:12700   */\n    tag_572:\n        /* \"#utility.yul\":12454:12458   */\n      0x00\n        /* \"#utility.yul\":12544:12562   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12536:12542   */\n      dup3\n        /* \"#utility.yul\":12533:12563   */\n      gt\n        /* \"#utility.yul\":12530:12586   */\n      iszero\n      tag_748\n      jumpi\n        /* \"#utility.yul\":12566:12584   */\n      tag_749\n      tag_550\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":12530:12586   */\n    tag_748:\n        /* \"#utility.yul\":12604:12633   */\n      tag_750\n        /* \"#utility.yul\":12626:12632   */\n      dup3\n        /* \"#utility.yul\":12604:12633   */\n      tag_535\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":12596:12633   */\n      swap1\n      pop\n        /* \"#utility.yul\":12688:12692   */\n      0x20\n        /* \"#utility.yul\":12682:12686   */\n      dup2\n        /* \"#utility.yul\":12678:12693   */\n      add\n        /* \"#utility.yul\":12670:12693   */\n      swap1\n      pop\n        /* \"#utility.yul\":12392:12700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12706:13131   */\n    tag_573:\n        /* \"#utility.yul\":12784:12789   */\n      0x00\n        /* \"#utility.yul\":12809:12875   */\n      tag_752\n        /* \"#utility.yul\":12825:12874   */\n      tag_753\n        /* \"#utility.yul\":12867:12873   */\n      dup5\n        /* \"#utility.yul\":12825:12874   */\n      tag_572\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":12809:12875   */\n      tag_552\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":12800:12875   */\n      swap1\n      pop\n        /* \"#utility.yul\":12898:12904   */\n      dup3\n        /* \"#utility.yul\":12891:12896   */\n      dup2\n        /* \"#utility.yul\":12884:12905   */\n      mstore\n        /* \"#utility.yul\":12936:12940   */\n      0x20\n        /* \"#utility.yul\":12929:12934   */\n      dup2\n        /* \"#utility.yul\":12925:12941   */\n      add\n        /* \"#utility.yul\":12974:12977   */\n      dup5\n        /* \"#utility.yul\":12965:12971   */\n      dup5\n        /* \"#utility.yul\":12960:12963   */\n      dup5\n        /* \"#utility.yul\":12956:12972   */\n      add\n        /* \"#utility.yul\":12953:12978   */\n      gt\n        /* \"#utility.yul\":12950:13062   */\n      iszero\n      tag_754\n      jumpi\n        /* \"#utility.yul\":12981:13060   */\n      tag_755\n      tag_559\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":12950:13062   */\n    tag_754:\n        /* \"#utility.yul\":13071:13125   */\n      tag_756\n        /* \"#utility.yul\":13118:13124   */\n      dup5\n        /* \"#utility.yul\":13113:13116   */\n      dup3\n        /* \"#utility.yul\":13108:13111   */\n      dup6\n        /* \"#utility.yul\":13071:13125   */\n      tag_561\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":12790:13131   */\n      pop\n        /* \"#utility.yul\":12706:13131   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13151:13491   */\n    tag_574:\n        /* \"#utility.yul\":13207:13212   */\n      0x00\n        /* \"#utility.yul\":13256:13259   */\n      dup3\n        /* \"#utility.yul\":13249:13253   */\n      0x1f\n        /* \"#utility.yul\":13241:13247   */\n      dup4\n        /* \"#utility.yul\":13237:13254   */\n      add\n        /* \"#utility.yul\":13233:13260   */\n      slt\n        /* \"#utility.yul\":13223:13345   */\n      tag_758\n      jumpi\n        /* \"#utility.yul\":13264:13343   */\n      tag_759\n      tag_558\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":13223:13345   */\n    tag_758:\n        /* \"#utility.yul\":13381:13387   */\n      dup2\n        /* \"#utility.yul\":13368:13388   */\n      calldataload\n        /* \"#utility.yul\":13406:13485   */\n      tag_760\n        /* \"#utility.yul\":13481:13484   */\n      dup5\n        /* \"#utility.yul\":13473:13479   */\n      dup3\n        /* \"#utility.yul\":13466:13470   */\n      0x20\n        /* \"#utility.yul\":13458:13464   */\n      dup7\n        /* \"#utility.yul\":13454:13471   */\n      add\n        /* \"#utility.yul\":13406:13485   */\n      tag_573\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":13397:13485   */\n      swap2\n      pop\n        /* \"#utility.yul\":13213:13491   */\n      pop\n        /* \"#utility.yul\":13151:13491   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13497:14686   */\n    tag_138:\n        /* \"#utility.yul\":13635:13641   */\n      0x00\n        /* \"#utility.yul\":13643:13649   */\n      dup1\n        /* \"#utility.yul\":13651:13657   */\n      0x00\n        /* \"#utility.yul\":13659:13665   */\n      dup1\n        /* \"#utility.yul\":13708:13711   */\n      0x0120\n        /* \"#utility.yul\":13696:13705   */\n      dup6\n        /* \"#utility.yul\":13687:13694   */\n      dup8\n        /* \"#utility.yul\":13683:13706   */\n      sub\n        /* \"#utility.yul\":13679:13712   */\n      slt\n        /* \"#utility.yul\":13676:13796   */\n      iszero\n      tag_762\n      jumpi\n        /* \"#utility.yul\":13715:13794   */\n      tag_763\n      tag_538\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":13676:13796   */\n    tag_762:\n        /* \"#utility.yul\":13863:13864   */\n      0x00\n        /* \"#utility.yul\":13852:13861   */\n      dup6\n        /* \"#utility.yul\":13848:13865   */\n      add\n        /* \"#utility.yul\":13835:13866   */\n      calldataload\n        /* \"#utility.yul\":13893:13911   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13885:13891   */\n      dup2\n        /* \"#utility.yul\":13882:13912   */\n      gt\n        /* \"#utility.yul\":13879:13996   */\n      iszero\n      tag_764\n      jumpi\n        /* \"#utility.yul\":13915:13994   */\n      tag_765\n      tag_539\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":13879:13996   */\n    tag_764:\n        /* \"#utility.yul\":14020:14083   */\n      tag_766\n        /* \"#utility.yul\":14075:14082   */\n      dup8\n        /* \"#utility.yul\":14066:14072   */\n      dup3\n        /* \"#utility.yul\":14055:14064   */\n      dup9\n        /* \"#utility.yul\":14051:14073   */\n      add\n        /* \"#utility.yul\":14020:14083   */\n      tag_574\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":14010:14083   */\n      swap5\n      pop\n        /* \"#utility.yul\":13806:14093   */\n      pop\n        /* \"#utility.yul\":14160:14162   */\n      0x20\n        /* \"#utility.yul\":14149:14158   */\n      dup6\n        /* \"#utility.yul\":14145:14163   */\n      add\n        /* \"#utility.yul\":14132:14164   */\n      calldataload\n        /* \"#utility.yul\":14191:14209   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14183:14189   */\n      dup2\n        /* \"#utility.yul\":14180:14210   */\n      gt\n        /* \"#utility.yul\":14177:14294   */\n      iszero\n      tag_767\n      jumpi\n        /* \"#utility.yul\":14213:14292   */\n      tag_768\n      tag_539\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":14177:14294   */\n    tag_767:\n        /* \"#utility.yul\":14318:14381   */\n      tag_769\n        /* \"#utility.yul\":14373:14380   */\n      dup8\n        /* \"#utility.yul\":14364:14370   */\n      dup3\n        /* \"#utility.yul\":14353:14362   */\n      dup9\n        /* \"#utility.yul\":14349:14371   */\n      add\n        /* \"#utility.yul\":14318:14381   */\n      tag_574\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":14308:14381   */\n      swap4\n      pop\n        /* \"#utility.yul\":14103:14391   */\n      pop\n        /* \"#utility.yul\":14430:14432   */\n      0x40\n        /* \"#utility.yul\":14456:14509   */\n      tag_770\n        /* \"#utility.yul\":14501:14508   */\n      dup8\n        /* \"#utility.yul\":14492:14498   */\n      dup3\n        /* \"#utility.yul\":14481:14490   */\n      dup9\n        /* \"#utility.yul\":14477:14499   */\n      add\n        /* \"#utility.yul\":14456:14509   */\n      tag_543\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":14446:14509   */\n      swap3\n      pop\n        /* \"#utility.yul\":14401:14519   */\n      pop\n        /* \"#utility.yul\":14558:14560   */\n      0x60\n        /* \"#utility.yul\":14584:14669   */\n      tag_771\n        /* \"#utility.yul\":14661:14668   */\n      dup8\n        /* \"#utility.yul\":14652:14658   */\n      dup3\n        /* \"#utility.yul\":14641:14650   */\n      dup9\n        /* \"#utility.yul\":14637:14659   */\n      add\n        /* \"#utility.yul\":14584:14669   */\n      tag_554\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":14574:14669   */\n      swap2\n      pop\n        /* \"#utility.yul\":14529:14679   */\n      pop\n        /* \"#utility.yul\":13497:14686   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14692:15166   */\n    tag_151:\n        /* \"#utility.yul\":14760:14766   */\n      0x00\n        /* \"#utility.yul\":14768:14774   */\n      dup1\n        /* \"#utility.yul\":14817:14819   */\n      0x40\n        /* \"#utility.yul\":14805:14814   */\n      dup4\n        /* \"#utility.yul\":14796:14803   */\n      dup6\n        /* \"#utility.yul\":14792:14815   */\n      sub\n        /* \"#utility.yul\":14788:14820   */\n      slt\n        /* \"#utility.yul\":14785:14904   */\n      iszero\n      tag_773\n      jumpi\n        /* \"#utility.yul\":14823:14902   */\n      tag_774\n      tag_538\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":14785:14904   */\n    tag_773:\n        /* \"#utility.yul\":14943:14944   */\n      0x00\n        /* \"#utility.yul\":14968:15021   */\n      tag_775\n        /* \"#utility.yul\":15013:15020   */\n      dup6\n        /* \"#utility.yul\":15004:15010   */\n      dup3\n        /* \"#utility.yul\":14993:15002   */\n      dup7\n        /* \"#utility.yul\":14989:15011   */\n      add\n        /* \"#utility.yul\":14968:15021   */\n      tag_543\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":14958:15021   */\n      swap3\n      pop\n        /* \"#utility.yul\":14914:15031   */\n      pop\n        /* \"#utility.yul\":15070:15072   */\n      0x20\n        /* \"#utility.yul\":15096:15149   */\n      tag_776\n        /* \"#utility.yul\":15141:15148   */\n      dup6\n        /* \"#utility.yul\":15132:15138   */\n      dup3\n        /* \"#utility.yul\":15121:15130   */\n      dup7\n        /* \"#utility.yul\":15117:15139   */\n      add\n        /* \"#utility.yul\":15096:15149   */\n      tag_543\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":15086:15149   */\n      swap2\n      pop\n        /* \"#utility.yul\":15041:15159   */\n      pop\n        /* \"#utility.yul\":14692:15166   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15172:15352   */\n    tag_575:\n        /* \"#utility.yul\":15220:15297   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15217:15218   */\n      0x00\n        /* \"#utility.yul\":15210:15298   */\n      mstore\n        /* \"#utility.yul\":15317:15321   */\n      0x22\n        /* \"#utility.yul\":15314:15315   */\n      0x04\n        /* \"#utility.yul\":15307:15322   */\n      mstore\n        /* \"#utility.yul\":15341:15345   */\n      0x24\n        /* \"#utility.yul\":15338:15339   */\n      0x00\n        /* \"#utility.yul\":15331:15346   */\n      revert\n        /* \"#utility.yul\":15358:15678   */\n    tag_162:\n        /* \"#utility.yul\":15402:15408   */\n      0x00\n        /* \"#utility.yul\":15439:15440   */\n      0x02\n        /* \"#utility.yul\":15433:15437   */\n      dup3\n        /* \"#utility.yul\":15429:15441   */\n      div\n        /* \"#utility.yul\":15419:15441   */\n      swap1\n      pop\n        /* \"#utility.yul\":15486:15487   */\n      0x01\n        /* \"#utility.yul\":15480:15484   */\n      dup3\n        /* \"#utility.yul\":15476:15488   */\n      and\n        /* \"#utility.yul\":15507:15525   */\n      dup1\n        /* \"#utility.yul\":15497:15578   */\n      tag_779\n      jumpi\n        /* \"#utility.yul\":15563:15567   */\n      0x7f\n        /* \"#utility.yul\":15555:15561   */\n      dup3\n        /* \"#utility.yul\":15551:15568   */\n      and\n        /* \"#utility.yul\":15541:15568   */\n      swap2\n      pop\n        /* \"#utility.yul\":15497:15578   */\n    tag_779:\n        /* \"#utility.yul\":15625:15627   */\n      0x20\n        /* \"#utility.yul\":15617:15623   */\n      dup3\n        /* \"#utility.yul\":15614:15628   */\n      lt\n        /* \"#utility.yul\":15594:15612   */\n      dup2\n        /* \"#utility.yul\":15591:15629   */\n      sub\n        /* \"#utility.yul\":15588:15672   */\n      tag_780\n      jumpi\n        /* \"#utility.yul\":15644:15662   */\n      tag_781\n      tag_575\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":15588:15672   */\n    tag_780:\n        /* \"#utility.yul\":15409:15678   */\n      pop\n        /* \"#utility.yul\":15358:15678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15684:15792   */\n    tag_576:\n        /* \"#utility.yul\":15761:15785   */\n      tag_783\n        /* \"#utility.yul\":15779:15784   */\n      dup2\n        /* \"#utility.yul\":15761:15785   */\n      tag_544\n      jump\t// in\n    tag_783:\n        /* \"#utility.yul\":15756:15759   */\n      dup3\n        /* \"#utility.yul\":15749:15786   */\n      mstore\n        /* \"#utility.yul\":15684:15792   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15876:17163   */\n    tag_577:\n        /* \"#utility.yul\":16037:16041   */\n      0xc0\n        /* \"#utility.yul\":16032:16035   */\n      dup3\n        /* \"#utility.yul\":16028:16042   */\n      add\n        /* \"#utility.yul\":16137:16141   */\n      0x00\n        /* \"#utility.yul\":16130:16135   */\n      dup3\n        /* \"#utility.yul\":16126:16142   */\n      add\n        /* \"#utility.yul\":16120:16143   */\n      mload\n        /* \"#utility.yul\":16156:16219   */\n      tag_785\n        /* \"#utility.yul\":16213:16217   */\n      0x00\n        /* \"#utility.yul\":16208:16211   */\n      dup6\n        /* \"#utility.yul\":16204:16218   */\n      add\n        /* \"#utility.yul\":16190:16202   */\n      dup3\n        /* \"#utility.yul\":16156:16219   */\n      tag_576\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":16052:16229   */\n      pop\n        /* \"#utility.yul\":16324:16328   */\n      0x20\n        /* \"#utility.yul\":16317:16322   */\n      dup3\n        /* \"#utility.yul\":16313:16329   */\n      add\n        /* \"#utility.yul\":16307:16330   */\n      mload\n        /* \"#utility.yul\":16343:16406   */\n      tag_786\n        /* \"#utility.yul\":16400:16404   */\n      0x20\n        /* \"#utility.yul\":16395:16398   */\n      dup6\n        /* \"#utility.yul\":16391:16405   */\n      add\n        /* \"#utility.yul\":16377:16389   */\n      dup3\n        /* \"#utility.yul\":16343:16406   */\n      tag_576\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":16239:16416   */\n      pop\n        /* \"#utility.yul\":16507:16511   */\n      0x40\n        /* \"#utility.yul\":16500:16505   */\n      dup3\n        /* \"#utility.yul\":16496:16512   */\n      add\n        /* \"#utility.yul\":16490:16513   */\n      mload\n        /* \"#utility.yul\":16526:16589   */\n      tag_787\n        /* \"#utility.yul\":16583:16587   */\n      0x40\n        /* \"#utility.yul\":16578:16581   */\n      dup6\n        /* \"#utility.yul\":16574:16588   */\n      add\n        /* \"#utility.yul\":16560:16572   */\n      dup3\n        /* \"#utility.yul\":16526:16589   */\n      tag_576\n      jump\t// in\n    tag_787:\n        /* \"#utility.yul\":16426:16599   */\n      pop\n        /* \"#utility.yul\":16693:16697   */\n      0x60\n        /* \"#utility.yul\":16686:16691   */\n      dup3\n        /* \"#utility.yul\":16682:16698   */\n      add\n        /* \"#utility.yul\":16676:16699   */\n      mload\n        /* \"#utility.yul\":16712:16775   */\n      tag_788\n        /* \"#utility.yul\":16769:16773   */\n      0x60\n        /* \"#utility.yul\":16764:16767   */\n      dup6\n        /* \"#utility.yul\":16760:16774   */\n      add\n        /* \"#utility.yul\":16746:16758   */\n      dup3\n        /* \"#utility.yul\":16712:16775   */\n      tag_576\n      jump\t// in\n    tag_788:\n        /* \"#utility.yul\":16609:16785   */\n      pop\n        /* \"#utility.yul\":16880:16884   */\n      0x80\n        /* \"#utility.yul\":16873:16878   */\n      dup3\n        /* \"#utility.yul\":16869:16885   */\n      add\n        /* \"#utility.yul\":16863:16886   */\n      mload\n        /* \"#utility.yul\":16899:16962   */\n      tag_789\n        /* \"#utility.yul\":16956:16960   */\n      0x80\n        /* \"#utility.yul\":16951:16954   */\n      dup6\n        /* \"#utility.yul\":16947:16961   */\n      add\n        /* \"#utility.yul\":16933:16945   */\n      dup3\n        /* \"#utility.yul\":16899:16962   */\n      tag_576\n      jump\t// in\n    tag_789:\n        /* \"#utility.yul\":16795:16972   */\n      pop\n        /* \"#utility.yul\":17064:17068   */\n      0xa0\n        /* \"#utility.yul\":17057:17062   */\n      dup3\n        /* \"#utility.yul\":17053:17069   */\n      add\n        /* \"#utility.yul\":17047:17070   */\n      mload\n        /* \"#utility.yul\":17083:17146   */\n      tag_790\n        /* \"#utility.yul\":17140:17144   */\n      0xa0\n        /* \"#utility.yul\":17135:17138   */\n      dup6\n        /* \"#utility.yul\":17131:17145   */\n      add\n        /* \"#utility.yul\":17117:17129   */\n      dup3\n        /* \"#utility.yul\":17083:17146   */\n      tag_576\n      jump\t// in\n    tag_790:\n        /* \"#utility.yul\":16982:17156   */\n      pop\n        /* \"#utility.yul\":16006:17163   */\n      pop\n        /* \"#utility.yul\":15876:17163   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17169:17520   */\n    tag_177:\n        /* \"#utility.yul\":17326:17330   */\n      0x00\n        /* \"#utility.yul\":17364:17367   */\n      0xc0\n        /* \"#utility.yul\":17353:17362   */\n      dup3\n        /* \"#utility.yul\":17349:17368   */\n      add\n        /* \"#utility.yul\":17341:17368   */\n      swap1\n      pop\n        /* \"#utility.yul\":17378:17513   */\n      tag_792\n        /* \"#utility.yul\":17510:17511   */\n      0x00\n        /* \"#utility.yul\":17499:17508   */\n      dup4\n        /* \"#utility.yul\":17495:17512   */\n      add\n        /* \"#utility.yul\":17486:17492   */\n      dup5\n        /* \"#utility.yul\":17378:17513   */\n      tag_577\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":17169:17520   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17526:17706   */\n    tag_578:\n        /* \"#utility.yul\":17574:17651   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17571:17572   */\n      0x00\n        /* \"#utility.yul\":17564:17652   */\n      mstore\n        /* \"#utility.yul\":17671:17675   */\n      0x11\n        /* \"#utility.yul\":17668:17669   */\n      0x04\n        /* \"#utility.yul\":17661:17676   */\n      mstore\n        /* \"#utility.yul\":17695:17699   */\n      0x24\n        /* \"#utility.yul\":17692:17693   */\n      0x00\n        /* \"#utility.yul\":17685:17700   */\n      revert\n        /* \"#utility.yul\":17712:17903   */\n    tag_236:\n        /* \"#utility.yul\":17752:17755   */\n      0x00\n        /* \"#utility.yul\":17771:17791   */\n      tag_795\n        /* \"#utility.yul\":17789:17790   */\n      dup3\n        /* \"#utility.yul\":17771:17791   */\n      tag_544\n      jump\t// in\n    tag_795:\n        /* \"#utility.yul\":17766:17791   */\n      swap2\n      pop\n        /* \"#utility.yul\":17805:17825   */\n      tag_796\n        /* \"#utility.yul\":17823:17824   */\n      dup4\n        /* \"#utility.yul\":17805:17825   */\n      tag_544\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":17800:17825   */\n      swap3\n      pop\n        /* \"#utility.yul\":17848:17849   */\n      dup3\n        /* \"#utility.yul\":17845:17846   */\n      dup3\n        /* \"#utility.yul\":17841:17850   */\n      add\n        /* \"#utility.yul\":17834:17850   */\n      swap1\n      pop\n        /* \"#utility.yul\":17869:17872   */\n      dup1\n        /* \"#utility.yul\":17866:17867   */\n      dup3\n        /* \"#utility.yul\":17863:17873   */\n      gt\n        /* \"#utility.yul\":17860:17896   */\n      iszero\n      tag_797\n      jumpi\n        /* \"#utility.yul\":17876:17894   */\n      tag_798\n      tag_578\n      jump\t// in\n    tag_798:\n        /* \"#utility.yul\":17860:17896   */\n    tag_797:\n        /* \"#utility.yul\":17712:17903   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17909:18052   */\n    tag_579:\n        /* \"#utility.yul\":17966:17971   */\n      0x00\n        /* \"#utility.yul\":17997:18003   */\n      dup2\n        /* \"#utility.yul\":17991:18004   */\n      mload\n        /* \"#utility.yul\":17982:18004   */\n      swap1\n      pop\n        /* \"#utility.yul\":18013:18046   */\n      tag_800\n        /* \"#utility.yul\":18040:18045   */\n      dup2\n        /* \"#utility.yul\":18013:18046   */\n      tag_545\n      jump\t// in\n    tag_800:\n        /* \"#utility.yul\":17909:18052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18107:19095   */\n    tag_580:\n        /* \"#utility.yul\":18198:18203   */\n      0x00\n        /* \"#utility.yul\":18242:18246   */\n      0x80\n        /* \"#utility.yul\":18230:18239   */\n      dup3\n        /* \"#utility.yul\":18225:18228   */\n      dup5\n        /* \"#utility.yul\":18221:18240   */\n      sub\n        /* \"#utility.yul\":18217:18247   */\n      slt\n        /* \"#utility.yul\":18214:18331   */\n      iszero\n      tag_802\n      jumpi\n        /* \"#utility.yul\":18250:18329   */\n      tag_803\n      tag_549\n      jump\t// in\n    tag_803:\n        /* \"#utility.yul\":18214:18331   */\n    tag_802:\n        /* \"#utility.yul\":18349:18370   */\n      tag_804\n        /* \"#utility.yul\":18365:18369   */\n      0x80\n        /* \"#utility.yul\":18349:18370   */\n      tag_552\n      jump\t// in\n    tag_804:\n        /* \"#utility.yul\":18340:18370   */\n      swap1\n      pop\n        /* \"#utility.yul\":18435:18436   */\n      0x00\n        /* \"#utility.yul\":18475:18535   */\n      tag_805\n        /* \"#utility.yul\":18531:18534   */\n      dup5\n        /* \"#utility.yul\":18522:18528   */\n      dup3\n        /* \"#utility.yul\":18511:18520   */\n      dup6\n        /* \"#utility.yul\":18507:18529   */\n      add\n        /* \"#utility.yul\":18475:18535   */\n      tag_579\n      jump\t// in\n    tag_805:\n        /* \"#utility.yul\":18468:18472   */\n      0x00\n        /* \"#utility.yul\":18461:18466   */\n      dup4\n        /* \"#utility.yul\":18457:18473   */\n      add\n        /* \"#utility.yul\":18450:18536   */\n      mstore\n        /* \"#utility.yul\":18380:18547   */\n      pop\n        /* \"#utility.yul\":18616:18618   */\n      0x20\n        /* \"#utility.yul\":18657:18717   */\n      tag_806\n        /* \"#utility.yul\":18713:18716   */\n      dup5\n        /* \"#utility.yul\":18704:18710   */\n      dup3\n        /* \"#utility.yul\":18693:18702   */\n      dup6\n        /* \"#utility.yul\":18689:18711   */\n      add\n        /* \"#utility.yul\":18657:18717   */\n      tag_579\n      jump\t// in\n    tag_806:\n        /* \"#utility.yul\":18650:18654   */\n      0x20\n        /* \"#utility.yul\":18643:18648   */\n      dup4\n        /* \"#utility.yul\":18639:18655   */\n      add\n        /* \"#utility.yul\":18632:18718   */\n      mstore\n        /* \"#utility.yul\":18557:18729   */\n      pop\n        /* \"#utility.yul\":18798:18800   */\n      0x40\n        /* \"#utility.yul\":18839:18899   */\n      tag_807\n        /* \"#utility.yul\":18895:18898   */\n      dup5\n        /* \"#utility.yul\":18886:18892   */\n      dup3\n        /* \"#utility.yul\":18875:18884   */\n      dup6\n        /* \"#utility.yul\":18871:18893   */\n      add\n        /* \"#utility.yul\":18839:18899   */\n      tag_579\n      jump\t// in\n    tag_807:\n        /* \"#utility.yul\":18832:18836   */\n      0x40\n        /* \"#utility.yul\":18825:18830   */\n      dup4\n        /* \"#utility.yul\":18821:18837   */\n      add\n        /* \"#utility.yul\":18814:18900   */\n      mstore\n        /* \"#utility.yul\":18739:18911   */\n      pop\n        /* \"#utility.yul\":18975:18977   */\n      0x60\n        /* \"#utility.yul\":19016:19076   */\n      tag_808\n        /* \"#utility.yul\":19072:19075   */\n      dup5\n        /* \"#utility.yul\":19063:19069   */\n      dup3\n        /* \"#utility.yul\":19052:19061   */\n      dup6\n        /* \"#utility.yul\":19048:19070   */\n      add\n        /* \"#utility.yul\":19016:19076   */\n      tag_579\n      jump\t// in\n    tag_808:\n        /* \"#utility.yul\":19009:19013   */\n      0x60\n        /* \"#utility.yul\":19002:19007   */\n      dup4\n        /* \"#utility.yul\":18998:19014   */\n      add\n        /* \"#utility.yul\":18991:19077   */\n      mstore\n        /* \"#utility.yul\":18921:19088   */\n      pop\n        /* \"#utility.yul\":18107:19095   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19101:19515   */\n    tag_241:\n        /* \"#utility.yul\":19202:19208   */\n      0x00\n        /* \"#utility.yul\":19251:19254   */\n      0x80\n        /* \"#utility.yul\":19239:19248   */\n      dup3\n        /* \"#utility.yul\":19230:19237   */\n      dup5\n        /* \"#utility.yul\":19226:19249   */\n      sub\n        /* \"#utility.yul\":19222:19255   */\n      slt\n        /* \"#utility.yul\":19219:19339   */\n      iszero\n      tag_810\n      jumpi\n        /* \"#utility.yul\":19258:19337   */\n      tag_811\n      tag_538\n      jump\t// in\n    tag_811:\n        /* \"#utility.yul\":19219:19339   */\n    tag_810:\n        /* \"#utility.yul\":19378:19379   */\n      0x00\n        /* \"#utility.yul\":19403:19498   */\n      tag_812\n        /* \"#utility.yul\":19490:19497   */\n      dup5\n        /* \"#utility.yul\":19481:19487   */\n      dup3\n        /* \"#utility.yul\":19470:19479   */\n      dup6\n        /* \"#utility.yul\":19466:19488   */\n      add\n        /* \"#utility.yul\":19403:19498   */\n      tag_580\n      jump\t// in\n    tag_812:\n        /* \"#utility.yul\":19393:19498   */\n      swap2\n      pop\n        /* \"#utility.yul\":19349:19508   */\n      pop\n        /* \"#utility.yul\":19101:19515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19521:19715   */\n    tag_243:\n        /* \"#utility.yul\":19561:19565   */\n      0x00\n        /* \"#utility.yul\":19581:19601   */\n      tag_814\n        /* \"#utility.yul\":19599:19600   */\n      dup3\n        /* \"#utility.yul\":19581:19601   */\n      tag_544\n      jump\t// in\n    tag_814:\n        /* \"#utility.yul\":19576:19601   */\n      swap2\n      pop\n        /* \"#utility.yul\":19615:19635   */\n      tag_815\n        /* \"#utility.yul\":19633:19634   */\n      dup4\n        /* \"#utility.yul\":19615:19635   */\n      tag_544\n      jump\t// in\n    tag_815:\n        /* \"#utility.yul\":19610:19635   */\n      swap3\n      pop\n        /* \"#utility.yul\":19659:19660   */\n      dup3\n        /* \"#utility.yul\":19656:19657   */\n      dup3\n        /* \"#utility.yul\":19652:19661   */\n      sub\n        /* \"#utility.yul\":19644:19661   */\n      swap1\n      pop\n        /* \"#utility.yul\":19683:19684   */\n      dup2\n        /* \"#utility.yul\":19677:19681   */\n      dup2\n        /* \"#utility.yul\":19674:19685   */\n      gt\n        /* \"#utility.yul\":19671:19708   */\n      iszero\n      tag_816\n      jumpi\n        /* \"#utility.yul\":19688:19706   */\n      tag_817\n      tag_578\n      jump\t// in\n    tag_817:\n        /* \"#utility.yul\":19671:19708   */\n    tag_816:\n        /* \"#utility.yul\":19521:19715   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19721:19843   */\n    tag_581:\n        /* \"#utility.yul\":19794:19818   */\n      tag_819\n        /* \"#utility.yul\":19812:19817   */\n      dup2\n        /* \"#utility.yul\":19794:19818   */\n      tag_564\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":19787:19792   */\n      dup2\n        /* \"#utility.yul\":19784:19819   */\n      eq\n        /* \"#utility.yul\":19774:19837   */\n      tag_820\n      jumpi\n        /* \"#utility.yul\":19833:19834   */\n      0x00\n        /* \"#utility.yul\":19830:19831   */\n      dup1\n        /* \"#utility.yul\":19823:19835   */\n      revert\n        /* \"#utility.yul\":19774:19837   */\n    tag_820:\n        /* \"#utility.yul\":19721:19843   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19849:19992   */\n    tag_582:\n        /* \"#utility.yul\":19906:19911   */\n      0x00\n        /* \"#utility.yul\":19937:19943   */\n      dup2\n        /* \"#utility.yul\":19931:19944   */\n      mload\n        /* \"#utility.yul\":19922:19944   */\n      swap1\n      pop\n        /* \"#utility.yul\":19953:19986   */\n      tag_822\n        /* \"#utility.yul\":19980:19985   */\n      dup2\n        /* \"#utility.yul\":19953:19986   */\n      tag_581\n      jump\t// in\n    tag_822:\n        /* \"#utility.yul\":19849:19992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19998:20349   */\n    tag_256:\n        /* \"#utility.yul\":20068:20074   */\n      0x00\n        /* \"#utility.yul\":20117:20119   */\n      0x20\n        /* \"#utility.yul\":20105:20114   */\n      dup3\n        /* \"#utility.yul\":20096:20103   */\n      dup5\n        /* \"#utility.yul\":20092:20115   */\n      sub\n        /* \"#utility.yul\":20088:20120   */\n      slt\n        /* \"#utility.yul\":20085:20204   */\n      iszero\n      tag_824\n      jumpi\n        /* \"#utility.yul\":20123:20202   */\n      tag_825\n      tag_538\n      jump\t// in\n    tag_825:\n        /* \"#utility.yul\":20085:20204   */\n    tag_824:\n        /* \"#utility.yul\":20243:20244   */\n      0x00\n        /* \"#utility.yul\":20268:20332   */\n      tag_826\n        /* \"#utility.yul\":20324:20331   */\n      dup5\n        /* \"#utility.yul\":20315:20321   */\n      dup3\n        /* \"#utility.yul\":20304:20313   */\n      dup6\n        /* \"#utility.yul\":20300:20322   */\n      add\n        /* \"#utility.yul\":20268:20332   */\n      tag_582\n      jump\t// in\n    tag_826:\n        /* \"#utility.yul\":20258:20332   */\n      swap2\n      pop\n        /* \"#utility.yul\":20214:20342   */\n      pop\n        /* \"#utility.yul\":19998:20349   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20355:20457   */\n    tag_583:\n        /* \"#utility.yul\":20397:20405   */\n      0x00\n        /* \"#utility.yul\":20444:20449   */\n      dup2\n        /* \"#utility.yul\":20441:20442   */\n      0x01\n        /* \"#utility.yul\":20437:20450   */\n      shr\n        /* \"#utility.yul\":20416:20450   */\n      swap1\n      pop\n        /* \"#utility.yul\":20355:20457   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20463:21311   */\n    tag_584:\n        /* \"#utility.yul\":20524:20529   */\n      0x00\n        /* \"#utility.yul\":20531:20535   */\n      dup1\n        /* \"#utility.yul\":20555:20561   */\n      dup3\n        /* \"#utility.yul\":20546:20561   */\n      swap2\n      pop\n        /* \"#utility.yul\":20579:20584   */\n      dup4\n        /* \"#utility.yul\":20570:20584   */\n      swap1\n      pop\n        /* \"#utility.yul\":20593:21305   */\n    tag_829:\n        /* \"#utility.yul\":20614:20615   */\n      0x01\n        /* \"#utility.yul\":20604:20612   */\n      dup6\n        /* \"#utility.yul\":20601:20616   */\n      gt\n        /* \"#utility.yul\":20593:21305   */\n      iszero\n      tag_831\n      jumpi\n        /* \"#utility.yul\":20709:20713   */\n      dup1\n        /* \"#utility.yul\":20704:20707   */\n      dup7\n        /* \"#utility.yul\":20700:20714   */\n      div\n        /* \"#utility.yul\":20694:20698   */\n      dup2\n        /* \"#utility.yul\":20691:20715   */\n      gt\n        /* \"#utility.yul\":20688:20738   */\n      iszero\n      tag_832\n      jumpi\n        /* \"#utility.yul\":20718:20736   */\n      tag_833\n      tag_578\n      jump\t// in\n    tag_833:\n        /* \"#utility.yul\":20688:20738   */\n    tag_832:\n        /* \"#utility.yul\":20768:20769   */\n      0x01\n        /* \"#utility.yul\":20758:20766   */\n      dup6\n        /* \"#utility.yul\":20754:20770   */\n      and\n        /* \"#utility.yul\":20751:21202   */\n      iszero\n      tag_834\n      jumpi\n        /* \"#utility.yul\":21183:21187   */\n      dup1\n        /* \"#utility.yul\":21176:21181   */\n      dup3\n        /* \"#utility.yul\":21172:21188   */\n      mul\n        /* \"#utility.yul\":21163:21188   */\n      swap2\n      pop\n        /* \"#utility.yul\":20751:21202   */\n    tag_834:\n        /* \"#utility.yul\":21233:21237   */\n      dup1\n        /* \"#utility.yul\":21227:21231   */\n      dup2\n        /* \"#utility.yul\":21223:21238   */\n      mul\n        /* \"#utility.yul\":21215:21238   */\n      swap1\n      pop\n        /* \"#utility.yul\":21263:21295   */\n      tag_835\n        /* \"#utility.yul\":21286:21294   */\n      dup6\n        /* \"#utility.yul\":21263:21295   */\n      tag_583\n      jump\t// in\n    tag_835:\n        /* \"#utility.yul\":21251:21295   */\n      swap5\n      pop\n        /* \"#utility.yul\":20593:21305   */\n      jump(tag_829)\n    tag_831:\n        /* \"#utility.yul\":20463:21311   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21317:22390   */\n    tag_585:\n        /* \"#utility.yul\":21371:21376   */\n      0x00\n        /* \"#utility.yul\":21562:21570   */\n      dup3\n        /* \"#utility.yul\":21552:21592   */\n      tag_837\n      jumpi\n        /* \"#utility.yul\":21583:21584   */\n      0x01\n        /* \"#utility.yul\":21574:21584   */\n      swap1\n      pop\n        /* \"#utility.yul\":21585:21590   */\n      jump(tag_836)\n        /* \"#utility.yul\":21552:21592   */\n    tag_837:\n        /* \"#utility.yul\":21611:21615   */\n      dup2\n        /* \"#utility.yul\":21601:21637   */\n      tag_838\n      jumpi\n        /* \"#utility.yul\":21628:21629   */\n      0x00\n        /* \"#utility.yul\":21619:21629   */\n      swap1\n      pop\n        /* \"#utility.yul\":21630:21635   */\n      jump(tag_836)\n        /* \"#utility.yul\":21601:21637   */\n    tag_838:\n        /* \"#utility.yul\":21697:21701   */\n      dup2\n        /* \"#utility.yul\":21745:21746   */\n      0x01\n        /* \"#utility.yul\":21740:21767   */\n      dup2\n      eq\n      tag_840\n      jumpi\n        /* \"#utility.yul\":21781:21782   */\n      0x02\n        /* \"#utility.yul\":21776:21967   */\n      dup2\n      eq\n      tag_841\n      jumpi\n        /* \"#utility.yul\":21690:21967   */\n      jump(tag_839)\n        /* \"#utility.yul\":21740:21767   */\n    tag_840:\n        /* \"#utility.yul\":21758:21759   */\n      0x01\n        /* \"#utility.yul\":21749:21759   */\n      swap2\n      pop\n        /* \"#utility.yul\":21760:21765   */\n      pop\n      jump(tag_836)\n        /* \"#utility.yul\":21776:21967   */\n    tag_841:\n        /* \"#utility.yul\":21821:21824   */\n      0xff\n        /* \"#utility.yul\":21811:21819   */\n      dup5\n        /* \"#utility.yul\":21808:21825   */\n      gt\n        /* \"#utility.yul\":21805:21848   */\n      iszero\n      tag_842\n      jumpi\n        /* \"#utility.yul\":21828:21846   */\n      tag_843\n      tag_578\n      jump\t// in\n    tag_843:\n        /* \"#utility.yul\":21805:21848   */\n    tag_842:\n        /* \"#utility.yul\":21877:21885   */\n      dup4\n        /* \"#utility.yul\":21874:21875   */\n      0x02\n        /* \"#utility.yul\":21870:21886   */\n      exp\n        /* \"#utility.yul\":21861:21886   */\n      swap2\n      pop\n        /* \"#utility.yul\":21912:21915   */\n      dup5\n        /* \"#utility.yul\":21905:21910   */\n      dup3\n        /* \"#utility.yul\":21902:21916   */\n      gt\n        /* \"#utility.yul\":21899:21939   */\n      iszero\n      tag_844\n      jumpi\n        /* \"#utility.yul\":21919:21937   */\n      tag_845\n      tag_578\n      jump\t// in\n    tag_845:\n        /* \"#utility.yul\":21899:21939   */\n    tag_844:\n        /* \"#utility.yul\":21952:21957   */\n      pop\n      jump(tag_836)\n        /* \"#utility.yul\":21690:21967   */\n    tag_839:\n      pop\n        /* \"#utility.yul\":22076:22078   */\n      0x20\n        /* \"#utility.yul\":22066:22074   */\n      dup4\n        /* \"#utility.yul\":22063:22079   */\n      lt\n        /* \"#utility.yul\":22057:22060   */\n      0x0133\n        /* \"#utility.yul\":22051:22055   */\n      dup4\n        /* \"#utility.yul\":22048:22061   */\n      lt\n        /* \"#utility.yul\":22044:22080   */\n      and\n        /* \"#utility.yul\":22026:22028   */\n      0x4e\n        /* \"#utility.yul\":22016:22024   */\n      dup5\n        /* \"#utility.yul\":22013:22029   */\n      lt\n        /* \"#utility.yul\":22008:22010   */\n      0x0b\n        /* \"#utility.yul\":22002:22006   */\n      dup5\n        /* \"#utility.yul\":21999:22011   */\n      lt\n        /* \"#utility.yul\":21995:22030   */\n      and\n        /* \"#utility.yul\":21979:22090   */\n      or\n        /* \"#utility.yul\":21976:22222   */\n      iszero\n      tag_846\n      jumpi\n        /* \"#utility.yul\":22132:22140   */\n      dup3\n        /* \"#utility.yul\":22126:22130   */\n      dup3\n        /* \"#utility.yul\":22122:22141   */\n      exp\n        /* \"#utility.yul\":22113:22141   */\n      swap1\n      pop\n        /* \"#utility.yul\":22167:22170   */\n      dup4\n        /* \"#utility.yul\":22160:22165   */\n      dup2\n        /* \"#utility.yul\":22157:22171   */\n      gt\n        /* \"#utility.yul\":22154:22194   */\n      iszero\n      tag_847\n      jumpi\n        /* \"#utility.yul\":22174:22192   */\n      tag_848\n      tag_578\n      jump\t// in\n    tag_848:\n        /* \"#utility.yul\":22154:22194   */\n    tag_847:\n        /* \"#utility.yul\":22207:22212   */\n      jump(tag_836)\n        /* \"#utility.yul\":21976:22222   */\n    tag_846:\n        /* \"#utility.yul\":22247:22289   */\n      tag_849\n        /* \"#utility.yul\":22285:22288   */\n      dup5\n        /* \"#utility.yul\":22275:22283   */\n      dup5\n        /* \"#utility.yul\":22269:22273   */\n      dup5\n        /* \"#utility.yul\":22266:22267   */\n      0x01\n        /* \"#utility.yul\":22247:22289   */\n      tag_584\n      jump\t// in\n    tag_849:\n        /* \"#utility.yul\":22232:22289   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":22321:22325   */\n      dup2\n        /* \"#utility.yul\":22316:22319   */\n      dup5\n        /* \"#utility.yul\":22312:22326   */\n      div\n        /* \"#utility.yul\":22305:22310   */\n      dup2\n        /* \"#utility.yul\":22302:22327   */\n      gt\n        /* \"#utility.yul\":22299:22350   */\n      iszero\n      tag_850\n      jumpi\n        /* \"#utility.yul\":22330:22348   */\n      tag_851\n      tag_578\n      jump\t// in\n    tag_851:\n        /* \"#utility.yul\":22299:22350   */\n    tag_850:\n        /* \"#utility.yul\":22379:22383   */\n      dup2\n        /* \"#utility.yul\":22372:22377   */\n      dup2\n        /* \"#utility.yul\":22368:22384   */\n      mul\n        /* \"#utility.yul\":22359:22384   */\n      swap1\n      pop\n        /* \"#utility.yul\":21317:22390   */\n    tag_836:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22396:22677   */\n    tag_281:\n        /* \"#utility.yul\":22454:22459   */\n      0x00\n        /* \"#utility.yul\":22478:22501   */\n      tag_853\n        /* \"#utility.yul\":22496:22500   */\n      dup3\n        /* \"#utility.yul\":22478:22501   */\n      tag_544\n      jump\t// in\n    tag_853:\n        /* \"#utility.yul\":22470:22501   */\n      swap2\n      pop\n        /* \"#utility.yul\":22522:22547   */\n      tag_854\n        /* \"#utility.yul\":22538:22546   */\n      dup4\n        /* \"#utility.yul\":22522:22547   */\n      tag_556\n      jump\t// in\n    tag_854:\n        /* \"#utility.yul\":22510:22547   */\n      swap3\n      pop\n        /* \"#utility.yul\":22566:22670   */\n      tag_855\n        /* \"#utility.yul\":22603:22669   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22593:22601   */\n      dup5\n        /* \"#utility.yul\":22587:22591   */\n      dup5\n        /* \"#utility.yul\":22566:22670   */\n      tag_585\n      jump\t// in\n    tag_855:\n        /* \"#utility.yul\":22557:22670   */\n      swap1\n      pop\n        /* \"#utility.yul\":22396:22677   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22683:23093   */\n    tag_283:\n        /* \"#utility.yul\":22723:22730   */\n      0x00\n        /* \"#utility.yul\":22746:22766   */\n      tag_857\n        /* \"#utility.yul\":22764:22765   */\n      dup3\n        /* \"#utility.yul\":22746:22766   */\n      tag_544\n      jump\t// in\n    tag_857:\n        /* \"#utility.yul\":22741:22766   */\n      swap2\n      pop\n        /* \"#utility.yul\":22780:22800   */\n      tag_858\n        /* \"#utility.yul\":22798:22799   */\n      dup4\n        /* \"#utility.yul\":22780:22800   */\n      tag_544\n      jump\t// in\n    tag_858:\n        /* \"#utility.yul\":22775:22800   */\n      swap3\n      pop\n        /* \"#utility.yul\":22835:22836   */\n      dup3\n        /* \"#utility.yul\":22832:22833   */\n      dup3\n        /* \"#utility.yul\":22828:22837   */\n      mul\n        /* \"#utility.yul\":22857:22887   */\n      tag_859\n        /* \"#utility.yul\":22875:22886   */\n      dup2\n        /* \"#utility.yul\":22857:22887   */\n      tag_544\n      jump\t// in\n    tag_859:\n        /* \"#utility.yul\":22846:22887   */\n      swap2\n      pop\n        /* \"#utility.yul\":23036:23037   */\n      dup3\n        /* \"#utility.yul\":23027:23034   */\n      dup3\n        /* \"#utility.yul\":23023:23038   */\n      div\n        /* \"#utility.yul\":23020:23021   */\n      dup5\n        /* \"#utility.yul\":23017:23039   */\n      eq\n        /* \"#utility.yul\":22997:22998   */\n      dup4\n        /* \"#utility.yul\":22990:22999   */\n      iszero\n        /* \"#utility.yul\":22970:23053   */\n      or\n        /* \"#utility.yul\":22947:23086   */\n      tag_860\n      jumpi\n        /* \"#utility.yul\":23066:23084   */\n      tag_861\n      tag_578\n      jump\t// in\n    tag_861:\n        /* \"#utility.yul\":22947:23086   */\n    tag_860:\n        /* \"#utility.yul\":22731:23093   */\n      pop\n        /* \"#utility.yul\":22683:23093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23099:23184   */\n    tag_586:\n        /* \"#utility.yul\":23144:23151   */\n      0x00\n        /* \"#utility.yul\":23173:23178   */\n      dup2\n        /* \"#utility.yul\":23162:23178   */\n      swap1\n      pop\n        /* \"#utility.yul\":23099:23184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23190:23291   */\n    tag_587:\n        /* \"#utility.yul\":23226:23233   */\n      0x00\n        /* \"#utility.yul\":23266:23284   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23259:23264   */\n      dup3\n        /* \"#utility.yul\":23255:23285   */\n      and\n        /* \"#utility.yul\":23244:23285   */\n      swap1\n      pop\n        /* \"#utility.yul\":23190:23291   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23297:23453   */\n    tag_588:\n        /* \"#utility.yul\":23354:23363   */\n      0x00\n        /* \"#utility.yul\":23387:23447   */\n      tag_865\n        /* \"#utility.yul\":23404:23446   */\n      tag_866\n        /* \"#utility.yul\":23413:23445   */\n      tag_867\n        /* \"#utility.yul\":23439:23444   */\n      dup5\n        /* \"#utility.yul\":23413:23445   */\n      tag_586\n      jump\t// in\n    tag_867:\n        /* \"#utility.yul\":23404:23446   */\n      tag_566\n      jump\t// in\n    tag_866:\n        /* \"#utility.yul\":23387:23447   */\n      tag_587\n      jump\t// in\n    tag_865:\n        /* \"#utility.yul\":23374:23447   */\n      swap1\n      pop\n        /* \"#utility.yul\":23297:23453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23459:23604   */\n    tag_589:\n        /* \"#utility.yul\":23553:23597   */\n      tag_869\n        /* \"#utility.yul\":23591:23596   */\n      dup2\n        /* \"#utility.yul\":23553:23597   */\n      tag_588\n      jump\t// in\n    tag_869:\n        /* \"#utility.yul\":23548:23551   */\n      dup3\n        /* \"#utility.yul\":23541:23598   */\n      mstore\n        /* \"#utility.yul\":23459:23604   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23610:23846   */\n    tag_287:\n        /* \"#utility.yul\":23710:23714   */\n      0x00\n        /* \"#utility.yul\":23748:23750   */\n      0x20\n        /* \"#utility.yul\":23737:23746   */\n      dup3\n        /* \"#utility.yul\":23733:23751   */\n      add\n        /* \"#utility.yul\":23725:23751   */\n      swap1\n      pop\n        /* \"#utility.yul\":23761:23839   */\n      tag_871\n        /* \"#utility.yul\":23836:23837   */\n      0x00\n        /* \"#utility.yul\":23825:23834   */\n      dup4\n        /* \"#utility.yul\":23821:23838   */\n      add\n        /* \"#utility.yul\":23812:23818   */\n      dup5\n        /* \"#utility.yul\":23761:23839   */\n      tag_589\n      jump\t// in\n    tag_871:\n        /* \"#utility.yul\":23610:23846   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23852:24294   */\n    tag_325:\n        /* \"#utility.yul\":24001:24005   */\n      0x00\n        /* \"#utility.yul\":24039:24041   */\n      0x60\n        /* \"#utility.yul\":24028:24037   */\n      dup3\n        /* \"#utility.yul\":24024:24042   */\n      add\n        /* \"#utility.yul\":24016:24042   */\n      swap1\n      pop\n        /* \"#utility.yul\":24052:24123   */\n      tag_873\n        /* \"#utility.yul\":24120:24121   */\n      0x00\n        /* \"#utility.yul\":24109:24118   */\n      dup4\n        /* \"#utility.yul\":24105:24122   */\n      add\n        /* \"#utility.yul\":24096:24102   */\n      dup7\n        /* \"#utility.yul\":24052:24123   */\n      tag_571\n      jump\t// in\n    tag_873:\n        /* \"#utility.yul\":24133:24205   */\n      tag_874\n        /* \"#utility.yul\":24201:24203   */\n      0x20\n        /* \"#utility.yul\":24190:24199   */\n      dup4\n        /* \"#utility.yul\":24186:24204   */\n      add\n        /* \"#utility.yul\":24177:24183   */\n      dup6\n        /* \"#utility.yul\":24133:24205   */\n      tag_555\n      jump\t// in\n    tag_874:\n        /* \"#utility.yul\":24215:24287   */\n      tag_875\n        /* \"#utility.yul\":24283:24285   */\n      0x40\n        /* \"#utility.yul\":24272:24281   */\n      dup4\n        /* \"#utility.yul\":24268:24286   */\n      add\n        /* \"#utility.yul\":24259:24265   */\n      dup5\n        /* \"#utility.yul\":24215:24287   */\n      tag_555\n      jump\t// in\n    tag_875:\n        /* \"#utility.yul\":23852:24294   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24300:24466   */\n    tag_590:\n        /* \"#utility.yul\":24440:24458   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":24436:24437   */\n      0x00\n        /* \"#utility.yul\":24428:24434   */\n      dup3\n        /* \"#utility.yul\":24424:24438   */\n      add\n        /* \"#utility.yul\":24417:24459   */\n      mstore\n        /* \"#utility.yul\":24300:24466   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24472:24838   */\n    tag_591:\n        /* \"#utility.yul\":24614:24617   */\n      0x00\n        /* \"#utility.yul\":24635:24702   */\n      tag_878\n        /* \"#utility.yul\":24699:24701   */\n      0x10\n        /* \"#utility.yul\":24694:24697   */\n      dup4\n        /* \"#utility.yul\":24635:24702   */\n      tag_533\n      jump\t// in\n    tag_878:\n        /* \"#utility.yul\":24628:24702   */\n      swap2\n      pop\n        /* \"#utility.yul\":24711:24804   */\n      tag_879\n        /* \"#utility.yul\":24800:24803   */\n      dup3\n        /* \"#utility.yul\":24711:24804   */\n      tag_590\n      jump\t// in\n    tag_879:\n        /* \"#utility.yul\":24829:24831   */\n      0x20\n        /* \"#utility.yul\":24824:24827   */\n      dup3\n        /* \"#utility.yul\":24820:24832   */\n      add\n        /* \"#utility.yul\":24813:24832   */\n      swap1\n      pop\n        /* \"#utility.yul\":24472:24838   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24844:25263   */\n    tag_375:\n        /* \"#utility.yul\":25010:25014   */\n      0x00\n        /* \"#utility.yul\":25048:25050   */\n      0x20\n        /* \"#utility.yul\":25037:25046   */\n      dup3\n        /* \"#utility.yul\":25033:25051   */\n      add\n        /* \"#utility.yul\":25025:25051   */\n      swap1\n      pop\n        /* \"#utility.yul\":25097:25106   */\n      dup2\n        /* \"#utility.yul\":25091:25095   */\n      dup2\n        /* \"#utility.yul\":25087:25107   */\n      sub\n        /* \"#utility.yul\":25083:25084   */\n      0x00\n        /* \"#utility.yul\":25072:25081   */\n      dup4\n        /* \"#utility.yul\":25068:25085   */\n      add\n        /* \"#utility.yul\":25061:25108   */\n      mstore\n        /* \"#utility.yul\":25125:25256   */\n      tag_881\n        /* \"#utility.yul\":25251:25255   */\n      dup2\n        /* \"#utility.yul\":25125:25256   */\n      tag_591\n      jump\t// in\n    tag_881:\n        /* \"#utility.yul\":25117:25256   */\n      swap1\n      pop\n        /* \"#utility.yul\":24844:25263   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25269:25711   */\n    tag_383:\n        /* \"#utility.yul\":25418:25422   */\n      0x00\n        /* \"#utility.yul\":25456:25458   */\n      0x60\n        /* \"#utility.yul\":25445:25454   */\n      dup3\n        /* \"#utility.yul\":25441:25459   */\n      add\n        /* \"#utility.yul\":25433:25459   */\n      swap1\n      pop\n        /* \"#utility.yul\":25469:25540   */\n      tag_883\n        /* \"#utility.yul\":25537:25538   */\n      0x00\n        /* \"#utility.yul\":25526:25535   */\n      dup4\n        /* \"#utility.yul\":25522:25539   */\n      add\n        /* \"#utility.yul\":25513:25519   */\n      dup7\n        /* \"#utility.yul\":25469:25540   */\n      tag_555\n      jump\t// in\n    tag_883:\n        /* \"#utility.yul\":25550:25622   */\n      tag_884\n        /* \"#utility.yul\":25618:25620   */\n      0x20\n        /* \"#utility.yul\":25607:25616   */\n      dup4\n        /* \"#utility.yul\":25603:25621   */\n      add\n        /* \"#utility.yul\":25594:25600   */\n      dup6\n        /* \"#utility.yul\":25550:25622   */\n      tag_555\n      jump\t// in\n    tag_884:\n        /* \"#utility.yul\":25632:25704   */\n      tag_885\n        /* \"#utility.yul\":25700:25702   */\n      0x40\n        /* \"#utility.yul\":25689:25698   */\n      dup4\n        /* \"#utility.yul\":25685:25703   */\n      add\n        /* \"#utility.yul\":25676:25682   */\n      dup5\n        /* \"#utility.yul\":25632:25704   */\n      tag_555\n      jump\t// in\n    tag_885:\n        /* \"#utility.yul\":25269:25711   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25717:25887   */\n    tag_592:\n        /* \"#utility.yul\":25857:25879   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":25853:25854   */\n      0x00\n        /* \"#utility.yul\":25845:25851   */\n      dup3\n        /* \"#utility.yul\":25841:25855   */\n      add\n        /* \"#utility.yul\":25834:25880   */\n      mstore\n        /* \"#utility.yul\":25717:25887   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25893:26259   */\n    tag_593:\n        /* \"#utility.yul\":26035:26038   */\n      0x00\n        /* \"#utility.yul\":26056:26123   */\n      tag_888\n        /* \"#utility.yul\":26120:26122   */\n      0x14\n        /* \"#utility.yul\":26115:26118   */\n      dup4\n        /* \"#utility.yul\":26056:26123   */\n      tag_533\n      jump\t// in\n    tag_888:\n        /* \"#utility.yul\":26049:26123   */\n      swap2\n      pop\n        /* \"#utility.yul\":26132:26225   */\n      tag_889\n        /* \"#utility.yul\":26221:26224   */\n      dup3\n        /* \"#utility.yul\":26132:26225   */\n      tag_592\n      jump\t// in\n    tag_889:\n        /* \"#utility.yul\":26250:26252   */\n      0x20\n        /* \"#utility.yul\":26245:26248   */\n      dup3\n        /* \"#utility.yul\":26241:26253   */\n      add\n        /* \"#utility.yul\":26234:26253   */\n      swap1\n      pop\n        /* \"#utility.yul\":25893:26259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26265:26684   */\n    tag_448:\n        /* \"#utility.yul\":26431:26435   */\n      0x00\n        /* \"#utility.yul\":26469:26471   */\n      0x20\n        /* \"#utility.yul\":26458:26467   */\n      dup3\n        /* \"#utility.yul\":26454:26472   */\n      add\n        /* \"#utility.yul\":26446:26472   */\n      swap1\n      pop\n        /* \"#utility.yul\":26518:26527   */\n      dup2\n        /* \"#utility.yul\":26512:26516   */\n      dup2\n        /* \"#utility.yul\":26508:26528   */\n      sub\n        /* \"#utility.yul\":26504:26505   */\n      0x00\n        /* \"#utility.yul\":26493:26502   */\n      dup4\n        /* \"#utility.yul\":26489:26506   */\n      add\n        /* \"#utility.yul\":26482:26529   */\n      mstore\n        /* \"#utility.yul\":26546:26677   */\n      tag_891\n        /* \"#utility.yul\":26672:26676   */\n      dup2\n        /* \"#utility.yul\":26546:26677   */\n      tag_593\n      jump\t// in\n    tag_891:\n        /* \"#utility.yul\":26538:26677   */\n      swap1\n      pop\n        /* \"#utility.yul\":26265:26684   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26690:26831   */\n    tag_594:\n        /* \"#utility.yul\":26739:26743   */\n      0x00\n        /* \"#utility.yul\":26762:26765   */\n      dup2\n        /* \"#utility.yul\":26754:26765   */\n      swap1\n      pop\n        /* \"#utility.yul\":26785:26788   */\n      dup2\n        /* \"#utility.yul\":26782:26783   */\n      0x00\n        /* \"#utility.yul\":26775:26789   */\n      mstore\n        /* \"#utility.yul\":26819:26823   */\n      0x20\n        /* \"#utility.yul\":26816:26817   */\n      0x00\n        /* \"#utility.yul\":26806:26824   */\n      keccak256\n        /* \"#utility.yul\":26798:26824   */\n      swap1\n      pop\n        /* \"#utility.yul\":26690:26831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26837:26930   */\n    tag_595:\n        /* \"#utility.yul\":26874:26880   */\n      0x00\n        /* \"#utility.yul\":26921:26923   */\n      0x20\n        /* \"#utility.yul\":26916:26918   */\n      0x1f\n        /* \"#utility.yul\":26909:26914   */\n      dup4\n        /* \"#utility.yul\":26905:26919   */\n      add\n        /* \"#utility.yul\":26901:26924   */\n      div\n        /* \"#utility.yul\":26891:26924   */\n      swap1\n      pop\n        /* \"#utility.yul\":26837:26930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26936:27043   */\n    tag_596:\n        /* \"#utility.yul\":26980:26988   */\n      0x00\n        /* \"#utility.yul\":27030:27035   */\n      dup3\n        /* \"#utility.yul\":27024:27028   */\n      dup3\n        /* \"#utility.yul\":27020:27036   */\n      shl\n        /* \"#utility.yul\":26999:27036   */\n      swap1\n      pop\n        /* \"#utility.yul\":26936:27043   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27049:27442   */\n    tag_597:\n        /* \"#utility.yul\":27118:27124   */\n      0x00\n        /* \"#utility.yul\":27168:27169   */\n      0x08\n        /* \"#utility.yul\":27156:27166   */\n      dup4\n        /* \"#utility.yul\":27152:27170   */\n      mul\n        /* \"#utility.yul\":27191:27288   */\n      tag_896\n        /* \"#utility.yul\":27221:27287   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":27210:27219   */\n      dup3\n        /* \"#utility.yul\":27191:27288   */\n      tag_596\n      jump\t// in\n    tag_896:\n        /* \"#utility.yul\":27309:27348   */\n      tag_897\n        /* \"#utility.yul\":27339:27347   */\n      dup7\n        /* \"#utility.yul\":27328:27337   */\n      dup4\n        /* \"#utility.yul\":27309:27348   */\n      tag_596\n      jump\t// in\n    tag_897:\n        /* \"#utility.yul\":27297:27348   */\n      swap6\n      pop\n        /* \"#utility.yul\":27381:27385   */\n      dup1\n        /* \"#utility.yul\":27377:27386   */\n      not\n        /* \"#utility.yul\":27370:27375   */\n      dup5\n        /* \"#utility.yul\":27366:27387   */\n      and\n        /* \"#utility.yul\":27357:27387   */\n      swap4\n      pop\n        /* \"#utility.yul\":27430:27434   */\n      dup1\n        /* \"#utility.yul\":27420:27428   */\n      dup7\n        /* \"#utility.yul\":27416:27435   */\n      and\n        /* \"#utility.yul\":27409:27414   */\n      dup5\n        /* \"#utility.yul\":27406:27436   */\n      or\n        /* \"#utility.yul\":27396:27436   */\n      swap3\n      pop\n        /* \"#utility.yul\":27125:27442   */\n      pop\n      pop\n        /* \"#utility.yul\":27049:27442   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27448:27590   */\n    tag_598:\n        /* \"#utility.yul\":27498:27507   */\n      0x00\n        /* \"#utility.yul\":27531:27584   */\n      tag_899\n        /* \"#utility.yul\":27549:27583   */\n      tag_900\n        /* \"#utility.yul\":27558:27582   */\n      tag_901\n        /* \"#utility.yul\":27576:27581   */\n      dup5\n        /* \"#utility.yul\":27558:27582   */\n      tag_544\n      jump\t// in\n    tag_901:\n        /* \"#utility.yul\":27549:27583   */\n      tag_566\n      jump\t// in\n    tag_900:\n        /* \"#utility.yul\":27531:27584   */\n      tag_544\n      jump\t// in\n    tag_899:\n        /* \"#utility.yul\":27518:27584   */\n      swap1\n      pop\n        /* \"#utility.yul\":27448:27590   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27596:27671   */\n    tag_599:\n        /* \"#utility.yul\":27639:27642   */\n      0x00\n        /* \"#utility.yul\":27660:27665   */\n      dup2\n        /* \"#utility.yul\":27653:27665   */\n      swap1\n      pop\n        /* \"#utility.yul\":27596:27671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27677:27946   */\n    tag_600:\n        /* \"#utility.yul\":27787:27826   */\n      tag_904\n        /* \"#utility.yul\":27818:27825   */\n      dup4\n        /* \"#utility.yul\":27787:27826   */\n      tag_598\n      jump\t// in\n    tag_904:\n        /* \"#utility.yul\":27848:27939   */\n      tag_905\n        /* \"#utility.yul\":27897:27938   */\n      tag_906\n        /* \"#utility.yul\":27921:27937   */\n      dup3\n        /* \"#utility.yul\":27897:27938   */\n      tag_599\n      jump\t// in\n    tag_906:\n        /* \"#utility.yul\":27889:27895   */\n      dup5\n        /* \"#utility.yul\":27882:27886   */\n      dup5\n        /* \"#utility.yul\":27876:27887   */\n      sload\n        /* \"#utility.yul\":27848:27939   */\n      tag_597\n      jump\t// in\n    tag_905:\n        /* \"#utility.yul\":27842:27846   */\n      dup3\n        /* \"#utility.yul\":27835:27940   */\n      sstore\n        /* \"#utility.yul\":27753:27946   */\n      pop\n        /* \"#utility.yul\":27677:27946   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27952:28025   */\n    tag_601:\n        /* \"#utility.yul\":27997:28000   */\n      0x00\n        /* \"#utility.yul\":27952:28025   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":28031:28220   */\n    tag_602:\n        /* \"#utility.yul\":28108:28140   */\n      tag_909\n      tag_601\n      jump\t// in\n    tag_909:\n        /* \"#utility.yul\":28149:28214   */\n      tag_910\n        /* \"#utility.yul\":28207:28213   */\n      dup2\n        /* \"#utility.yul\":28199:28205   */\n      dup5\n        /* \"#utility.yul\":28193:28197   */\n      dup5\n        /* \"#utility.yul\":28149:28214   */\n      tag_600\n      jump\t// in\n    tag_910:\n        /* \"#utility.yul\":28084:28220   */\n      pop\n        /* \"#utility.yul\":28031:28220   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28226:28412   */\n    tag_603:\n        /* \"#utility.yul\":28286:28406   */\n    tag_912:\n        /* \"#utility.yul\":28303:28306   */\n      dup2\n        /* \"#utility.yul\":28296:28301   */\n      dup2\n        /* \"#utility.yul\":28293:28307   */\n      lt\n        /* \"#utility.yul\":28286:28406   */\n      iszero\n      tag_914\n      jumpi\n        /* \"#utility.yul\":28357:28396   */\n      tag_915\n        /* \"#utility.yul\":28394:28395   */\n      0x00\n        /* \"#utility.yul\":28387:28392   */\n      dup3\n        /* \"#utility.yul\":28357:28396   */\n      tag_602\n      jump\t// in\n    tag_915:\n        /* \"#utility.yul\":28330:28331   */\n      0x01\n        /* \"#utility.yul\":28323:28328   */\n      dup2\n        /* \"#utility.yul\":28319:28332   */\n      add\n        /* \"#utility.yul\":28310:28332   */\n      swap1\n      pop\n        /* \"#utility.yul\":28286:28406   */\n      jump(tag_912)\n    tag_914:\n        /* \"#utility.yul\":28226:28412   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28418:28961   */\n    tag_604:\n        /* \"#utility.yul\":28519:28521   */\n      0x1f\n        /* \"#utility.yul\":28514:28517   */\n      dup3\n        /* \"#utility.yul\":28511:28522   */\n      gt\n        /* \"#utility.yul\":28508:28954   */\n      iszero\n      tag_917\n      jumpi\n        /* \"#utility.yul\":28553:28591   */\n      tag_918\n        /* \"#utility.yul\":28585:28590   */\n      dup2\n        /* \"#utility.yul\":28553:28591   */\n      tag_594\n      jump\t// in\n    tag_918:\n        /* \"#utility.yul\":28637:28666   */\n      tag_919\n        /* \"#utility.yul\":28655:28665   */\n      dup5\n        /* \"#utility.yul\":28637:28666   */\n      tag_595\n      jump\t// in\n    tag_919:\n        /* \"#utility.yul\":28627:28635   */\n      dup2\n        /* \"#utility.yul\":28623:28667   */\n      add\n        /* \"#utility.yul\":28820:28822   */\n      0x20\n        /* \"#utility.yul\":28808:28818   */\n      dup6\n        /* \"#utility.yul\":28805:28823   */\n      lt\n        /* \"#utility.yul\":28802:28851   */\n      iszero\n      tag_920\n      jumpi\n        /* \"#utility.yul\":28841:28849   */\n      dup2\n        /* \"#utility.yul\":28826:28849   */\n      swap1\n      pop\n        /* \"#utility.yul\":28802:28851   */\n    tag_920:\n        /* \"#utility.yul\":28864:28944   */\n      tag_921\n        /* \"#utility.yul\":28920:28942   */\n      tag_922\n        /* \"#utility.yul\":28938:28941   */\n      dup6\n        /* \"#utility.yul\":28920:28942   */\n      tag_595\n      jump\t// in\n    tag_922:\n        /* \"#utility.yul\":28910:28918   */\n      dup4\n        /* \"#utility.yul\":28906:28943   */\n      add\n        /* \"#utility.yul\":28893:28904   */\n      dup3\n        /* \"#utility.yul\":28864:28944   */\n      tag_603\n      jump\t// in\n    tag_921:\n        /* \"#utility.yul\":28523:28954   */\n      pop\n      pop\n        /* \"#utility.yul\":28508:28954   */\n    tag_917:\n        /* \"#utility.yul\":28418:28961   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28967:29084   */\n    tag_605:\n        /* \"#utility.yul\":29021:29029   */\n      0x00\n        /* \"#utility.yul\":29071:29076   */\n      dup3\n        /* \"#utility.yul\":29065:29069   */\n      dup3\n        /* \"#utility.yul\":29061:29077   */\n      shr\n        /* \"#utility.yul\":29040:29077   */\n      swap1\n      pop\n        /* \"#utility.yul\":28967:29084   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29090:29259   */\n    tag_606:\n        /* \"#utility.yul\":29134:29140   */\n      0x00\n        /* \"#utility.yul\":29167:29218   */\n      tag_925\n        /* \"#utility.yul\":29215:29216   */\n      0x00\n        /* \"#utility.yul\":29211:29217   */\n      not\n        /* \"#utility.yul\":29203:29208   */\n      dup5\n        /* \"#utility.yul\":29200:29201   */\n      0x08\n        /* \"#utility.yul\":29196:29209   */\n      mul\n        /* \"#utility.yul\":29167:29218   */\n      tag_605\n      jump\t// in\n    tag_925:\n        /* \"#utility.yul\":29163:29219   */\n      not\n        /* \"#utility.yul\":29248:29252   */\n      dup1\n        /* \"#utility.yul\":29242:29246   */\n      dup4\n        /* \"#utility.yul\":29238:29253   */\n      and\n        /* \"#utility.yul\":29228:29253   */\n      swap2\n      pop\n        /* \"#utility.yul\":29141:29259   */\n      pop\n        /* \"#utility.yul\":29090:29259   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29264:29559   */\n    tag_607:\n        /* \"#utility.yul\":29340:29344   */\n      0x00\n        /* \"#utility.yul\":29486:29515   */\n      tag_927\n        /* \"#utility.yul\":29511:29514   */\n      dup4\n        /* \"#utility.yul\":29505:29509   */\n      dup4\n        /* \"#utility.yul\":29486:29515   */\n      tag_606\n      jump\t// in\n    tag_927:\n        /* \"#utility.yul\":29478:29515   */\n      swap2\n      pop\n        /* \"#utility.yul\":29548:29551   */\n      dup3\n        /* \"#utility.yul\":29545:29546   */\n      0x02\n        /* \"#utility.yul\":29541:29552   */\n      mul\n        /* \"#utility.yul\":29535:29539   */\n      dup3\n        /* \"#utility.yul\":29532:29553   */\n      or\n        /* \"#utility.yul\":29524:29553   */\n      swap1\n      pop\n        /* \"#utility.yul\":29264:29559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29564:30959   */\n    tag_486:\n        /* \"#utility.yul\":29681:29718   */\n      tag_929\n        /* \"#utility.yul\":29714:29717   */\n      dup3\n        /* \"#utility.yul\":29681:29718   */\n      tag_532\n      jump\t// in\n    tag_929:\n        /* \"#utility.yul\":29783:29801   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":29775:29781   */\n      dup2\n        /* \"#utility.yul\":29772:29802   */\n      gt\n        /* \"#utility.yul\":29769:29825   */\n      iszero\n      tag_930\n      jumpi\n        /* \"#utility.yul\":29805:29823   */\n      tag_931\n      tag_550\n      jump\t// in\n    tag_931:\n        /* \"#utility.yul\":29769:29825   */\n    tag_930:\n        /* \"#utility.yul\":29849:29887   */\n      tag_932\n        /* \"#utility.yul\":29881:29885   */\n      dup3\n        /* \"#utility.yul\":29875:29886   */\n      sload\n        /* \"#utility.yul\":29849:29887   */\n      tag_162\n      jump\t// in\n    tag_932:\n        /* \"#utility.yul\":29934:30001   */\n      tag_933\n        /* \"#utility.yul\":29994:30000   */\n      dup3\n        /* \"#utility.yul\":29986:29992   */\n      dup3\n        /* \"#utility.yul\":29980:29984   */\n      dup6\n        /* \"#utility.yul\":29934:30001   */\n      tag_604\n      jump\t// in\n    tag_933:\n        /* \"#utility.yul\":30028:30029   */\n      0x00\n        /* \"#utility.yul\":30052:30056   */\n      0x20\n        /* \"#utility.yul\":30039:30056   */\n      swap1\n      pop\n        /* \"#utility.yul\":30084:30086   */\n      0x1f\n        /* \"#utility.yul\":30076:30082   */\n      dup4\n        /* \"#utility.yul\":30073:30087   */\n      gt\n        /* \"#utility.yul\":30101:30102   */\n      0x01\n        /* \"#utility.yul\":30096:30714   */\n      dup2\n      eq\n      tag_935\n      jumpi\n        /* \"#utility.yul\":30758:30759   */\n      0x00\n        /* \"#utility.yul\":30775:30781   */\n      dup5\n        /* \"#utility.yul\":30772:30849   */\n      iszero\n      tag_936\n      jumpi\n        /* \"#utility.yul\":30824:30833   */\n      dup3\n        /* \"#utility.yul\":30819:30822   */\n      dup8\n        /* \"#utility.yul\":30815:30834   */\n      add\n        /* \"#utility.yul\":30809:30835   */\n      mload\n        /* \"#utility.yul\":30800:30835   */\n      swap1\n      pop\n        /* \"#utility.yul\":30772:30849   */\n    tag_936:\n        /* \"#utility.yul\":30875:30942   */\n      tag_937\n        /* \"#utility.yul\":30935:30941   */\n      dup6\n        /* \"#utility.yul\":30928:30933   */\n      dup3\n        /* \"#utility.yul\":30875:30942   */\n      tag_607\n      jump\t// in\n    tag_937:\n        /* \"#utility.yul\":30869:30873   */\n      dup7\n        /* \"#utility.yul\":30862:30943   */\n      sstore\n        /* \"#utility.yul\":30731:30953   */\n      pop\n        /* \"#utility.yul\":30066:30953   */\n      jump(tag_934)\n        /* \"#utility.yul\":30096:30714   */\n    tag_935:\n        /* \"#utility.yul\":30148:30152   */\n      0x1f\n        /* \"#utility.yul\":30144:30153   */\n      not\n        /* \"#utility.yul\":30136:30142   */\n      dup5\n        /* \"#utility.yul\":30132:30154   */\n      and\n        /* \"#utility.yul\":30182:30219   */\n      tag_938\n        /* \"#utility.yul\":30214:30218   */\n      dup7\n        /* \"#utility.yul\":30182:30219   */\n      tag_594\n      jump\t// in\n    tag_938:\n        /* \"#utility.yul\":30241:30242   */\n      0x00\n        /* \"#utility.yul\":30255:30463   */\n    tag_939:\n        /* \"#utility.yul\":30269:30276   */\n      dup3\n        /* \"#utility.yul\":30266:30267   */\n      dup2\n        /* \"#utility.yul\":30263:30277   */\n      lt\n        /* \"#utility.yul\":30255:30463   */\n      iszero\n      tag_941\n      jumpi\n        /* \"#utility.yul\":30348:30357   */\n      dup5\n        /* \"#utility.yul\":30343:30346   */\n      dup10\n        /* \"#utility.yul\":30339:30358   */\n      add\n        /* \"#utility.yul\":30333:30359   */\n      mload\n        /* \"#utility.yul\":30325:30331   */\n      dup3\n        /* \"#utility.yul\":30318:30360   */\n      sstore\n        /* \"#utility.yul\":30399:30400   */\n      0x01\n        /* \"#utility.yul\":30391:30397   */\n      dup3\n        /* \"#utility.yul\":30387:30401   */\n      add\n        /* \"#utility.yul\":30377:30401   */\n      swap2\n      pop\n        /* \"#utility.yul\":30446:30448   */\n      0x20\n        /* \"#utility.yul\":30435:30444   */\n      dup6\n        /* \"#utility.yul\":30431:30449   */\n      add\n        /* \"#utility.yul\":30418:30449   */\n      swap5\n      pop\n        /* \"#utility.yul\":30292:30296   */\n      0x20\n        /* \"#utility.yul\":30289:30290   */\n      dup2\n        /* \"#utility.yul\":30285:30297   */\n      add\n        /* \"#utility.yul\":30280:30297   */\n      swap1\n      pop\n        /* \"#utility.yul\":30255:30463   */\n      jump(tag_939)\n    tag_941:\n        /* \"#utility.yul\":30491:30497   */\n      dup7\n        /* \"#utility.yul\":30482:30489   */\n      dup4\n        /* \"#utility.yul\":30479:30498   */\n      lt\n        /* \"#utility.yul\":30476:30655   */\n      iszero\n      tag_942\n      jumpi\n        /* \"#utility.yul\":30549:30558   */\n      dup5\n        /* \"#utility.yul\":30544:30547   */\n      dup10\n        /* \"#utility.yul\":30540:30559   */\n      add\n        /* \"#utility.yul\":30534:30560   */\n      mload\n        /* \"#utility.yul\":30592:30640   */\n      tag_943\n        /* \"#utility.yul\":30634:30638   */\n      0x1f\n        /* \"#utility.yul\":30626:30632   */\n      dup10\n        /* \"#utility.yul\":30622:30639   */\n      and\n        /* \"#utility.yul\":30611:30620   */\n      dup3\n        /* \"#utility.yul\":30592:30640   */\n      tag_606\n      jump\t// in\n    tag_943:\n        /* \"#utility.yul\":30584:30590   */\n      dup4\n        /* \"#utility.yul\":30577:30641   */\n      sstore\n        /* \"#utility.yul\":30499:30655   */\n      pop\n        /* \"#utility.yul\":30476:30655   */\n    tag_942:\n        /* \"#utility.yul\":30701:30702   */\n      0x01\n        /* \"#utility.yul\":30697:30698   */\n      0x02\n        /* \"#utility.yul\":30689:30695   */\n      dup9\n        /* \"#utility.yul\":30685:30699   */\n      mul\n        /* \"#utility.yul\":30681:30703   */\n      add\n        /* \"#utility.yul\":30675:30679   */\n      dup9\n        /* \"#utility.yul\":30668:30704   */\n      sstore\n        /* \"#utility.yul\":30103:30714   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":30066:30953   */\n    tag_934:\n      pop\n        /* \"#utility.yul\":29656:30959   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":29564:30959   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30965:31145   */\n    tag_608:\n        /* \"#utility.yul\":31013:31090   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31010:31011   */\n      0x00\n        /* \"#utility.yul\":31003:31091   */\n      mstore\n        /* \"#utility.yul\":31110:31114   */\n      0x12\n        /* \"#utility.yul\":31107:31108   */\n      0x04\n        /* \"#utility.yul\":31100:31115   */\n      mstore\n        /* \"#utility.yul\":31134:31138   */\n      0x24\n        /* \"#utility.yul\":31131:31132   */\n      0x00\n        /* \"#utility.yul\":31124:31139   */\n      revert\n        /* \"#utility.yul\":31151:31336   */\n    tag_503:\n        /* \"#utility.yul\":31191:31192   */\n      0x00\n        /* \"#utility.yul\":31208:31228   */\n      tag_946\n        /* \"#utility.yul\":31226:31227   */\n      dup3\n        /* \"#utility.yul\":31208:31228   */\n      tag_544\n      jump\t// in\n    tag_946:\n        /* \"#utility.yul\":31203:31228   */\n      swap2\n      pop\n        /* \"#utility.yul\":31242:31262   */\n      tag_947\n        /* \"#utility.yul\":31260:31261   */\n      dup4\n        /* \"#utility.yul\":31242:31262   */\n      tag_544\n      jump\t// in\n    tag_947:\n        /* \"#utility.yul\":31237:31262   */\n      swap3\n      pop\n        /* \"#utility.yul\":31281:31282   */\n      dup3\n        /* \"#utility.yul\":31271:31306   */\n      tag_948\n      jumpi\n        /* \"#utility.yul\":31286:31304   */\n      tag_949\n      tag_608\n      jump\t// in\n    tag_949:\n        /* \"#utility.yul\":31271:31306   */\n    tag_948:\n        /* \"#utility.yul\":31328:31329   */\n      dup3\n        /* \"#utility.yul\":31325:31326   */\n      dup3\n        /* \"#utility.yul\":31321:31330   */\n      div\n        /* \"#utility.yul\":31316:31330   */\n      swap1\n      pop\n        /* \"#utility.yul\":31151:31336   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31342:31440   */\n    tag_609:\n        /* \"#utility.yul\":31393:31399   */\n      0x00\n        /* \"#utility.yul\":31427:31432   */\n      dup2\n        /* \"#utility.yul\":31421:31433   */\n      mload\n        /* \"#utility.yul\":31411:31433   */\n      swap1\n      pop\n        /* \"#utility.yul\":31342:31440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31446:31593   */\n    tag_610:\n        /* \"#utility.yul\":31547:31558   */\n      0x00\n        /* \"#utility.yul\":31584:31587   */\n      dup2\n        /* \"#utility.yul\":31569:31587   */\n      swap1\n      pop\n        /* \"#utility.yul\":31446:31593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31599:31985   */\n    tag_611:\n        /* \"#utility.yul\":31703:31706   */\n      0x00\n        /* \"#utility.yul\":31731:31769   */\n      tag_953\n        /* \"#utility.yul\":31763:31768   */\n      dup3\n        /* \"#utility.yul\":31731:31769   */\n      tag_609\n      jump\t// in\n    tag_953:\n        /* \"#utility.yul\":31785:31873   */\n      tag_954\n        /* \"#utility.yul\":31866:31872   */\n      dup2\n        /* \"#utility.yul\":31861:31864   */\n      dup6\n        /* \"#utility.yul\":31785:31873   */\n      tag_610\n      jump\t// in\n    tag_954:\n        /* \"#utility.yul\":31778:31873   */\n      swap4\n      pop\n        /* \"#utility.yul\":31882:31947   */\n      tag_955\n        /* \"#utility.yul\":31940:31946   */\n      dup2\n        /* \"#utility.yul\":31935:31938   */\n      dup6\n        /* \"#utility.yul\":31928:31932   */\n      0x20\n        /* \"#utility.yul\":31921:31926   */\n      dup7\n        /* \"#utility.yul\":31917:31933   */\n      add\n        /* \"#utility.yul\":31882:31947   */\n      tag_534\n      jump\t// in\n    tag_955:\n        /* \"#utility.yul\":31972:31978   */\n      dup1\n        /* \"#utility.yul\":31967:31970   */\n      dup5\n        /* \"#utility.yul\":31963:31979   */\n      add\n        /* \"#utility.yul\":31956:31979   */\n      swap2\n      pop\n        /* \"#utility.yul\":31707:31985   */\n      pop\n        /* \"#utility.yul\":31599:31985   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31991:32262   */\n    tag_511:\n        /* \"#utility.yul\":32121:32124   */\n      0x00\n        /* \"#utility.yul\":32143:32236   */\n      tag_957\n        /* \"#utility.yul\":32232:32235   */\n      dup3\n        /* \"#utility.yul\":32223:32229   */\n      dup5\n        /* \"#utility.yul\":32143:32236   */\n      tag_611\n      jump\t// in\n    tag_957:\n        /* \"#utility.yul\":32136:32236   */\n      swap2\n      pop\n        /* \"#utility.yul\":32253:32256   */\n      dup2\n        /* \"#utility.yul\":32246:32256   */\n      swap1\n      pop\n        /* \"#utility.yul\":31991:32262   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203406afcfbef0cc43887d8e4bdcf1a33f1a2c81e6f089e3f0f05a18f9b7b0174b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2821": {
									"entryPoint": null,
									"id": 2821,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_416": {
									"entryPoint": 86,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 340,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:456:18",
										"nodeType": "YulBlock",
										"src": "0:456:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:57:18",
													"nodeType": "YulBlock",
													"src": "51:57:18",
													"statements": [
														{
															"nativeSrc": "61:41:18",
															"nodeType": "YulAssignment",
															"src": "61:41:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:18:18",
																		"nodeType": "YulLiteral",
																		"src": "83:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:18"
																},
																"nativeSrc": "72:30:18",
																"nodeType": "YulFunctionCall",
																"src": "72:30:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "7:101:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:18",
														"nodeType": "YulTypedName",
														"src": "33:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:18",
														"nodeType": "YulTypedName",
														"src": "43:7:18",
														"type": ""
													}
												],
												"src": "7:101:18"
											},
											{
												"body": {
													"nativeSrc": "177:52:18",
													"nodeType": "YulBlock",
													"src": "177:52:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "194:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "194:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "216:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "216:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "199:16:18",
																			"nodeType": "YulIdentifier",
																			"src": "199:16:18"
																		},
																		"nativeSrc": "199:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "199:23:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "187:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:18"
																},
																"nativeSrc": "187:36:18",
																"nodeType": "YulFunctionCall",
																"src": "187:36:18"
															},
															"nativeSrc": "187:36:18",
															"nodeType": "YulExpressionStatement",
															"src": "187:36:18"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "114:115:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "165:5:18",
														"nodeType": "YulTypedName",
														"src": "165:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "172:3:18",
														"nodeType": "YulTypedName",
														"src": "172:3:18",
														"type": ""
													}
												],
												"src": "114:115:18"
											},
											{
												"body": {
													"nativeSrc": "331:122:18",
													"nodeType": "YulBlock",
													"src": "331:122:18",
													"statements": [
														{
															"nativeSrc": "341:26:18",
															"nodeType": "YulAssignment",
															"src": "341:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "353:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "353:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "364:2:18",
																		"nodeType": "YulLiteral",
																		"src": "364:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "349:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:18"
																},
																"nativeSrc": "349:18:18",
																"nodeType": "YulFunctionCall",
																"src": "349:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "341:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "341:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "419:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "419:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "432:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "432:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "443:1:18",
																				"nodeType": "YulLiteral",
																				"src": "443:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "428:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "428:3:18"
																		},
																		"nativeSrc": "428:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "428:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "377:41:18",
																	"nodeType": "YulIdentifier",
																	"src": "377:41:18"
																},
																"nativeSrc": "377:69:18",
																"nodeType": "YulFunctionCall",
																"src": "377:69:18"
															},
															"nativeSrc": "377:69:18",
															"nodeType": "YulExpressionStatement",
															"src": "377:69:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "235:218:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "303:9:18",
														"nodeType": "YulTypedName",
														"src": "303:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "315:6:18",
														"nodeType": "YulTypedName",
														"src": "315:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "326:4:18",
														"nodeType": "YulTypedName",
														"src": "326:4:18",
														"type": ""
													}
												],
												"src": "235:218:18"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff16815250348015610042575f80fd5b5061005161005660201b60201c565b6101b6565b5f61006561015460201b60201c565b9050805f0160089054906101000a900460ff16156100af576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff8016815f015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff16146101515767ffffffffffffffff815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051610148919061019d565b60405180910390a15b50565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f67ffffffffffffffff82169050919050565b6101978161017b565b82525050565b5f6020820190506101b05f83018461018e565b92915050565b6080516136fe6101dc5f395f8181611559015281816115ae015261176801526136fe5ff3fe60806040526004361061019b575f3560e01c8063715018a6116100eb578063a9059cbb11610089578063b88a802f11610063578063b88a802f1461054e578063d8ad523114610564578063dd62ed3e146105a0578063f2fde38b146105dc5761019b565b8063a9059cbb146104c0578063ad3cb1cc146104fc578063af9dcc2c146105265761019b565b80638da5cb5b116100c55780638da5cb5b1461042c57806395d89b41146104565780639e24f23614610480578063a7892c11146104aa5761019b565b8063715018a6146103d657806378f3c4b6146103ec5780638456cb59146104165761019b565b8063313ce567116101585780634f1ef286116101325780634f1ef2861461032a57806352d1902d146103465780635c975abb1461037057806370a082311461039a5761019b565b8063313ce567146102bb57806338b42785146102e55780633f4ba83a146103145761019b565b806306fdde031461019f578063095ea7b3146101c95780630b5940361461020557806318160ddd1461022d5780631cb44dfc1461025757806323b872dd1461027f575b5f80fd5b3480156101aa575f80fd5b506101b3610604565b6040516101c091906126be565b60405180910390f35b3480156101d4575f80fd5b506101ef60048036038101906101ea919061277c565b6106a2565b6040516101fc91906127d4565b60405180910390f35b348015610210575f80fd5b5061022b60048036038101906102269190612906565b6106c4565b005b348015610238575f80fd5b50610241610746565b60405161024e9190612940565b60405180910390f35b348015610262575f80fd5b5061027d60048036038101906102789190612959565b61075d565b005b34801561028a575f80fd5b506102a560048036038101906102a09190612984565b610850565b6040516102b291906127d4565b60405180910390f35b3480156102c6575f80fd5b506102cf61087e565b6040516102dc91906129ef565b60405180910390f35b3480156102f0575f80fd5b506102f9610886565b60405161030b96959493929190612a08565b60405180910390f35b34801561031f575f80fd5b506103286108af565b005b610344600480360381019061033f9190612b1b565b6108c1565b005b348015610351575f80fd5b5061035a6108e0565b6040516103679190612b8d565b60405180910390f35b34801561037b575f80fd5b50610384610911565b60405161039191906127d4565b60405180910390f35b3480156103a5575f80fd5b506103c060048036038101906103bb9190612959565b610925565b6040516103cd9190612940565b60405180910390f35b3480156103e1575f80fd5b506103ea610978565b005b3480156103f7575f80fd5b5061040061098b565b60405161040d9190612c01565b60405180910390f35b348015610421575f80fd5b5061042a6109b0565b005b348015610437575f80fd5b506104406109c2565b60405161044d9190612c29565b60405180910390f35b348015610461575f80fd5b5061046a6109f7565b60405161047791906126be565b60405180910390f35b34801561048b575f80fd5b50610494610a95565b6040516104a19190612940565b60405180910390f35b3480156104b5575f80fd5b506104be610a9b565b005b3480156104cb575f80fd5b506104e660048036038101906104e1919061277c565b610ce5565b6040516104f391906127d4565b60405180910390f35b348015610507575f80fd5b50610510610d07565b60405161051d91906126be565b60405180910390f35b348015610531575f80fd5b5061054c60048036038101906105479190612ce0565b610d40565b005b348015610559575f80fd5b50610562610fee565b005b34801561056f575f80fd5b5061058a60048036038101906105859190612959565b611185565b6040516105979190612940565b60405180910390f35b3480156105ab575f80fd5b506105c660048036038101906105c19190612d7d565b61119a565b6040516105d39190612940565b60405180910390f35b3480156105e7575f80fd5b5061060260048036038101906105fd9190612959565b61122a565b005b60605f61060f6112ae565b905080600301805461062090612de8565b80601f016020809104026020016040519081016040528092919081815260200182805461064c90612de8565b80156106975780601f1061066e57610100808354040283529160200191610697565b820191905f5260205f20905b81548152906001019060200180831161067a57829003601f168201915b505050505091505090565b5f806106ac6112d5565b90506106b98185856112dc565b600191505092915050565b6106cc6112ee565b8060335f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015560a082015181600501559050507f367b6b00685ae263e44e2231e399d2e112eac1979516a9e0e1069d7cd4ac3a2d8160405161073b9190612ea0565b60405180910390a150565b5f806107506112ae565b9050806002015491505090565b6107656112ee565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107ca576040517f5521068100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060325f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f3df77beb5db05fcdd70a30fc8adf3f83f9501b68579455adbd100b818094039460405160405180910390a250565b5f8061085a6112d5565b9050610867858285611375565b610872858585611407565b60019150509392505050565b5f6012905090565b6033805f0154908060010154908060020154908060030154908060040154908060050154905086565b6108b76112ee565b6108bf6114f7565b565b6108c9611557565b6108d28261163d565b6108dc8282611648565b5050565b5f6108e9611766565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f805f9054906101000a900460ff16905090565b5f8061092f6112ae565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b6109806112ee565b6109895f6117ed565b565b60325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109b86112ee565b6109c06118be565b565b5f806109cc61191f565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f610a026112ae565b9050806004018054610a1390612de8565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3f90612de8565b8015610a8a5780601f10610a6157610100808354040283529160200191610a8a565b820191905f5260205f20905b815481529060010190602001808311610a6d57829003601f168201915b505050505091505090565b60395481565b610aa3611946565b603360050154603954610ab69190612ee6565b421015610aef576040517f4a448f3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663395924dc6040518163ffffffff1660e01b8152600401608060405180830381865afa158015610b5a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b7e9190612fa2565b9050610e10816060015142610b939190612fcd565b1115610bcb576040517f7428474c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b603360020154815f01511015610c0d576040517fda2029d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60335f0154816020015110158015610c2e5750603360010154816040015110155b15610c4157610c3c81611990565b610c4b565b610c4a81611a07565b5b4260398190555060325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166309c22c5d6040518163ffffffff1660e01b81526004016020604051808303815f875af1158015610cbd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ce1919061302a565b5050565b5f80610cef6112d5565b9050610cfc818585611407565b600191505092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b5f610d49611a7e565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610d915750825b90505f60018367ffffffffffffffff16148015610dc457505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610dd2575080155b15610e09576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610e56576001855f0160086101000a81548160ff0219169083151502179055505b610e608989611aa5565b610e6933611abb565b610e71611acf565b610e79611ae1565b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603610ede576040517f5521068100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8660325f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560335f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050155905050610f8933610f6a61087e565b600a610f769190613184565b620f4240610f8491906131ce565b611aeb565b8315610fe3575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610fda919061325b565b60405180910390a15b505050505050505050565b610ff6611946565b603360050154603a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546110449190612ee6565b42101561107d576040517f2bc08a7300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663395924dc6040518163ffffffff1660e01b8152600401608060405180830381865afa1580156110e8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061110c9190612fa2565b90505f61112a8260200151836040015161112533610925565b611b6a565b90505f8111156111815761113e3382611aeb565b42603a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5050565b603a602052805f5260405f205f915090505481565b5f806111a46112ae565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b6112326112ee565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016112999190612c29565b60405180910390fd5b6112ab816117ed565b50565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b6112e98383836001611c0e565b505050565b6112f66112d5565b73ffffffffffffffffffffffffffffffffffffffff166113146109c2565b73ffffffffffffffffffffffffffffffffffffffff1614611373576113376112d5565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161136a9190612c29565b60405180910390fd5b565b5f611380848461119a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461140157818110156113f2578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016113e993929190613274565b60405180910390fd5b61140084848484035f611c0e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611477575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161146e9190612c29565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114e7575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016114de9190612c29565b60405180910390fd5b6114f2838383611deb565b505050565b6114ff61201a565b5f805f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6115406112d5565b60405161154d9190612c29565b60405180910390a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061160457507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166115eb612063565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561163b576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6116456112ee565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156116b057506040513d601f19601f820116820180604052508101906116ad919061302a565b60015b6116f157816040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016116e89190612c29565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b811461175757806040517faa1d49a400000000000000000000000000000000000000000000000000000000815260040161174e9190612b8d565b60405180910390fd5b61176183836120b6565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146117eb576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f6117f661191f565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b6118c6611946565b60015f806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119086112d5565b6040516119159190612c29565b60405180910390a1565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b61194e610911565b1561198e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611985906132f3565b60405180910390fd5b565b5f6119ab826020015183604001516119a6610746565b611b6a565b90505f811115611a03576119bf3082612128565b7fda04004d58812f3e164f58e498158acca1b0054d975fce0e3bafdf56f2e254ba81836020015184604001516040516119fa93929190613311565b60405180910390a15b5050565b5f611a2282602001518360400151611a1d610746565b6121a7565b90505f811115611a7a57611a363082611aeb565b7f0958e73d0165cd8413c567ddcfecfbdfb06498a561de5cd56849c2b463f66cdf8183602001518460400151604051611a7193929190613311565b60405180910390a15b5050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611aad612270565b611ab782826122b0565b5050565b611ac3612270565b611acc816122ec565b50565b611ad7612270565b611adf612370565b565b611ae9612270565b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b5b575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611b529190612c29565b60405180910390fd5b611b665f8383611deb565b5050565b5f80611b8360335f01548661239290919063ffffffff16565b90505f611b9e6033600101548661239290919063ffffffff16565b9050611c036064611bf5612710611be788611bd987611bcb8a6033600301546123a790919063ffffffff16565b6123a790919063ffffffff16565b6123a790919063ffffffff16565b6123bc90919063ffffffff16565b6123bc90919063ffffffff16565b925050509392505050565b5f611c176112ae565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611c89575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611c809190612c29565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611cf9575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611cf09190612c29565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115611de4578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611ddb9190612940565b60405180910390a35b5050505050565b5f611df46112ae565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611e485781816002015f828254611e3c9190612ee6565b92505081905550611f1a565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015611ed3578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611eca93929190613274565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611f635781816002015f8282540392505081905550611faf565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161200c9190612940565b60405180910390a350505050565b612022610911565b612061576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161205890613390565b60405180910390fd5b565b5f61208f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6123d1565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6120bf826123da565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f8151111561211b5761211582826124a3565b50612124565b612123612523565b5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612198575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161218f9190612c29565b60405180910390fd5b6121a3825f83611deb565b5050565b5f808460335f0154116121ba575f6121d2565b6121d18560335f015461239290919063ffffffff16565b5b90505f84603360010154116121e7575f612200565b6121ff8560336001015461239290919063ffffffff16565b5b905061226560646122576127106122498861223b8761222d8a6033600401546123a790919063ffffffff16565b6123a790919063ffffffff16565b6123a790919063ffffffff16565b6123bc90919063ffffffff16565b6123bc90919063ffffffff16565b925050509392505050565b61227861255f565b6122ae576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6122b8612270565b5f6122c16112ae565b9050828160030190816122d49190613542565b50818160040190816122e69190613542565b50505050565b6122f4612270565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612364575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161235b9190612c29565b60405180910390fd5b61236d816117ed565b50565b612378612270565b5f805f6101000a81548160ff021916908315150217905550565b5f818361239f9190612fcd565b905092915050565b5f81836123b491906131ce565b905092915050565b5f81836123c9919061363e565b905092915050565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361243557806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161242c9190612c29565b60405180910390fd5b806124617f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6123d1565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff16846040516124cc91906136b2565b5f60405180830381855af49150503d805f8114612504576040519150601f19603f3d011682016040523d82523d5f602084013e612509565b606091505b509150915061251985838361257d565b9250505092915050565b5f34111561255d576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f612568611a7e565b5f0160089054906101000a900460ff16905090565b6060826125925761258d8261260a565b612602565b5f82511480156125b857505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156125fa57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016125f19190612c29565b60405180910390fd5b819050612603565b5b9392505050565b5f8151111561261c5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6126908261264e565b61269a8185612658565b93506126aa818560208601612668565b6126b381612676565b840191505092915050565b5f6020820190508181035f8301526126d68184612686565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f612718826126ef565b9050919050565b6127288161270e565b8114612732575f80fd5b50565b5f813590506127438161271f565b92915050565b5f819050919050565b61275b81612749565b8114612765575f80fd5b50565b5f8135905061277681612752565b92915050565b5f8060408385031215612792576127916126e7565b5b5f61279f85828601612735565b92505060206127b085828601612768565b9150509250929050565b5f8115159050919050565b6127ce816127ba565b82525050565b5f6020820190506127e75f8301846127c5565b92915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61282782612676565b810181811067ffffffffffffffff82111715612846576128456127f1565b5b80604052505050565b5f6128586126de565b9050612864828261281e565b919050565b5f60c0828403121561287e5761287d6127ed565b5b61288860c061284f565b90505f61289784828501612768565b5f8301525060206128aa84828501612768565b60208301525060406128be84828501612768565b60408301525060606128d284828501612768565b60608301525060806128e684828501612768565b60808301525060a06128fa84828501612768565b60a08301525092915050565b5f60c0828403121561291b5761291a6126e7565b5b5f61292884828501612869565b91505092915050565b61293a81612749565b82525050565b5f6020820190506129535f830184612931565b92915050565b5f6020828403121561296e5761296d6126e7565b5b5f61297b84828501612735565b91505092915050565b5f805f6060848603121561299b5761299a6126e7565b5b5f6129a886828701612735565b93505060206129b986828701612735565b92505060406129ca86828701612768565b9150509250925092565b5f60ff82169050919050565b6129e9816129d4565b82525050565b5f602082019050612a025f8301846129e0565b92915050565b5f60c082019050612a1b5f830189612931565b612a286020830188612931565b612a356040830187612931565b612a426060830186612931565b612a4f6080830185612931565b612a5c60a0830184612931565b979650505050505050565b5f80fd5b5f80fd5b5f67ffffffffffffffff821115612a8957612a886127f1565b5b612a9282612676565b9050602081019050919050565b828183375f83830152505050565b5f612abf612aba84612a6f565b61284f565b905082815260208101848484011115612adb57612ada612a6b565b5b612ae6848285612a9f565b509392505050565b5f82601f830112612b0257612b01612a67565b5b8135612b12848260208601612aad565b91505092915050565b5f8060408385031215612b3157612b306126e7565b5b5f612b3e85828601612735565b925050602083013567ffffffffffffffff811115612b5f57612b5e6126eb565b5b612b6b85828601612aee565b9150509250929050565b5f819050919050565b612b8781612b75565b82525050565b5f602082019050612ba05f830184612b7e565b92915050565b5f819050919050565b5f612bc9612bc4612bbf846126ef565b612ba6565b6126ef565b9050919050565b5f612bda82612baf565b9050919050565b5f612beb82612bd0565b9050919050565b612bfb81612be1565b82525050565b5f602082019050612c145f830184612bf2565b92915050565b612c238161270e565b82525050565b5f602082019050612c3c5f830184612c1a565b92915050565b5f67ffffffffffffffff821115612c5c57612c5b6127f1565b5b612c6582612676565b9050602081019050919050565b5f612c84612c7f84612c42565b61284f565b905082815260208101848484011115612ca057612c9f612a6b565b5b612cab848285612a9f565b509392505050565b5f82601f830112612cc757612cc6612a67565b5b8135612cd7848260208601612c72565b91505092915050565b5f805f806101208587031215612cf957612cf86126e7565b5b5f85013567ffffffffffffffff811115612d1657612d156126eb565b5b612d2287828801612cb3565b945050602085013567ffffffffffffffff811115612d4357612d426126eb565b5b612d4f87828801612cb3565b9350506040612d6087828801612735565b9250506060612d7187828801612869565b91505092959194509250565b5f8060408385031215612d9357612d926126e7565b5b5f612da085828601612735565b9250506020612db185828601612735565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612dff57607f821691505b602082108103612e1257612e11612dbb565b5b50919050565b612e2181612749565b82525050565b60c082015f820151612e3b5f850182612e18565b506020820151612e4e6020850182612e18565b506040820151612e616040850182612e18565b506060820151612e746060850182612e18565b506080820151612e876080850182612e18565b5060a0820151612e9a60a0850182612e18565b50505050565b5f60c082019050612eb35f830184612e27565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612ef082612749565b9150612efb83612749565b9250828201905080821115612f1357612f12612eb9565b5b92915050565b5f81519050612f2781612752565b92915050565b5f60808284031215612f4257612f416127ed565b5b612f4c608061284f565b90505f612f5b84828501612f19565b5f830152506020612f6e84828501612f19565b6020830152506040612f8284828501612f19565b6040830152506060612f9684828501612f19565b60608301525092915050565b5f60808284031215612fb757612fb66126e7565b5b5f612fc484828501612f2d565b91505092915050565b5f612fd782612749565b9150612fe283612749565b9250828203905081811115612ffa57612ff9612eb9565b5b92915050565b61300981612b75565b8114613013575f80fd5b50565b5f8151905061302481613000565b92915050565b5f6020828403121561303f5761303e6126e7565b5b5f61304c84828501613016565b91505092915050565b5f8160011c9050919050565b5f808291508390505b60018511156130aa5780860481111561308657613085612eb9565b5b60018516156130955780820291505b80810290506130a385613055565b945061306a565b94509492505050565b5f826130c2576001905061317d565b816130cf575f905061317d565b81600181146130e557600281146130ef5761311e565b600191505061317d565b60ff84111561310157613100612eb9565b5b8360020a91508482111561311857613117612eb9565b5b5061317d565b5060208310610133831016604e8410600b84101617156131535782820a90508381111561314e5761314d612eb9565b5b61317d565b6131608484846001613061565b9250905081840481111561317757613176612eb9565b5b81810290505b9392505050565b5f61318e82612749565b9150613199836129d4565b92506131c67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846130b3565b905092915050565b5f6131d882612749565b91506131e383612749565b92508282026131f181612749565b9150828204841483151761320857613207612eb9565b5b5092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f61324561324061323b8461320f565b612ba6565b613218565b9050919050565b6132558161322b565b82525050565b5f60208201905061326e5f83018461324c565b92915050565b5f6060820190506132875f830186612c1a565b6132946020830185612931565b6132a16040830184612931565b949350505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6132dd601083612658565b91506132e8826132a9565b602082019050919050565b5f6020820190508181035f83015261330a816132d1565b9050919050565b5f6060820190506133245f830186612931565b6133316020830185612931565b61333e6040830184612931565b949350505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f61337a601483612658565b915061338582613346565b602082019050919050565b5f6020820190508181035f8301526133a78161336e565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261340a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826133cf565b61341486836133cf565b95508019841693508086168417925050509392505050565b5f61344661344161343c84612749565b612ba6565b612749565b9050919050565b5f819050919050565b61345f8361342c565b61347361346b8261344d565b8484546133db565b825550505050565b5f90565b61348761347b565b613492818484613456565b505050565b5b818110156134b5576134aa5f8261347f565b600181019050613498565b5050565b601f8211156134fa576134cb816133ae565b6134d4846133c0565b810160208510156134e3578190505b6134f76134ef856133c0565b830182613497565b50505b505050565b5f82821c905092915050565b5f61351a5f19846008026134ff565b1980831691505092915050565b5f613532838361350b565b9150826002028217905092915050565b61354b8261264e565b67ffffffffffffffff811115613564576135636127f1565b5b61356e8254612de8565b6135798282856134b9565b5f60209050601f8311600181146135aa575f8415613598578287015190505b6135a28582613527565b865550613609565b601f1984166135b8866133ae565b5f5b828110156135df578489015182556001820191506020850194506020810190506135ba565b868310156135fc57848901516135f8601f89168261350b565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61364882612749565b915061365383612749565b92508261366357613662613611565b5b828204905092915050565b5f81519050919050565b5f81905092915050565b5f61368c8261366e565b6136968185613678565b93506136a6818560208601612668565b80840191505092915050565b5f6136bd8284613682565b91508190509291505056fea26469706673582212203406afcfbef0cc43887d8e4bdcf1a33f1a2c81e6f089e3f0f05a18f9b7b0174b64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x51 PUSH2 0x56 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1B6 JUMP JUMPDEST PUSH0 PUSH2 0x65 PUSH2 0x154 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAF JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x151 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197 DUP2 PUSH2 0x17B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x36FE PUSH2 0x1DC PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1559 ADD MSTORE DUP2 DUP2 PUSH2 0x15AE ADD MSTORE PUSH2 0x1768 ADD MSTORE PUSH2 0x36FE PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xEB JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xB88A802F GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0xD8AD5231 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5DC JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0xAF9DCC2C EQ PUSH2 0x526 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x9E24F236 EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0xA7892C11 EQ PUSH2 0x4AA JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x78F3C4B6 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x416 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x158 JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x132 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x39A JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x38B42785 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x314 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xB594036 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x1CB44DFC EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x27F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B3 PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x26BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x27D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x2906 JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x746 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x2959 JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x2984 JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x27D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH2 0x87E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x29EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH2 0x886 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x8AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x2B1B JUMP JUMPDEST PUSH2 0x8C1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x384 PUSH2 0x911 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x27D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x2959 JUMP JUMPDEST PUSH2 0x925 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EA PUSH2 0x978 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x400 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x2C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0x9B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x440 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x461 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x46A PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x26BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x494 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BE PUSH2 0xA9B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x27D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x510 PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x26BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x2CE0 JUMP JUMPDEST PUSH2 0xD40 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x559 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x562 PUSH2 0xFEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x58A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x585 SWAP2 SWAP1 PUSH2 0x2959 JUMP JUMPDEST PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x2D7D JUMP JUMPDEST PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x602 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x2959 JUMP JUMPDEST PUSH2 0x122A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x60F PUSH2 0x12AE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x620 SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x64C SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x697 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x66E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x697 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x67A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6AC PUSH2 0x12D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x6B9 DUP2 DUP6 DUP6 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6CC PUSH2 0x12EE JUMP JUMPDEST DUP1 PUSH1 0x33 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE SWAP1 POP POP PUSH32 0x367B6B00685AE263E44E2231E399D2E112EAC1979516A9E0E1069D7CD4AC3A2D DUP2 PUSH1 0x40 MLOAD PUSH2 0x73B SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x750 PUSH2 0x12AE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x765 PUSH2 0x12EE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x5521068100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x32 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3DF77BEB5DB05FCDD70A30FC8ADF3F83F9501B68579455ADBD100B8180940394 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x85A PUSH2 0x12D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x867 DUP6 DUP3 DUP6 PUSH2 0x1375 JUMP JUMPDEST PUSH2 0x872 DUP6 DUP6 DUP6 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x33 DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0x8B7 PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x8BF PUSH2 0x14F7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8C9 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x8D2 DUP3 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x8DC DUP3 DUP3 PUSH2 0x1648 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8E9 PUSH2 0x1766 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x92F PUSH2 0x12AE JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x980 PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x989 PUSH0 PUSH2 0x17ED JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x9B8 PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x9C0 PUSH2 0x18BE JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9CC PUSH2 0x191F JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xA02 PUSH2 0x12AE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xA13 SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA3F SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA8A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA61 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA8A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA6D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x39 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAA3 PUSH2 0x1946 JUMP JUMPDEST PUSH1 0x33 PUSH1 0x5 ADD SLOAD PUSH1 0x39 SLOAD PUSH2 0xAB6 SWAP2 SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x4A448F3700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x395924DC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB5A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB7E SWAP2 SWAP1 PUSH2 0x2FA2 JUMP JUMPDEST SWAP1 POP PUSH2 0xE10 DUP2 PUSH1 0x60 ADD MLOAD TIMESTAMP PUSH2 0xB93 SWAP2 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST GT ISZERO PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x7428474C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x2 ADD SLOAD DUP2 PUSH0 ADD MLOAD LT ISZERO PUSH2 0xC0D JUMPI PUSH1 0x40 MLOAD PUSH32 0xDA2029D100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 PUSH0 ADD SLOAD DUP2 PUSH1 0x20 ADD MLOAD LT ISZERO DUP1 ISZERO PUSH2 0xC2E JUMPI POP PUSH1 0x33 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0x40 ADD MLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0xC41 JUMPI PUSH2 0xC3C DUP2 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0xC4B JUMP JUMPDEST PUSH2 0xC4A DUP2 PUSH2 0x1A07 JUMP JUMPDEST JUMPDEST TIMESTAMP PUSH1 0x39 DUP2 SWAP1 SSTORE POP PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9C22C5D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x302A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCEF PUSH2 0x12D5 JUMP JUMPDEST SWAP1 POP PUSH2 0xCFC DUP2 DUP6 DUP6 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xD49 PUSH2 0x1A7E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xD91 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xDC4 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xDD2 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xE09 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xE56 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xE60 DUP10 DUP10 PUSH2 0x1AA5 JUMP JUMPDEST PUSH2 0xE69 CALLER PUSH2 0x1ABB JUMP JUMPDEST PUSH2 0xE71 PUSH2 0x1ACF JUMP JUMPDEST PUSH2 0xE79 PUSH2 0x1AE1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x5521068100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x32 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x33 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE SWAP1 POP POP PUSH2 0xF89 CALLER PUSH2 0xF6A PUSH2 0x87E JUMP JUMPDEST PUSH1 0xA PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x3184 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0xF84 SWAP2 SWAP1 PUSH2 0x31CE JUMP JUMPDEST PUSH2 0x1AEB JUMP JUMPDEST DUP4 ISZERO PUSH2 0xFE3 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xFDA SWAP2 SWAP1 PUSH2 0x325B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFF6 PUSH2 0x1946 JUMP JUMPDEST PUSH1 0x33 PUSH1 0x5 ADD SLOAD PUSH1 0x3A PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1044 SWAP2 SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x107D JUMPI PUSH1 0x40 MLOAD PUSH32 0x2BC08A7300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x395924DC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x110C SWAP2 SWAP1 PUSH2 0x2FA2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x112A DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x1125 CALLER PUSH2 0x925 JUMP JUMPDEST PUSH2 0x1B6A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x1181 JUMPI PUSH2 0x113E CALLER DUP3 PUSH2 0x1AEB JUMP JUMPDEST TIMESTAMP PUSH1 0x3A PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3A PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x11A4 PUSH2 0x12AE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1232 PUSH2 0x12EE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1299 SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12AB DUP2 PUSH2 0x17ED JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12E9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1C0E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x12F6 PUSH2 0x12D5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1314 PUSH2 0x9C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1373 JUMPI PUSH2 0x1337 PUSH2 0x12D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136A SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1380 DUP5 DUP5 PUSH2 0x119A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1401 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x13F2 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1400 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1C0E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1477 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146E SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14E7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DE SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14F2 DUP4 DUP4 DUP4 PUSH2 0x1DEB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x14FF PUSH2 0x201A JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1540 PUSH2 0x12D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154D SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1604 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15EB PUSH2 0x2063 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x163B JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1645 PUSH2 0x12EE JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x16B0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16AD SWAP2 SWAP1 PUSH2 0x302A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x16F1 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E8 SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x1757 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x174E SWAP2 SWAP1 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1761 DUP4 DUP4 PUSH2 0x20B6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17EB JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x17F6 PUSH2 0x191F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x18C6 PUSH2 0x1946 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1908 PUSH2 0x12D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1915 SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x194E PUSH2 0x911 JUMP JUMPDEST ISZERO PUSH2 0x198E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1985 SWAP1 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x19AB DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x19A6 PUSH2 0x746 JUMP JUMPDEST PUSH2 0x1B6A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x1A03 JUMPI PUSH2 0x19BF ADDRESS DUP3 PUSH2 0x2128 JUMP JUMPDEST PUSH32 0xDA04004D58812F3E164F58E498158ACCA1B0054D975FCE0E3BAFDF56F2E254BA DUP2 DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x19FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3311 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A22 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x1A1D PUSH2 0x746 JUMP JUMPDEST PUSH2 0x21A7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x1A7A JUMPI PUSH2 0x1A36 ADDRESS DUP3 PUSH2 0x1AEB JUMP JUMPDEST PUSH32 0x958E73D0165CD8413C567DDCFECFBDFB06498A561DE5CD56849C2B463F66CDF DUP2 DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1A71 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3311 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1AAD PUSH2 0x2270 JUMP JUMPDEST PUSH2 0x1AB7 DUP3 DUP3 PUSH2 0x22B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1AC3 PUSH2 0x2270 JUMP JUMPDEST PUSH2 0x1ACC DUP2 PUSH2 0x22EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AD7 PUSH2 0x2270 JUMP JUMPDEST PUSH2 0x1ADF PUSH2 0x2370 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1AE9 PUSH2 0x2270 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B5B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B52 SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B66 PUSH0 DUP4 DUP4 PUSH2 0x1DEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1B83 PUSH1 0x33 PUSH0 ADD SLOAD DUP7 PUSH2 0x2392 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1B9E PUSH1 0x33 PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x2392 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1C03 PUSH1 0x64 PUSH2 0x1BF5 PUSH2 0x2710 PUSH2 0x1BE7 DUP9 PUSH2 0x1BD9 DUP8 PUSH2 0x1BCB DUP11 PUSH1 0x33 PUSH1 0x3 ADD SLOAD PUSH2 0x23A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23BC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23BC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C17 PUSH2 0x12AE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C89 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C80 SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CF9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF0 SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x1DE4 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1DDB SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DF4 PUSH2 0x12AE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E48 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E3C SWAP2 SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F1A JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1ED3 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ECA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F63 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1FAF JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x200C SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x2022 PUSH2 0x911 JUMP JUMPDEST PUSH2 0x2061 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2058 SWAP1 PUSH2 0x3390 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x208F PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x23D1 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20BF DUP3 PUSH2 0x23DA JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x211B JUMPI PUSH2 0x2115 DUP3 DUP3 PUSH2 0x24A3 JUMP JUMPDEST POP PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x2123 PUSH2 0x2523 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2198 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218F SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21A3 DUP3 PUSH0 DUP4 PUSH2 0x1DEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH1 0x33 PUSH0 ADD SLOAD GT PUSH2 0x21BA JUMPI PUSH0 PUSH2 0x21D2 JUMP JUMPDEST PUSH2 0x21D1 DUP6 PUSH1 0x33 PUSH0 ADD SLOAD PUSH2 0x2392 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH0 DUP5 PUSH1 0x33 PUSH1 0x1 ADD SLOAD GT PUSH2 0x21E7 JUMPI PUSH0 PUSH2 0x2200 JUMP JUMPDEST PUSH2 0x21FF DUP6 PUSH1 0x33 PUSH1 0x1 ADD SLOAD PUSH2 0x2392 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH2 0x2265 PUSH1 0x64 PUSH2 0x2257 PUSH2 0x2710 PUSH2 0x2249 DUP9 PUSH2 0x223B DUP8 PUSH2 0x222D DUP11 PUSH1 0x33 PUSH1 0x4 ADD SLOAD PUSH2 0x23A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23BC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23BC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2278 PUSH2 0x255F JUMP JUMPDEST PUSH2 0x22AE JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x22B8 PUSH2 0x2270 JUMP JUMPDEST PUSH0 PUSH2 0x22C1 PUSH2 0x12AE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x22D4 SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x22E6 SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x22F4 PUSH2 0x2270 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2364 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235B SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x236D DUP2 PUSH2 0x17ED JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2378 PUSH2 0x2270 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x239F SWAP2 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x23B4 SWAP2 SWAP1 PUSH2 0x31CE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x23C9 SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2435 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x242C SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2461 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x23D1 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x24CC SWAP2 SWAP1 PUSH2 0x36B2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2504 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2509 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2519 DUP6 DUP4 DUP4 PUSH2 0x257D JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x255D JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x2568 PUSH2 0x1A7E JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2592 JUMPI PUSH2 0x258D DUP3 PUSH2 0x260A JUMP JUMPDEST PUSH2 0x2602 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x25B8 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x25FA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F1 SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2603 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x261C JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2690 DUP3 PUSH2 0x264E JUMP JUMPDEST PUSH2 0x269A DUP2 DUP6 PUSH2 0x2658 JUMP JUMPDEST SWAP4 POP PUSH2 0x26AA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2668 JUMP JUMPDEST PUSH2 0x26B3 DUP2 PUSH2 0x2676 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26D6 DUP2 DUP5 PUSH2 0x2686 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2718 DUP3 PUSH2 0x26EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2728 DUP2 PUSH2 0x270E JUMP JUMPDEST DUP2 EQ PUSH2 0x2732 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2743 DUP2 PUSH2 0x271F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x275B DUP2 PUSH2 0x2749 JUMP JUMPDEST DUP2 EQ PUSH2 0x2765 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2776 DUP2 PUSH2 0x2752 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2792 JUMPI PUSH2 0x2791 PUSH2 0x26E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x279F DUP6 DUP3 DUP7 ADD PUSH2 0x2735 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27B0 DUP6 DUP3 DUP7 ADD PUSH2 0x2768 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27CE DUP2 PUSH2 0x27BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x27C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2827 DUP3 PUSH2 0x2676 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2846 JUMPI PUSH2 0x2845 PUSH2 0x27F1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2858 PUSH2 0x26DE JUMP JUMPDEST SWAP1 POP PUSH2 0x2864 DUP3 DUP3 PUSH2 0x281E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x287E JUMPI PUSH2 0x287D PUSH2 0x27ED JUMP JUMPDEST JUMPDEST PUSH2 0x2888 PUSH1 0xC0 PUSH2 0x284F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2897 DUP5 DUP3 DUP6 ADD PUSH2 0x2768 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x28AA DUP5 DUP3 DUP6 ADD PUSH2 0x2768 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x28BE DUP5 DUP3 DUP6 ADD PUSH2 0x2768 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x28D2 DUP5 DUP3 DUP6 ADD PUSH2 0x2768 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x28E6 DUP5 DUP3 DUP6 ADD PUSH2 0x2768 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x28FA DUP5 DUP3 DUP6 ADD PUSH2 0x2768 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x291B JUMPI PUSH2 0x291A PUSH2 0x26E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2928 DUP5 DUP3 DUP6 ADD PUSH2 0x2869 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x293A DUP2 PUSH2 0x2749 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2953 PUSH0 DUP4 ADD DUP5 PUSH2 0x2931 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x296E JUMPI PUSH2 0x296D PUSH2 0x26E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x297B DUP5 DUP3 DUP6 ADD PUSH2 0x2735 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x299B JUMPI PUSH2 0x299A PUSH2 0x26E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29A8 DUP7 DUP3 DUP8 ADD PUSH2 0x2735 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x29B9 DUP7 DUP3 DUP8 ADD PUSH2 0x2735 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x29CA DUP7 DUP3 DUP8 ADD PUSH2 0x2768 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29E9 DUP2 PUSH2 0x29D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A02 PUSH0 DUP4 ADD DUP5 PUSH2 0x29E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2A1B PUSH0 DUP4 ADD DUP10 PUSH2 0x2931 JUMP JUMPDEST PUSH2 0x2A28 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2931 JUMP JUMPDEST PUSH2 0x2A35 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2931 JUMP JUMPDEST PUSH2 0x2A42 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2931 JUMP JUMPDEST PUSH2 0x2A4F PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2931 JUMP JUMPDEST PUSH2 0x2A5C PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2931 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A89 JUMPI PUSH2 0x2A88 PUSH2 0x27F1 JUMP JUMPDEST JUMPDEST PUSH2 0x2A92 DUP3 PUSH2 0x2676 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2ABF PUSH2 0x2ABA DUP5 PUSH2 0x2A6F JUMP JUMPDEST PUSH2 0x284F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2ADB JUMPI PUSH2 0x2ADA PUSH2 0x2A6B JUMP JUMPDEST JUMPDEST PUSH2 0x2AE6 DUP5 DUP3 DUP6 PUSH2 0x2A9F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B02 JUMPI PUSH2 0x2B01 PUSH2 0x2A67 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2B12 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2AAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B31 JUMPI PUSH2 0x2B30 PUSH2 0x26E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B3E DUP6 DUP3 DUP7 ADD PUSH2 0x2735 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B5F JUMPI PUSH2 0x2B5E PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x2B6B DUP6 DUP3 DUP7 ADD PUSH2 0x2AEE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B87 DUP2 PUSH2 0x2B75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BA0 PUSH0 DUP4 ADD DUP5 PUSH2 0x2B7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2BC9 PUSH2 0x2BC4 PUSH2 0x2BBF DUP5 PUSH2 0x26EF JUMP JUMPDEST PUSH2 0x2BA6 JUMP JUMPDEST PUSH2 0x26EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2BDA DUP3 PUSH2 0x2BAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2BEB DUP3 PUSH2 0x2BD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BFB DUP2 PUSH2 0x2BE1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C14 PUSH0 DUP4 ADD DUP5 PUSH2 0x2BF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C23 DUP2 PUSH2 0x270E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C3C PUSH0 DUP4 ADD DUP5 PUSH2 0x2C1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C5C JUMPI PUSH2 0x2C5B PUSH2 0x27F1 JUMP JUMPDEST JUMPDEST PUSH2 0x2C65 DUP3 PUSH2 0x2676 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C84 PUSH2 0x2C7F DUP5 PUSH2 0x2C42 JUMP JUMPDEST PUSH2 0x284F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2CA0 JUMPI PUSH2 0x2C9F PUSH2 0x2A6B JUMP JUMPDEST JUMPDEST PUSH2 0x2CAB DUP5 DUP3 DUP6 PUSH2 0x2A9F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2CC7 JUMPI PUSH2 0x2CC6 PUSH2 0x2A67 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2CD7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2C72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x120 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2CF9 JUMPI PUSH2 0x2CF8 PUSH2 0x26E7 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D16 JUMPI PUSH2 0x2D15 PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x2D22 DUP8 DUP3 DUP9 ADD PUSH2 0x2CB3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D43 JUMPI PUSH2 0x2D42 PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x2D4F DUP8 DUP3 DUP9 ADD PUSH2 0x2CB3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2D60 DUP8 DUP3 DUP9 ADD PUSH2 0x2735 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2D71 DUP8 DUP3 DUP9 ADD PUSH2 0x2869 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D93 JUMPI PUSH2 0x2D92 PUSH2 0x26E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2DA0 DUP6 DUP3 DUP7 ADD PUSH2 0x2735 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DB1 DUP6 DUP3 DUP7 ADD PUSH2 0x2735 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2DFF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2E12 JUMPI PUSH2 0x2E11 PUSH2 0x2DBB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E21 DUP2 PUSH2 0x2749 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x2E3B PUSH0 DUP6 ADD DUP3 PUSH2 0x2E18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2E4E PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2E18 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2E61 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2E18 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2E74 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2E18 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2E87 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2E18 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2E9A PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2E18 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2EB3 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2EF0 DUP3 PUSH2 0x2749 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EFB DUP4 PUSH2 0x2749 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2F13 JUMPI PUSH2 0x2F12 PUSH2 0x2EB9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F27 DUP2 PUSH2 0x2752 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F42 JUMPI PUSH2 0x2F41 PUSH2 0x27ED JUMP JUMPDEST JUMPDEST PUSH2 0x2F4C PUSH1 0x80 PUSH2 0x284F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2F5B DUP5 DUP3 DUP6 ADD PUSH2 0x2F19 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x2F6E DUP5 DUP3 DUP6 ADD PUSH2 0x2F19 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x2F82 DUP5 DUP3 DUP6 ADD PUSH2 0x2F19 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x2F96 DUP5 DUP3 DUP6 ADD PUSH2 0x2F19 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FB7 JUMPI PUSH2 0x2FB6 PUSH2 0x26E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2FC4 DUP5 DUP3 DUP6 ADD PUSH2 0x2F2D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2FD7 DUP3 PUSH2 0x2749 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FE2 DUP4 PUSH2 0x2749 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2FFA JUMPI PUSH2 0x2FF9 PUSH2 0x2EB9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3009 DUP2 PUSH2 0x2B75 JUMP JUMPDEST DUP2 EQ PUSH2 0x3013 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3024 DUP2 PUSH2 0x3000 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x303F JUMPI PUSH2 0x303E PUSH2 0x26E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x304C DUP5 DUP3 DUP6 ADD PUSH2 0x3016 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x30AA JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x3086 JUMPI PUSH2 0x3085 PUSH2 0x2EB9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x3095 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x30A3 DUP6 PUSH2 0x3055 JUMP JUMPDEST SWAP5 POP PUSH2 0x306A JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x30C2 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x317D JUMP JUMPDEST DUP2 PUSH2 0x30CF JUMPI PUSH0 SWAP1 POP PUSH2 0x317D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x30E5 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x30EF JUMPI PUSH2 0x311E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x317D JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3101 JUMPI PUSH2 0x3100 PUSH2 0x2EB9 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x3118 JUMPI PUSH2 0x3117 PUSH2 0x2EB9 JUMP JUMPDEST JUMPDEST POP PUSH2 0x317D JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x3153 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x314E JUMPI PUSH2 0x314D PUSH2 0x2EB9 JUMP JUMPDEST JUMPDEST PUSH2 0x317D JUMP JUMPDEST PUSH2 0x3160 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x3061 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x3177 JUMPI PUSH2 0x3176 PUSH2 0x2EB9 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x318E DUP3 PUSH2 0x2749 JUMP JUMPDEST SWAP2 POP PUSH2 0x3199 DUP4 PUSH2 0x29D4 JUMP JUMPDEST SWAP3 POP PUSH2 0x31C6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x30B3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31D8 DUP3 PUSH2 0x2749 JUMP JUMPDEST SWAP2 POP PUSH2 0x31E3 DUP4 PUSH2 0x2749 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x31F1 DUP2 PUSH2 0x2749 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3208 JUMPI PUSH2 0x3207 PUSH2 0x2EB9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3245 PUSH2 0x3240 PUSH2 0x323B DUP5 PUSH2 0x320F JUMP JUMPDEST PUSH2 0x2BA6 JUMP JUMPDEST PUSH2 0x3218 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3255 DUP2 PUSH2 0x322B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x326E PUSH0 DUP4 ADD DUP5 PUSH2 0x324C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3287 PUSH0 DUP4 ADD DUP7 PUSH2 0x2C1A JUMP JUMPDEST PUSH2 0x3294 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2931 JUMP JUMPDEST PUSH2 0x32A1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2931 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32DD PUSH1 0x10 DUP4 PUSH2 0x2658 JUMP JUMPDEST SWAP2 POP PUSH2 0x32E8 DUP3 PUSH2 0x32A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x330A DUP2 PUSH2 0x32D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3324 PUSH0 DUP4 ADD DUP7 PUSH2 0x2931 JUMP JUMPDEST PUSH2 0x3331 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2931 JUMP JUMPDEST PUSH2 0x333E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2931 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x337A PUSH1 0x14 DUP4 PUSH2 0x2658 JUMP JUMPDEST SWAP2 POP PUSH2 0x3385 DUP3 PUSH2 0x3346 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x33A7 DUP2 PUSH2 0x336E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x340A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0x3414 DUP7 DUP4 PUSH2 0x33CF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3446 PUSH2 0x3441 PUSH2 0x343C DUP5 PUSH2 0x2749 JUMP JUMPDEST PUSH2 0x2BA6 JUMP JUMPDEST PUSH2 0x2749 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x345F DUP4 PUSH2 0x342C JUMP JUMPDEST PUSH2 0x3473 PUSH2 0x346B DUP3 PUSH2 0x344D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x33DB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3487 PUSH2 0x347B JUMP JUMPDEST PUSH2 0x3492 DUP2 DUP5 DUP5 PUSH2 0x3456 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x34B5 JUMPI PUSH2 0x34AA PUSH0 DUP3 PUSH2 0x347F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3498 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x34FA JUMPI PUSH2 0x34CB DUP2 PUSH2 0x33AE JUMP JUMPDEST PUSH2 0x34D4 DUP5 PUSH2 0x33C0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x34E3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x34F7 PUSH2 0x34EF DUP6 PUSH2 0x33C0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3497 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x351A PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x34FF JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3532 DUP4 DUP4 PUSH2 0x350B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x354B DUP3 PUSH2 0x264E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3564 JUMPI PUSH2 0x3563 PUSH2 0x27F1 JUMP JUMPDEST JUMPDEST PUSH2 0x356E DUP3 SLOAD PUSH2 0x2DE8 JUMP JUMPDEST PUSH2 0x3579 DUP3 DUP3 DUP6 PUSH2 0x34B9 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x35AA JUMPI PUSH0 DUP5 ISZERO PUSH2 0x3598 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x35A2 DUP6 DUP3 PUSH2 0x3527 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3609 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x35B8 DUP7 PUSH2 0x33AE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x35DF JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x35BA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x35FC JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x35F8 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x350B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3648 DUP3 PUSH2 0x2749 JUMP JUMPDEST SWAP2 POP PUSH2 0x3653 DUP4 PUSH2 0x2749 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3663 JUMPI PUSH2 0x3662 PUSH2 0x3611 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x368C DUP3 PUSH2 0x366E JUMP JUMPDEST PUSH2 0x3696 DUP2 DUP6 PUSH2 0x3678 JUMP JUMPDEST SWAP4 POP PUSH2 0x36A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2668 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x36BD DUP3 DUP5 PUSH2 0x3682 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE MOD 0xAF 0xCF 0xBE CREATE 0xCC NUMBER DUP9 PUSH30 0x8E4BDCF1A33F1A2C81E6F089E3F0F05A18F9B7B0174B64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "763:6655:17:-:0;;;1171:4:2;1128:48;;;;;;;;;2240:53:17;;;;;;;;;;2264:22;:20;;;:22;;:::i;:::-;763:6655;;7711:422:1;7826:30;7859:26;:24;;;:26;;:::i;:::-;7826:59;;7900:1;:15;;;;;;;;;;;;7896:76;;;7938:23;;;;;;;;;;;;;;7896:76;8003:16;7985:34;;:1;:14;;;;;;;;;;;;:34;;;7981:146;;8052:16;8035:1;:14;;;:33;;;;;;;;;;;;;;;;;;8087:29;8099:16;8087:29;;;;;;:::i;:::-;;;;;;;;7981:146;7760:373;7711:422::o;8737:170::-;8795:30;8870:21;8860:31;;8737:170;:::o;7:101:18:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;763:6655:17:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_472": {
									"entryPoint": 3335,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_826": {
									"entryPoint": 6821,
									"id": 826,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_854": {
									"entryPoint": 8880,
									"id": 854,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 6843,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 8940,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Pausable_init_662": {
									"entryPoint": 6863,
									"id": 662,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_672": {
									"entryPoint": 9072,
									"id": 672,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_502": {
									"entryPoint": 6881,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1258": {
									"entryPoint": 4828,
									"id": 1258,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1326": {
									"entryPoint": 7182,
									"id": 1326,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_3276": {
									"entryPoint": 5693,
									"id": 3276,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_burn_1240": {
									"entryPoint": 8488,
									"id": 1240,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_calculatePenalty_3204": {
									"entryPoint": 8615,
									"id": 3204,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_calculateReward_3146": {
									"entryPoint": 7018,
									"id": 3146,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_checkInitializing_370": {
									"entryPoint": 8816,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1882": {
									"entryPoint": 9507,
									"id": 1882,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_578": {
									"entryPoint": 5990,
									"id": 578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 4846,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_562": {
									"entryPoint": 5463,
									"id": 562,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getERC20Storage_810": {
									"entryPoint": 4782,
									"id": 810,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 6782,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 6431,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_handleNegativeMetrics_3100": {
									"entryPoint": 6663,
									"id": 3100,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_handlePositiveMetrics_3061": {
									"entryPoint": 6544,
									"id": 3061,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_isInitializing_438": {
									"entryPoint": 9567,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_1207": {
									"entryPoint": 6891,
									"id": 1207,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1403": {
									"entryPoint": 4821,
									"id": 1403,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_736": {
									"entryPoint": 6334,
									"id": 736,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_709": {
									"entryPoint": 6470,
									"id": 709,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_720": {
									"entryPoint": 8218,
									"id": 720,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_2255": {
									"entryPoint": 9738,
									"id": 2255,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_1662": {
									"entryPoint": 9178,
									"id": 1662,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_1374": {
									"entryPoint": 4981,
									"id": 1374,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 6125,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1082": {
									"entryPoint": 5127,
									"id": 1082,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_752": {
									"entryPoint": 5367,
									"id": 752,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1174": {
									"entryPoint": 7659,
									"id": 1174,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_629": {
									"entryPoint": 5704,
									"id": 629,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_979": {
									"entryPoint": 4506,
									"id": 979,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1003": {
									"entryPoint": 1698,
									"id": 1003,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_931": {
									"entryPoint": 2341,
									"id": 931,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimReward_3022": {
									"entryPoint": 4078,
									"id": 3022,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_895": {
									"entryPoint": 2174,
									"id": 895,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@div_2623": {
									"entryPoint": 9148,
									"id": 2623,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_2173": {
									"entryPoint": 9379,
									"id": 2173,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_2313": {
									"entryPoint": 9169,
									"id": 2313,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1635": {
									"entryPoint": 8291,
									"id": 1635,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_2883": {
									"entryPoint": 3392,
									"id": 2883,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@lastMechanicsUpdate_2774": {
									"entryPoint": 2709,
									"id": 2774,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastRewardClaim_2778": {
									"entryPoint": 4485,
									"id": 2778,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mechanics_2772": {
									"entryPoint": 2182,
									"id": 2772,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_2608": {
									"entryPoint": 9127,
									"id": 2608,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_870": {
									"entryPoint": 1540,
									"id": 870,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_105": {
									"entryPoint": 2498,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_3258": {
									"entryPoint": 2480,
									"id": 3258,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_697": {
									"entryPoint": 2321,
									"id": 697,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_520": {
									"entryPoint": 2272,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 2424,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@socialOracle_2756": {
									"entryPoint": 2443,
									"id": 2756,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_2593": {
									"entryPoint": 9106,
									"id": 2593,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_886": {
									"entryPoint": 2551,
									"id": 886,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_911": {
									"entryPoint": 1862,
									"id": 911,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1035": {
									"entryPoint": 2128,
									"id": 1035,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_164": {
									"entryPoint": 4650,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_955": {
									"entryPoint": 3301,
									"id": 955,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_3267": {
									"entryPoint": 2223,
									"id": 3267,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateBasedOnMetrics_2961": {
									"entryPoint": 2715,
									"id": 2961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateMechanics_3249": {
									"entryPoint": 1732,
									"id": 3249,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateOracle_3232": {
									"entryPoint": 1885,
									"id": 3232,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1698": {
									"entryPoint": 8374,
									"id": 1698,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_540": {
									"entryPoint": 2241,
									"id": 540,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2213": {
									"entryPoint": 9597,
									"id": 2213,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 10925,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 11378,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 10037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 12310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 10990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 11443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_SocialMetrics_$2730_memory_ptr_fromMemory": {
									"entryPoint": 12077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_TokenMechanics_$2769_memory_ptr": {
									"entryPoint": 10345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 12057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 11645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 10628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 11035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 10108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 12330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_struct$_TokenMechanics_$2769_memory_ptr": {
									"entryPoint": 11488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_struct$_SocialMetrics_$2730_memory_ptr_fromMemory": {
									"entryPoint": 12194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_TokenMechanics_$2769_memory_ptr": {
									"entryPoint": 10502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 11290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 10181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 11134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 13954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ISocialMetricsOracle_$2742_to_t_address_fromStack": {
									"entryPoint": 11250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 12876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_TokenMechanics_$2769_memory_ptr_to_t_struct$_TokenMechanics_$2769_memory_ptr_fromStack": {
									"entryPoint": 11815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 11800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 10720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 14002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 11305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 12916,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 10196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 11149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISocialMetricsOracle_$2742__to_t_address__fromStack_reversed": {
									"entryPoint": 11265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 12891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_TokenMechanics_$2769_memory_ptr__to_t_struct$_TokenMechanics_$2769_memory_ptr__fromStack_reversed": {
									"entryPoint": 11936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13073,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10760,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 10735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 10319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 9950,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 10863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 11330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 13230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 13934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 13944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 12006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 13886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 12385,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 12676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 12467,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 12750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 12237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 13497,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 9998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 11125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 12815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 12824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 10708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 13463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_ISocialMetricsOracle_$2742_to_t_address": {
									"entryPoint": 11233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 12843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 11216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 11183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 13356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 13634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 10911,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9832,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 13248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 11752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 13607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 10270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 11174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 13579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11961,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 13841,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 11707,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 10225,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 13389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 10855,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 10221,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 10859,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 9963,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9959,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 13263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 12373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 13567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 13439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 13126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 12969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 13275,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 13398,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 12288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 13435,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:32265:18",
										"nodeType": "YulBlock",
										"src": "0:32265:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:18",
													"nodeType": "YulBlock",
													"src": "66:40:18",
													"statements": [
														{
															"nativeSrc": "77:22:18",
															"nodeType": "YulAssignment",
															"src": "77:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:18"
																},
																"nativeSrc": "87:12:18",
																"nodeType": "YulFunctionCall",
																"src": "87:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:18",
														"nodeType": "YulTypedName",
														"src": "49:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:18",
														"nodeType": "YulTypedName",
														"src": "59:6:18",
														"type": ""
													}
												],
												"src": "7:99:18"
											},
											{
												"body": {
													"nativeSrc": "208:73:18",
													"nodeType": "YulBlock",
													"src": "208:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:18"
																},
																"nativeSrc": "218:19:18",
																"nodeType": "YulFunctionCall",
																"src": "218:19:18"
															},
															"nativeSrc": "218:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:18"
														},
														{
															"nativeSrc": "246:29:18",
															"nodeType": "YulAssignment",
															"src": "246:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:18",
																		"nodeType": "YulLiteral",
																		"src": "270:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:18"
																},
																"nativeSrc": "261:14:18",
																"nodeType": "YulFunctionCall",
																"src": "261:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:18",
														"nodeType": "YulTypedName",
														"src": "180:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:18",
														"nodeType": "YulTypedName",
														"src": "185:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:18",
														"nodeType": "YulTypedName",
														"src": "196:11:18",
														"type": ""
													}
												],
												"src": "112:169:18"
											},
											{
												"body": {
													"nativeSrc": "349:77:18",
													"nodeType": "YulBlock",
													"src": "349:77:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:18"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:18"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:18"
																},
																"nativeSrc": "360:23:18",
																"nodeType": "YulFunctionCall",
																"src": "360:23:18"
															},
															"nativeSrc": "360:23:18",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:18"
																		},
																		"nativeSrc": "399:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:18",
																		"nodeType": "YulLiteral",
																		"src": "417:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:18"
																},
																"nativeSrc": "392:27:18",
																"nodeType": "YulFunctionCall",
																"src": "392:27:18"
															},
															"nativeSrc": "392:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:18"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:18",
														"nodeType": "YulTypedName",
														"src": "331:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:18",
														"nodeType": "YulTypedName",
														"src": "336:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:18",
														"nodeType": "YulTypedName",
														"src": "341:6:18",
														"type": ""
													}
												],
												"src": "287:139:18"
											},
											{
												"body": {
													"nativeSrc": "480:54:18",
													"nodeType": "YulBlock",
													"src": "480:54:18",
													"statements": [
														{
															"nativeSrc": "490:38:18",
															"nodeType": "YulAssignment",
															"src": "490:38:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:18",
																				"nodeType": "YulLiteral",
																				"src": "515:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:18"
																		},
																		"nativeSrc": "504:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:18",
																				"nodeType": "YulLiteral",
																				"src": "524:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:18"
																		},
																		"nativeSrc": "520:7:18",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:18"
																},
																"nativeSrc": "500:28:18",
																"nodeType": "YulFunctionCall",
																"src": "500:28:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:18"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:18",
														"nodeType": "YulTypedName",
														"src": "463:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:18",
														"nodeType": "YulTypedName",
														"src": "473:6:18",
														"type": ""
													}
												],
												"src": "432:102:18"
											},
											{
												"body": {
													"nativeSrc": "632:285:18",
													"nodeType": "YulBlock",
													"src": "632:285:18",
													"statements": [
														{
															"nativeSrc": "642:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:18"
																},
																"nativeSrc": "656:39:18",
																"nodeType": "YulFunctionCall",
																"src": "656:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:18",
																	"nodeType": "YulTypedName",
																	"src": "646:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:18",
															"nodeType": "YulAssignment",
															"src": "704:78:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:18"
																},
																"nativeSrc": "711:71:18",
																"nodeType": "YulFunctionCall",
																"src": "711:71:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:18",
																				"nodeType": "YulLiteral",
																				"src": "837:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:18"
																		},
																		"nativeSrc": "826:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:18"
																},
																"nativeSrc": "791:65:18",
																"nodeType": "YulFunctionCall",
																"src": "791:65:18"
															},
															"nativeSrc": "791:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:18"
														},
														{
															"nativeSrc": "865:46:18",
															"nodeType": "YulAssignment",
															"src": "865:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:18"
																		},
																		"nativeSrc": "881:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:18"
																},
																"nativeSrc": "872:39:18",
																"nodeType": "YulFunctionCall",
																"src": "872:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:18",
														"nodeType": "YulTypedName",
														"src": "613:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:18",
														"nodeType": "YulTypedName",
														"src": "620:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:18",
														"nodeType": "YulTypedName",
														"src": "628:3:18",
														"type": ""
													}
												],
												"src": "540:377:18"
											},
											{
												"body": {
													"nativeSrc": "1041:195:18",
													"nodeType": "YulBlock",
													"src": "1041:195:18",
													"statements": [
														{
															"nativeSrc": "1051:26:18",
															"nodeType": "YulAssignment",
															"src": "1051:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:18"
																},
																"nativeSrc": "1059:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:18",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:18"
																		},
																		"nativeSrc": "1094:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:18"
																		},
																		"nativeSrc": "1113:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:18"
																},
																"nativeSrc": "1087:47:18",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:18"
															},
															"nativeSrc": "1087:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:18"
														},
														{
															"nativeSrc": "1143:86:18",
															"nodeType": "YulAssignment",
															"src": "1143:86:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:18",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:18"
																},
																"nativeSrc": "1151:78:18",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:18",
														"nodeType": "YulTypedName",
														"src": "1013:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:18",
														"nodeType": "YulTypedName",
														"src": "1025:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:18",
														"nodeType": "YulTypedName",
														"src": "1036:4:18",
														"type": ""
													}
												],
												"src": "923:313:18"
											},
											{
												"body": {
													"nativeSrc": "1282:35:18",
													"nodeType": "YulBlock",
													"src": "1282:35:18",
													"statements": [
														{
															"nativeSrc": "1292:19:18",
															"nodeType": "YulAssignment",
															"src": "1292:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:18"
																},
																"nativeSrc": "1302:9:18",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:18",
														"nodeType": "YulTypedName",
														"src": "1275:6:18",
														"type": ""
													}
												],
												"src": "1242:75:18"
											},
											{
												"body": {
													"nativeSrc": "1412:28:18",
													"nodeType": "YulBlock",
													"src": "1412:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:18"
																},
																"nativeSrc": "1422:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:18"
															},
															"nativeSrc": "1422:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:18"
											},
											{
												"body": {
													"nativeSrc": "1535:28:18",
													"nodeType": "YulBlock",
													"src": "1535:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:18"
																},
																"nativeSrc": "1545:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:18"
															},
															"nativeSrc": "1545:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:18"
											},
											{
												"body": {
													"nativeSrc": "1614:81:18",
													"nodeType": "YulBlock",
													"src": "1614:81:18",
													"statements": [
														{
															"nativeSrc": "1624:65:18",
															"nodeType": "YulAssignment",
															"src": "1624:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:18",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:18"
																},
																"nativeSrc": "1635:54:18",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:18",
														"nodeType": "YulTypedName",
														"src": "1596:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:18",
														"nodeType": "YulTypedName",
														"src": "1606:7:18",
														"type": ""
													}
												],
												"src": "1569:126:18"
											},
											{
												"body": {
													"nativeSrc": "1746:51:18",
													"nodeType": "YulBlock",
													"src": "1746:51:18",
													"statements": [
														{
															"nativeSrc": "1756:35:18",
															"nodeType": "YulAssignment",
															"src": "1756:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:18"
																},
																"nativeSrc": "1767:24:18",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:18",
														"nodeType": "YulTypedName",
														"src": "1728:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:18",
														"nodeType": "YulTypedName",
														"src": "1738:7:18",
														"type": ""
													}
												],
												"src": "1701:96:18"
											},
											{
												"body": {
													"nativeSrc": "1846:79:18",
													"nodeType": "YulBlock",
													"src": "1846:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:18",
																"nodeType": "YulBlock",
																"src": "1903:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:18"
																			},
																			"nativeSrc": "1905:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:18"
																		},
																		"nativeSrc": "1905:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:18"
																				},
																				"nativeSrc": "1876:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:18"
																		},
																		"nativeSrc": "1866:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:18"
																},
																"nativeSrc": "1859:43:18",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:18"
															},
															"nativeSrc": "1856:63:18",
															"nodeType": "YulIf",
															"src": "1856:63:18"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:18",
														"nodeType": "YulTypedName",
														"src": "1839:5:18",
														"type": ""
													}
												],
												"src": "1803:122:18"
											},
											{
												"body": {
													"nativeSrc": "1983:87:18",
													"nodeType": "YulBlock",
													"src": "1983:87:18",
													"statements": [
														{
															"nativeSrc": "1993:29:18",
															"nodeType": "YulAssignment",
															"src": "1993:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:18"
																},
																"nativeSrc": "2002:20:18",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:18"
																},
																"nativeSrc": "2031:33:18",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:18"
															},
															"nativeSrc": "2031:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:18"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:18",
														"nodeType": "YulTypedName",
														"src": "1961:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:18",
														"nodeType": "YulTypedName",
														"src": "1969:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:18",
														"nodeType": "YulTypedName",
														"src": "1977:5:18",
														"type": ""
													}
												],
												"src": "1931:139:18"
											},
											{
												"body": {
													"nativeSrc": "2121:32:18",
													"nodeType": "YulBlock",
													"src": "2121:32:18",
													"statements": [
														{
															"nativeSrc": "2131:16:18",
															"nodeType": "YulAssignment",
															"src": "2131:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:18",
																"nodeType": "YulIdentifier",
																"src": "2142:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:18",
														"nodeType": "YulTypedName",
														"src": "2103:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:18",
														"nodeType": "YulTypedName",
														"src": "2113:7:18",
														"type": ""
													}
												],
												"src": "2076:77:18"
											},
											{
												"body": {
													"nativeSrc": "2202:79:18",
													"nodeType": "YulBlock",
													"src": "2202:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:18",
																"nodeType": "YulBlock",
																"src": "2259:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:18"
																			},
																			"nativeSrc": "2261:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:18"
																		},
																		"nativeSrc": "2261:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:18"
																				},
																				"nativeSrc": "2232:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:18"
																		},
																		"nativeSrc": "2222:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:18"
																},
																"nativeSrc": "2215:43:18",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:18"
															},
															"nativeSrc": "2212:63:18",
															"nodeType": "YulIf",
															"src": "2212:63:18"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:18",
														"nodeType": "YulTypedName",
														"src": "2195:5:18",
														"type": ""
													}
												],
												"src": "2159:122:18"
											},
											{
												"body": {
													"nativeSrc": "2339:87:18",
													"nodeType": "YulBlock",
													"src": "2339:87:18",
													"statements": [
														{
															"nativeSrc": "2349:29:18",
															"nodeType": "YulAssignment",
															"src": "2349:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:18"
																},
																"nativeSrc": "2358:20:18",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:18"
																},
																"nativeSrc": "2387:33:18",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:18"
															},
															"nativeSrc": "2387:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:18"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:18",
														"nodeType": "YulTypedName",
														"src": "2317:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:18",
														"nodeType": "YulTypedName",
														"src": "2325:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:18",
														"nodeType": "YulTypedName",
														"src": "2333:5:18",
														"type": ""
													}
												],
												"src": "2287:139:18"
											},
											{
												"body": {
													"nativeSrc": "2515:391:18",
													"nodeType": "YulBlock",
													"src": "2515:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:18",
																"nodeType": "YulBlock",
																"src": "2561:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:18"
																			},
																			"nativeSrc": "2563:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:18"
																		},
																		"nativeSrc": "2563:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:18"
																		},
																		"nativeSrc": "2532:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:18"
																},
																"nativeSrc": "2528:32:18",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:18"
															},
															"nativeSrc": "2525:119:18",
															"nodeType": "YulIf",
															"src": "2525:119:18"
														},
														{
															"nativeSrc": "2654:117:18",
															"nodeType": "YulBlock",
															"src": "2654:117:18",
															"statements": [
																{
																	"nativeSrc": "2669:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:18",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:18",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:18"
																				},
																				"nativeSrc": "2729:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:18"
																		},
																		"nativeSrc": "2708:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:18",
															"nodeType": "YulBlock",
															"src": "2781:118:18",
															"statements": [
																{
																	"nativeSrc": "2796:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:18",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:18",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:18"
																				},
																				"nativeSrc": "2857:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:18"
																		},
																		"nativeSrc": "2836:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:18",
														"nodeType": "YulTypedName",
														"src": "2477:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:18",
														"nodeType": "YulTypedName",
														"src": "2488:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:18",
														"nodeType": "YulTypedName",
														"src": "2500:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:18",
														"nodeType": "YulTypedName",
														"src": "2508:6:18",
														"type": ""
													}
												],
												"src": "2432:474:18"
											},
											{
												"body": {
													"nativeSrc": "2954:48:18",
													"nodeType": "YulBlock",
													"src": "2954:48:18",
													"statements": [
														{
															"nativeSrc": "2964:32:18",
															"nodeType": "YulAssignment",
															"src": "2964:32:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:18"
																		},
																		"nativeSrc": "2982:13:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:18"
																},
																"nativeSrc": "2975:21:18",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:18",
														"nodeType": "YulTypedName",
														"src": "2936:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:18",
														"nodeType": "YulTypedName",
														"src": "2946:7:18",
														"type": ""
													}
												],
												"src": "2912:90:18"
											},
											{
												"body": {
													"nativeSrc": "3067:50:18",
													"nodeType": "YulBlock",
													"src": "3067:50:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:18",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:18"
																		},
																		"nativeSrc": "3089:21:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:18"
																},
																"nativeSrc": "3077:34:18",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:18"
															},
															"nativeSrc": "3077:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:18"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:18",
														"nodeType": "YulTypedName",
														"src": "3055:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:18",
														"nodeType": "YulTypedName",
														"src": "3062:3:18",
														"type": ""
													}
												],
												"src": "3008:109:18"
											},
											{
												"body": {
													"nativeSrc": "3215:118:18",
													"nodeType": "YulBlock",
													"src": "3215:118:18",
													"statements": [
														{
															"nativeSrc": "3225:26:18",
															"nodeType": "YulAssignment",
															"src": "3225:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:18"
																},
																"nativeSrc": "3233:18:18",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:18",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:18"
																		},
																		"nativeSrc": "3308:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:18",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:18"
																},
																"nativeSrc": "3261:65:18",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:18"
															},
															"nativeSrc": "3261:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:18",
														"nodeType": "YulTypedName",
														"src": "3187:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:18",
														"nodeType": "YulTypedName",
														"src": "3199:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:18",
														"nodeType": "YulTypedName",
														"src": "3210:4:18",
														"type": ""
													}
												],
												"src": "3123:210:18"
											},
											{
												"body": {
													"nativeSrc": "3428:28:18",
													"nodeType": "YulBlock",
													"src": "3428:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3445:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3445:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3448:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3448:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3438:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3438:6:18"
																},
																"nativeSrc": "3438:12:18",
																"nodeType": "YulFunctionCall",
																"src": "3438:12:18"
															},
															"nativeSrc": "3438:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "3438:12:18"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nativeSrc": "3339:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "3339:117:18"
											},
											{
												"body": {
													"nativeSrc": "3490:152:18",
													"nodeType": "YulBlock",
													"src": "3490:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3507:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3507:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3510:77:18",
																		"nodeType": "YulLiteral",
																		"src": "3510:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3500:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3500:6:18"
																},
																"nativeSrc": "3500:88:18",
																"nodeType": "YulFunctionCall",
																"src": "3500:88:18"
															},
															"nativeSrc": "3500:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "3500:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3604:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3604:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3607:4:18",
																		"nodeType": "YulLiteral",
																		"src": "3607:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3597:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3597:6:18"
																},
																"nativeSrc": "3597:15:18",
																"nodeType": "YulFunctionCall",
																"src": "3597:15:18"
															},
															"nativeSrc": "3597:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "3597:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3628:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3628:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3631:4:18",
																		"nodeType": "YulLiteral",
																		"src": "3631:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3621:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3621:6:18"
																},
																"nativeSrc": "3621:15:18",
																"nodeType": "YulFunctionCall",
																"src": "3621:15:18"
															},
															"nativeSrc": "3621:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "3621:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3462:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "3462:180:18"
											},
											{
												"body": {
													"nativeSrc": "3691:238:18",
													"nodeType": "YulBlock",
													"src": "3691:238:18",
													"statements": [
														{
															"nativeSrc": "3701:58:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3701:58:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3723:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3723:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "3753:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "3753:4:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3731:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "3731:21:18"
																		},
																		"nativeSrc": "3731:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3731:27:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3719:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3719:3:18"
																},
																"nativeSrc": "3719:40:18",
																"nodeType": "YulFunctionCall",
																"src": "3719:40:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3705:10:18",
																	"nodeType": "YulTypedName",
																	"src": "3705:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3870:22:18",
																"nodeType": "YulBlock",
																"src": "3870:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3872:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "3872:16:18"
																			},
																			"nativeSrc": "3872:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3872:18:18"
																		},
																		"nativeSrc": "3872:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3872:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3813:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "3813:10:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3825:18:18",
																				"nodeType": "YulLiteral",
																				"src": "3825:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3810:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "3810:2:18"
																		},
																		"nativeSrc": "3810:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:34:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3849:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "3849:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3861:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3861:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3846:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "3846:2:18"
																		},
																		"nativeSrc": "3846:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3846:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3807:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "3807:2:18"
																},
																"nativeSrc": "3807:62:18",
																"nodeType": "YulFunctionCall",
																"src": "3807:62:18"
															},
															"nativeSrc": "3804:88:18",
															"nodeType": "YulIf",
															"src": "3804:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3908:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3908:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3912:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "3912:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3901:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3901:6:18"
																},
																"nativeSrc": "3901:22:18",
																"nodeType": "YulFunctionCall",
																"src": "3901:22:18"
															},
															"nativeSrc": "3901:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "3901:22:18"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "3648:281:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3677:6:18",
														"nodeType": "YulTypedName",
														"src": "3677:6:18",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "3685:4:18",
														"nodeType": "YulTypedName",
														"src": "3685:4:18",
														"type": ""
													}
												],
												"src": "3648:281:18"
											},
											{
												"body": {
													"nativeSrc": "3976:88:18",
													"nodeType": "YulBlock",
													"src": "3976:88:18",
													"statements": [
														{
															"nativeSrc": "3986:30:18",
															"nodeType": "YulAssignment",
															"src": "3986:30:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "3996:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "3996:18:18"
																},
																"nativeSrc": "3996:20:18",
																"nodeType": "YulFunctionCall",
																"src": "3996:20:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3986:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3986:6:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4045:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4045:6:18"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "4053:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "4053:4:18"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "4025:19:18",
																	"nodeType": "YulIdentifier",
																	"src": "4025:19:18"
																},
																"nativeSrc": "4025:33:18",
																"nodeType": "YulFunctionCall",
																"src": "4025:33:18"
															},
															"nativeSrc": "4025:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "4025:33:18"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "3935:129:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "3960:4:18",
														"nodeType": "YulTypedName",
														"src": "3960:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "3969:6:18",
														"nodeType": "YulTypedName",
														"src": "3969:6:18",
														"type": ""
													}
												],
												"src": "3935:129:18"
											},
											{
												"body": {
													"nativeSrc": "4159:28:18",
													"nodeType": "YulBlock",
													"src": "4159:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4176:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4176:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4179:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4179:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4169:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4169:6:18"
																},
																"nativeSrc": "4169:12:18",
																"nodeType": "YulFunctionCall",
																"src": "4169:12:18"
															},
															"nativeSrc": "4169:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "4169:12:18"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nativeSrc": "4070:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "4070:117:18"
											},
											{
												"body": {
													"nativeSrc": "4321:1210:18",
													"nodeType": "YulBlock",
													"src": "4321:1210:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4365:83:18",
																"nodeType": "YulBlock",
																"src": "4365:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nativeSrc": "4367:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "4367:77:18"
																			},
																			"nativeSrc": "4367:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4367:79:18"
																		},
																		"nativeSrc": "4367:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4367:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nativeSrc": "4342:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "4342:3:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4347:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4347:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4338:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4338:3:18"
																		},
																		"nativeSrc": "4338:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4338:19:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4359:4:18",
																		"nodeType": "YulLiteral",
																		"src": "4359:4:18",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4334:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4334:3:18"
																},
																"nativeSrc": "4334:30:18",
																"nodeType": "YulFunctionCall",
																"src": "4334:30:18"
															},
															"nativeSrc": "4331:117:18",
															"nodeType": "YulIf",
															"src": "4331:117:18"
														},
														{
															"nativeSrc": "4457:30:18",
															"nodeType": "YulAssignment",
															"src": "4457:30:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4482:4:18",
																		"nodeType": "YulLiteral",
																		"src": "4482:4:18",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4466:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "4466:15:18"
																},
																"nativeSrc": "4466:21:18",
																"nodeType": "YulFunctionCall",
																"src": "4466:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4457:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "4457:5:18"
																}
															]
														},
														{
															"nativeSrc": "4497:163:18",
															"nodeType": "YulBlock",
															"src": "4497:163:18",
															"statements": [
																{
																	"nativeSrc": "4545:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4545:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4559:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4559:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4549:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4549:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4585:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "4585:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4592:4:18",
																						"nodeType": "YulLiteral",
																						"src": "4592:4:18",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4581:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4581:3:18"
																				},
																				"nativeSrc": "4581:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4581:16:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "4624:9:18",
																								"nodeType": "YulIdentifier",
																								"src": "4624:9:18"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "4635:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "4635:6:18"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4620:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "4620:3:18"
																						},
																						"nativeSrc": "4620:22:18",
																						"nodeType": "YulFunctionCall",
																						"src": "4620:22:18"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "4644:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "4644:3:18"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nativeSrc": "4599:20:18",
																					"nodeType": "YulIdentifier",
																					"src": "4599:20:18"
																				},
																				"nativeSrc": "4599:49:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4599:49:18"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "4574:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4574:6:18"
																		},
																		"nativeSrc": "4574:75:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4574:75:18"
																	},
																	"nativeSrc": "4574:75:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "4574:75:18"
																}
															]
														},
														{
															"nativeSrc": "4670:164:18",
															"nodeType": "YulBlock",
															"src": "4670:164:18",
															"statements": [
																{
																	"nativeSrc": "4718:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4718:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4732:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4732:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4722:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4722:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4759:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "4759:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4766:4:18",
																						"nodeType": "YulLiteral",
																						"src": "4766:4:18",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4755:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4755:3:18"
																				},
																				"nativeSrc": "4755:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4755:16:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "4798:9:18",
																								"nodeType": "YulIdentifier",
																								"src": "4798:9:18"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "4809:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "4809:6:18"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4794:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "4794:3:18"
																						},
																						"nativeSrc": "4794:22:18",
																						"nodeType": "YulFunctionCall",
																						"src": "4794:22:18"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "4818:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "4818:3:18"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nativeSrc": "4773:20:18",
																					"nodeType": "YulIdentifier",
																					"src": "4773:20:18"
																				},
																				"nativeSrc": "4773:49:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4773:49:18"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "4748:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4748:6:18"
																		},
																		"nativeSrc": "4748:75:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4748:75:18"
																	},
																	"nativeSrc": "4748:75:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "4748:75:18"
																}
															]
														},
														{
															"nativeSrc": "4844:160:18",
															"nodeType": "YulBlock",
															"src": "4844:160:18",
															"statements": [
																{
																	"nativeSrc": "4888:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4888:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4902:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4902:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4892:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4892:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4929:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "4929:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4936:4:18",
																						"nodeType": "YulLiteral",
																						"src": "4936:4:18",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4925:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4925:3:18"
																				},
																				"nativeSrc": "4925:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4925:16:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "4968:9:18",
																								"nodeType": "YulIdentifier",
																								"src": "4968:9:18"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "4979:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "4979:6:18"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4964:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "4964:3:18"
																						},
																						"nativeSrc": "4964:22:18",
																						"nodeType": "YulFunctionCall",
																						"src": "4964:22:18"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "4988:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "4988:3:18"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nativeSrc": "4943:20:18",
																					"nodeType": "YulIdentifier",
																					"src": "4943:20:18"
																				},
																				"nativeSrc": "4943:49:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4943:49:18"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "4918:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4918:6:18"
																		},
																		"nativeSrc": "4918:75:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4918:75:18"
																	},
																	"nativeSrc": "4918:75:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "4918:75:18"
																}
															]
														},
														{
															"nativeSrc": "5014:163:18",
															"nodeType": "YulBlock",
															"src": "5014:163:18",
															"statements": [
																{
																	"nativeSrc": "5061:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5061:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5075:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5075:2:18",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5065:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5065:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5102:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "5102:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5109:4:18",
																						"nodeType": "YulLiteral",
																						"src": "5109:4:18",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5098:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5098:3:18"
																				},
																				"nativeSrc": "5098:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5098:16:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "5141:9:18",
																								"nodeType": "YulIdentifier",
																								"src": "5141:9:18"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "5152:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "5152:6:18"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5137:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "5137:3:18"
																						},
																						"nativeSrc": "5137:22:18",
																						"nodeType": "YulFunctionCall",
																						"src": "5137:22:18"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "5161:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "5161:3:18"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nativeSrc": "5116:20:18",
																					"nodeType": "YulIdentifier",
																					"src": "5116:20:18"
																				},
																				"nativeSrc": "5116:49:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5116:49:18"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "5091:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5091:6:18"
																		},
																		"nativeSrc": "5091:75:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5091:75:18"
																	},
																	"nativeSrc": "5091:75:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "5091:75:18"
																}
															]
														},
														{
															"nativeSrc": "5187:165:18",
															"nodeType": "YulBlock",
															"src": "5187:165:18",
															"statements": [
																{
																	"nativeSrc": "5235:17:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5235:17:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5249:3:18",
																		"nodeType": "YulLiteral",
																		"src": "5249:3:18",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5239:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5239:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5277:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "5277:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5284:4:18",
																						"nodeType": "YulLiteral",
																						"src": "5284:4:18",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5273:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5273:3:18"
																				},
																				"nativeSrc": "5273:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5273:16:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "5316:9:18",
																								"nodeType": "YulIdentifier",
																								"src": "5316:9:18"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "5327:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "5327:6:18"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5312:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "5312:3:18"
																						},
																						"nativeSrc": "5312:22:18",
																						"nodeType": "YulFunctionCall",
																						"src": "5312:22:18"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "5336:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "5336:3:18"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nativeSrc": "5291:20:18",
																					"nodeType": "YulIdentifier",
																					"src": "5291:20:18"
																				},
																				"nativeSrc": "5291:49:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5291:49:18"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "5266:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5266:6:18"
																		},
																		"nativeSrc": "5266:75:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5266:75:18"
																	},
																	"nativeSrc": "5266:75:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "5266:75:18"
																}
															]
														},
														{
															"nativeSrc": "5362:162:18",
															"nodeType": "YulBlock",
															"src": "5362:162:18",
															"statements": [
																{
																	"nativeSrc": "5407:17:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5407:17:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5421:3:18",
																		"nodeType": "YulLiteral",
																		"src": "5421:3:18",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5411:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5411:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5449:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "5449:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5456:4:18",
																						"nodeType": "YulLiteral",
																						"src": "5456:4:18",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5445:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5445:3:18"
																				},
																				"nativeSrc": "5445:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5445:16:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "5488:9:18",
																								"nodeType": "YulIdentifier",
																								"src": "5488:9:18"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "5499:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "5499:6:18"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5484:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "5484:3:18"
																						},
																						"nativeSrc": "5484:22:18",
																						"nodeType": "YulFunctionCall",
																						"src": "5484:22:18"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "5508:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "5508:3:18"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nativeSrc": "5463:20:18",
																					"nodeType": "YulIdentifier",
																					"src": "5463:20:18"
																				},
																				"nativeSrc": "5463:49:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5463:49:18"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "5438:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5438:6:18"
																		},
																		"nativeSrc": "5438:75:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5438:75:18"
																	},
																	"nativeSrc": "5438:75:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "5438:75:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_TokenMechanics_$2769_memory_ptr",
												"nativeSrc": "4234:1297:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4296:9:18",
														"nodeType": "YulTypedName",
														"src": "4296:9:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4307:3:18",
														"nodeType": "YulTypedName",
														"src": "4307:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4315:5:18",
														"nodeType": "YulTypedName",
														"src": "4315:5:18",
														"type": ""
													}
												],
												"src": "4234:1297:18"
											},
											{
												"body": {
													"nativeSrc": "5635:296:18",
													"nodeType": "YulBlock",
													"src": "5635:296:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5682:83:18",
																"nodeType": "YulBlock",
																"src": "5682:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5684:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "5684:77:18"
																			},
																			"nativeSrc": "5684:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5684:79:18"
																		},
																		"nativeSrc": "5684:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5684:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5656:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5656:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5665:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5665:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5652:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5652:3:18"
																		},
																		"nativeSrc": "5652:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5652:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5677:3:18",
																		"nodeType": "YulLiteral",
																		"src": "5677:3:18",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5648:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5648:3:18"
																},
																"nativeSrc": "5648:33:18",
																"nodeType": "YulFunctionCall",
																"src": "5648:33:18"
															},
															"nativeSrc": "5645:120:18",
															"nodeType": "YulIf",
															"src": "5645:120:18"
														},
														{
															"nativeSrc": "5775:149:18",
															"nodeType": "YulBlock",
															"src": "5775:149:18",
															"statements": [
																{
																	"nativeSrc": "5790:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5790:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5804:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5804:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5794:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5794:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5819:95:18",
																	"nodeType": "YulAssignment",
																	"src": "5819:95:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5886:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5886:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5897:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5897:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5882:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5882:3:18"
																				},
																				"nativeSrc": "5882:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5882:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5906:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5906:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_TokenMechanics_$2769_memory_ptr",
																			"nativeSrc": "5829:52:18",
																			"nodeType": "YulIdentifier",
																			"src": "5829:52:18"
																		},
																		"nativeSrc": "5829:85:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5829:85:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5819:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5819:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_TokenMechanics_$2769_memory_ptr",
												"nativeSrc": "5537:394:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5605:9:18",
														"nodeType": "YulTypedName",
														"src": "5605:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5616:7:18",
														"nodeType": "YulTypedName",
														"src": "5616:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5628:6:18",
														"nodeType": "YulTypedName",
														"src": "5628:6:18",
														"type": ""
													}
												],
												"src": "5537:394:18"
											},
											{
												"body": {
													"nativeSrc": "6002:53:18",
													"nodeType": "YulBlock",
													"src": "6002:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6019:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6019:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6042:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "6042:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6024:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "6024:17:18"
																		},
																		"nativeSrc": "6024:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6024:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6012:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6012:6:18"
																},
																"nativeSrc": "6012:37:18",
																"nodeType": "YulFunctionCall",
																"src": "6012:37:18"
															},
															"nativeSrc": "6012:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "6012:37:18"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5937:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5990:5:18",
														"nodeType": "YulTypedName",
														"src": "5990:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5997:3:18",
														"nodeType": "YulTypedName",
														"src": "5997:3:18",
														"type": ""
													}
												],
												"src": "5937:118:18"
											},
											{
												"body": {
													"nativeSrc": "6159:124:18",
													"nodeType": "YulBlock",
													"src": "6159:124:18",
													"statements": [
														{
															"nativeSrc": "6169:26:18",
															"nodeType": "YulAssignment",
															"src": "6169:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6181:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6181:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6192:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6192:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6177:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6177:3:18"
																},
																"nativeSrc": "6177:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6177:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6169:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6169:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6249:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6249:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6262:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6262:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6273:1:18",
																				"nodeType": "YulLiteral",
																				"src": "6273:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6258:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6258:3:18"
																		},
																		"nativeSrc": "6258:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6258:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6205:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "6205:43:18"
																},
																"nativeSrc": "6205:71:18",
																"nodeType": "YulFunctionCall",
																"src": "6205:71:18"
															},
															"nativeSrc": "6205:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "6205:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6061:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6131:9:18",
														"nodeType": "YulTypedName",
														"src": "6131:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6143:6:18",
														"nodeType": "YulTypedName",
														"src": "6143:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6154:4:18",
														"nodeType": "YulTypedName",
														"src": "6154:4:18",
														"type": ""
													}
												],
												"src": "6061:222:18"
											},
											{
												"body": {
													"nativeSrc": "6355:263:18",
													"nodeType": "YulBlock",
													"src": "6355:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "6401:83:18",
																"nodeType": "YulBlock",
																"src": "6401:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6403:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "6403:77:18"
																			},
																			"nativeSrc": "6403:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6403:79:18"
																		},
																		"nativeSrc": "6403:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6403:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6376:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6376:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6385:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6385:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6372:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6372:3:18"
																		},
																		"nativeSrc": "6372:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6372:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6397:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6397:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6368:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6368:3:18"
																},
																"nativeSrc": "6368:32:18",
																"nodeType": "YulFunctionCall",
																"src": "6368:32:18"
															},
															"nativeSrc": "6365:119:18",
															"nodeType": "YulIf",
															"src": "6365:119:18"
														},
														{
															"nativeSrc": "6494:117:18",
															"nodeType": "YulBlock",
															"src": "6494:117:18",
															"statements": [
																{
																	"nativeSrc": "6509:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6509:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6523:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6523:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6513:6:18",
																			"nodeType": "YulTypedName",
																			"src": "6513:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6538:63:18",
																	"nodeType": "YulAssignment",
																	"src": "6538:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6573:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "6573:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6584:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "6584:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6569:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6569:3:18"
																				},
																				"nativeSrc": "6569:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6569:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6593:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6593:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6548:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "6548:20:18"
																		},
																		"nativeSrc": "6548:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6548:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6538:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "6538:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6289:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6325:9:18",
														"nodeType": "YulTypedName",
														"src": "6325:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6336:7:18",
														"nodeType": "YulTypedName",
														"src": "6336:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6348:6:18",
														"nodeType": "YulTypedName",
														"src": "6348:6:18",
														"type": ""
													}
												],
												"src": "6289:329:18"
											},
											{
												"body": {
													"nativeSrc": "6724:519:18",
													"nodeType": "YulBlock",
													"src": "6724:519:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "6770:83:18",
																"nodeType": "YulBlock",
																"src": "6770:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6772:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "6772:77:18"
																			},
																			"nativeSrc": "6772:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6772:79:18"
																		},
																		"nativeSrc": "6772:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6772:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6745:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6745:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6741:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6741:3:18"
																		},
																		"nativeSrc": "6741:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6741:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6766:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6766:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6737:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6737:3:18"
																},
																"nativeSrc": "6737:32:18",
																"nodeType": "YulFunctionCall",
																"src": "6737:32:18"
															},
															"nativeSrc": "6734:119:18",
															"nodeType": "YulIf",
															"src": "6734:119:18"
														},
														{
															"nativeSrc": "6863:117:18",
															"nodeType": "YulBlock",
															"src": "6863:117:18",
															"statements": [
																{
																	"nativeSrc": "6878:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6878:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6892:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6892:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6882:6:18",
																			"nodeType": "YulTypedName",
																			"src": "6882:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6907:63:18",
																	"nodeType": "YulAssignment",
																	"src": "6907:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6942:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "6942:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6953:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "6953:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6938:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6938:3:18"
																				},
																				"nativeSrc": "6938:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6938:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6962:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6962:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6917:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "6917:20:18"
																		},
																		"nativeSrc": "6917:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6917:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6907:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "6907:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6990:118:18",
															"nodeType": "YulBlock",
															"src": "6990:118:18",
															"statements": [
																{
																	"nativeSrc": "7005:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7005:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7019:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7019:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7009:6:18",
																			"nodeType": "YulTypedName",
																			"src": "7009:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7035:63:18",
																	"nodeType": "YulAssignment",
																	"src": "7035:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7070:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "7070:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7081:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "7081:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7066:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "7066:3:18"
																				},
																				"nativeSrc": "7066:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "7066:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7090:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "7090:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7045:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "7045:20:18"
																		},
																		"nativeSrc": "7045:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7045:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7035:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "7035:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7118:118:18",
															"nodeType": "YulBlock",
															"src": "7118:118:18",
															"statements": [
																{
																	"nativeSrc": "7133:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7133:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7147:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7147:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7137:6:18",
																			"nodeType": "YulTypedName",
																			"src": "7137:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7163:63:18",
																	"nodeType": "YulAssignment",
																	"src": "7163:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7198:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "7198:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7209:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "7209:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7194:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "7194:3:18"
																				},
																				"nativeSrc": "7194:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "7194:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7218:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "7218:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7173:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "7173:20:18"
																		},
																		"nativeSrc": "7173:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7173:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7163:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "7163:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "6624:619:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6678:9:18",
														"nodeType": "YulTypedName",
														"src": "6678:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6689:7:18",
														"nodeType": "YulTypedName",
														"src": "6689:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6701:6:18",
														"nodeType": "YulTypedName",
														"src": "6701:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6709:6:18",
														"nodeType": "YulTypedName",
														"src": "6709:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6717:6:18",
														"nodeType": "YulTypedName",
														"src": "6717:6:18",
														"type": ""
													}
												],
												"src": "6624:619:18"
											},
											{
												"body": {
													"nativeSrc": "7292:43:18",
													"nodeType": "YulBlock",
													"src": "7292:43:18",
													"statements": [
														{
															"nativeSrc": "7302:27:18",
															"nodeType": "YulAssignment",
															"src": "7302:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7317:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7317:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7324:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7324:4:18",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7313:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7313:3:18"
																},
																"nativeSrc": "7313:16:18",
																"nodeType": "YulFunctionCall",
																"src": "7313:16:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7302:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "7302:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7249:86:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7274:5:18",
														"nodeType": "YulTypedName",
														"src": "7274:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7284:7:18",
														"nodeType": "YulTypedName",
														"src": "7284:7:18",
														"type": ""
													}
												],
												"src": "7249:86:18"
											},
											{
												"body": {
													"nativeSrc": "7402:51:18",
													"nodeType": "YulBlock",
													"src": "7402:51:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7419:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7419:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7440:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "7440:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7424:15:18",
																			"nodeType": "YulIdentifier",
																			"src": "7424:15:18"
																		},
																		"nativeSrc": "7424:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7424:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7412:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7412:6:18"
																},
																"nativeSrc": "7412:35:18",
																"nodeType": "YulFunctionCall",
																"src": "7412:35:18"
															},
															"nativeSrc": "7412:35:18",
															"nodeType": "YulExpressionStatement",
															"src": "7412:35:18"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7341:112:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7390:5:18",
														"nodeType": "YulTypedName",
														"src": "7390:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7397:3:18",
														"nodeType": "YulTypedName",
														"src": "7397:3:18",
														"type": ""
													}
												],
												"src": "7341:112:18"
											},
											{
												"body": {
													"nativeSrc": "7553:120:18",
													"nodeType": "YulBlock",
													"src": "7553:120:18",
													"statements": [
														{
															"nativeSrc": "7563:26:18",
															"nodeType": "YulAssignment",
															"src": "7563:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7575:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7575:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7586:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7586:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7571:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7571:3:18"
																},
																"nativeSrc": "7571:18:18",
																"nodeType": "YulFunctionCall",
																"src": "7571:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7563:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7563:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7639:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7639:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7652:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7652:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7663:1:18",
																				"nodeType": "YulLiteral",
																				"src": "7663:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7648:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7648:3:18"
																		},
																		"nativeSrc": "7648:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7648:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7599:39:18",
																	"nodeType": "YulIdentifier",
																	"src": "7599:39:18"
																},
																"nativeSrc": "7599:67:18",
																"nodeType": "YulFunctionCall",
																"src": "7599:67:18"
															},
															"nativeSrc": "7599:67:18",
															"nodeType": "YulExpressionStatement",
															"src": "7599:67:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7459:214:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7525:9:18",
														"nodeType": "YulTypedName",
														"src": "7525:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7537:6:18",
														"nodeType": "YulTypedName",
														"src": "7537:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7548:4:18",
														"nodeType": "YulTypedName",
														"src": "7548:4:18",
														"type": ""
													}
												],
												"src": "7459:214:18"
											},
											{
												"body": {
													"nativeSrc": "7917:537:18",
													"nodeType": "YulBlock",
													"src": "7917:537:18",
													"statements": [
														{
															"nativeSrc": "7927:27:18",
															"nodeType": "YulAssignment",
															"src": "7927:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7939:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7939:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7950:3:18",
																		"nodeType": "YulLiteral",
																		"src": "7950:3:18",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7935:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7935:3:18"
																},
																"nativeSrc": "7935:19:18",
																"nodeType": "YulFunctionCall",
																"src": "7935:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7927:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7927:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8008:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8008:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8021:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8021:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8032:1:18",
																				"nodeType": "YulLiteral",
																				"src": "8032:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8017:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8017:3:18"
																		},
																		"nativeSrc": "8017:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8017:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7964:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "7964:43:18"
																},
																"nativeSrc": "7964:71:18",
																"nodeType": "YulFunctionCall",
																"src": "7964:71:18"
															},
															"nativeSrc": "7964:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "7964:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8089:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8089:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8102:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8102:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8113:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8113:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8098:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8098:3:18"
																		},
																		"nativeSrc": "8098:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8098:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8045:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "8045:43:18"
																},
																"nativeSrc": "8045:72:18",
																"nodeType": "YulFunctionCall",
																"src": "8045:72:18"
															},
															"nativeSrc": "8045:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "8045:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8171:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8171:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8184:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8184:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8195:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8195:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8180:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8180:3:18"
																		},
																		"nativeSrc": "8180:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8180:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8127:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "8127:43:18"
																},
																"nativeSrc": "8127:72:18",
																"nodeType": "YulFunctionCall",
																"src": "8127:72:18"
															},
															"nativeSrc": "8127:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "8127:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8253:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8253:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8266:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8266:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8277:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8277:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8262:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8262:3:18"
																		},
																		"nativeSrc": "8262:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8262:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8209:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "8209:43:18"
																},
																"nativeSrc": "8209:72:18",
																"nodeType": "YulFunctionCall",
																"src": "8209:72:18"
															},
															"nativeSrc": "8209:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "8209:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "8335:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8335:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8348:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8348:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8359:3:18",
																				"nodeType": "YulLiteral",
																				"src": "8359:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8344:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8344:3:18"
																		},
																		"nativeSrc": "8344:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8344:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8291:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "8291:43:18"
																},
																"nativeSrc": "8291:73:18",
																"nodeType": "YulFunctionCall",
																"src": "8291:73:18"
															},
															"nativeSrc": "8291:73:18",
															"nodeType": "YulExpressionStatement",
															"src": "8291:73:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "8418:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8418:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8431:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8431:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8442:3:18",
																				"nodeType": "YulLiteral",
																				"src": "8442:3:18",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8427:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8427:3:18"
																		},
																		"nativeSrc": "8427:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8427:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8374:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "8374:43:18"
																},
																"nativeSrc": "8374:73:18",
																"nodeType": "YulFunctionCall",
																"src": "8374:73:18"
															},
															"nativeSrc": "8374:73:18",
															"nodeType": "YulExpressionStatement",
															"src": "8374:73:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7679:775:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7849:9:18",
														"nodeType": "YulTypedName",
														"src": "7849:9:18",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7861:6:18",
														"nodeType": "YulTypedName",
														"src": "7861:6:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7869:6:18",
														"nodeType": "YulTypedName",
														"src": "7869:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7877:6:18",
														"nodeType": "YulTypedName",
														"src": "7877:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7885:6:18",
														"nodeType": "YulTypedName",
														"src": "7885:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7893:6:18",
														"nodeType": "YulTypedName",
														"src": "7893:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7901:6:18",
														"nodeType": "YulTypedName",
														"src": "7901:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7912:4:18",
														"nodeType": "YulTypedName",
														"src": "7912:4:18",
														"type": ""
													}
												],
												"src": "7679:775:18"
											},
											{
												"body": {
													"nativeSrc": "8549:28:18",
													"nodeType": "YulBlock",
													"src": "8549:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8566:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8566:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8569:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8569:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8559:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8559:6:18"
																},
																"nativeSrc": "8559:12:18",
																"nodeType": "YulFunctionCall",
																"src": "8559:12:18"
															},
															"nativeSrc": "8559:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "8559:12:18"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "8460:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "8460:117:18"
											},
											{
												"body": {
													"nativeSrc": "8672:28:18",
													"nodeType": "YulBlock",
													"src": "8672:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8689:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8689:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8692:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8692:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8682:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8682:6:18"
																},
																"nativeSrc": "8682:12:18",
																"nodeType": "YulFunctionCall",
																"src": "8682:12:18"
															},
															"nativeSrc": "8682:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "8682:12:18"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "8583:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "8583:117:18"
											},
											{
												"body": {
													"nativeSrc": "8772:241:18",
													"nodeType": "YulBlock",
													"src": "8772:241:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8877:22:18",
																"nodeType": "YulBlock",
																"src": "8877:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8879:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "8879:16:18"
																			},
																			"nativeSrc": "8879:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8879:18:18"
																		},
																		"nativeSrc": "8879:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8879:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8849:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8849:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8857:18:18",
																		"nodeType": "YulLiteral",
																		"src": "8857:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8846:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "8846:2:18"
																},
																"nativeSrc": "8846:30:18",
																"nodeType": "YulFunctionCall",
																"src": "8846:30:18"
															},
															"nativeSrc": "8843:56:18",
															"nodeType": "YulIf",
															"src": "8843:56:18"
														},
														{
															"nativeSrc": "8909:37:18",
															"nodeType": "YulAssignment",
															"src": "8909:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8939:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8939:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8917:21:18",
																	"nodeType": "YulIdentifier",
																	"src": "8917:21:18"
																},
																"nativeSrc": "8917:29:18",
																"nodeType": "YulFunctionCall",
																"src": "8917:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8909:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8909:4:18"
																}
															]
														},
														{
															"nativeSrc": "8983:23:18",
															"nodeType": "YulAssignment",
															"src": "8983:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8995:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "8995:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9001:4:18",
																		"nodeType": "YulLiteral",
																		"src": "9001:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8991:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8991:3:18"
																},
																"nativeSrc": "8991:15:18",
																"nodeType": "YulFunctionCall",
																"src": "8991:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8983:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8983:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "8706:307:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8756:6:18",
														"nodeType": "YulTypedName",
														"src": "8756:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8767:4:18",
														"nodeType": "YulTypedName",
														"src": "8767:4:18",
														"type": ""
													}
												],
												"src": "8706:307:18"
											},
											{
												"body": {
													"nativeSrc": "9083:84:18",
													"nodeType": "YulBlock",
													"src": "9083:84:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "9107:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9107:3:18"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "9112:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9112:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9117:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9117:6:18"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "9094:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "9094:12:18"
																},
																"nativeSrc": "9094:30:18",
																"nodeType": "YulFunctionCall",
																"src": "9094:30:18"
															},
															"nativeSrc": "9094:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "9094:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "9144:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "9144:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9149:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9149:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9140:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9140:3:18"
																		},
																		"nativeSrc": "9140:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9140:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9158:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9158:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9133:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9133:6:18"
																},
																"nativeSrc": "9133:27:18",
																"nodeType": "YulFunctionCall",
																"src": "9133:27:18"
															},
															"nativeSrc": "9133:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "9133:27:18"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "9019:148:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9065:3:18",
														"nodeType": "YulTypedName",
														"src": "9065:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "9070:3:18",
														"nodeType": "YulTypedName",
														"src": "9070:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9075:6:18",
														"nodeType": "YulTypedName",
														"src": "9075:6:18",
														"type": ""
													}
												],
												"src": "9019:148:18"
											},
											{
												"body": {
													"nativeSrc": "9256:340:18",
													"nodeType": "YulBlock",
													"src": "9256:340:18",
													"statements": [
														{
															"nativeSrc": "9266:74:18",
															"nodeType": "YulAssignment",
															"src": "9266:74:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9332:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9332:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "9291:40:18",
																			"nodeType": "YulIdentifier",
																			"src": "9291:40:18"
																		},
																		"nativeSrc": "9291:48:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9291:48:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9275:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "9275:15:18"
																},
																"nativeSrc": "9275:65:18",
																"nodeType": "YulFunctionCall",
																"src": "9275:65:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9266:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "9266:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9356:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "9356:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9363:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9363:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9349:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9349:6:18"
																},
																"nativeSrc": "9349:21:18",
																"nodeType": "YulFunctionCall",
																"src": "9349:21:18"
															},
															"nativeSrc": "9349:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "9349:21:18"
														},
														{
															"nativeSrc": "9379:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "9379:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9394:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "9394:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9401:4:18",
																		"nodeType": "YulLiteral",
																		"src": "9401:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9390:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9390:3:18"
																},
																"nativeSrc": "9390:16:18",
																"nodeType": "YulFunctionCall",
																"src": "9390:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9383:3:18",
																	"nodeType": "YulTypedName",
																	"src": "9383:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9444:83:18",
																"nodeType": "YulBlock",
																"src": "9444:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9446:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "9446:77:18"
																			},
																			"nativeSrc": "9446:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9446:79:18"
																		},
																		"nativeSrc": "9446:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9446:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9425:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "9425:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9430:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9430:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9421:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9421:3:18"
																		},
																		"nativeSrc": "9421:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9421:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9439:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9439:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9418:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "9418:2:18"
																},
																"nativeSrc": "9418:25:18",
																"nodeType": "YulFunctionCall",
																"src": "9418:25:18"
															},
															"nativeSrc": "9415:112:18",
															"nodeType": "YulIf",
															"src": "9415:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9573:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9573:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9578:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9578:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9583:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9583:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9536:36:18",
																	"nodeType": "YulIdentifier",
																	"src": "9536:36:18"
																},
																"nativeSrc": "9536:54:18",
																"nodeType": "YulFunctionCall",
																"src": "9536:54:18"
															},
															"nativeSrc": "9536:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "9536:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "9173:423:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9229:3:18",
														"nodeType": "YulTypedName",
														"src": "9229:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9234:6:18",
														"nodeType": "YulTypedName",
														"src": "9234:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9242:3:18",
														"nodeType": "YulTypedName",
														"src": "9242:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9250:5:18",
														"nodeType": "YulTypedName",
														"src": "9250:5:18",
														"type": ""
													}
												],
												"src": "9173:423:18"
											},
											{
												"body": {
													"nativeSrc": "9676:277:18",
													"nodeType": "YulBlock",
													"src": "9676:277:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "9725:83:18",
																"nodeType": "YulBlock",
																"src": "9725:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9727:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "9727:77:18"
																			},
																			"nativeSrc": "9727:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9727:79:18"
																		},
																		"nativeSrc": "9727:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9727:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9704:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9704:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9712:4:18",
																						"nodeType": "YulLiteral",
																						"src": "9712:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9700:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9700:3:18"
																				},
																				"nativeSrc": "9700:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9700:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9719:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "9719:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9696:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9696:3:18"
																		},
																		"nativeSrc": "9696:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9696:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9689:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9689:6:18"
																},
																"nativeSrc": "9689:35:18",
																"nodeType": "YulFunctionCall",
																"src": "9689:35:18"
															},
															"nativeSrc": "9686:122:18",
															"nodeType": "YulIf",
															"src": "9686:122:18"
														},
														{
															"nativeSrc": "9817:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "9817:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9844:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9844:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9831:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "9831:12:18"
																},
																"nativeSrc": "9831:20:18",
																"nodeType": "YulFunctionCall",
																"src": "9831:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9821:6:18",
																	"nodeType": "YulTypedName",
																	"src": "9821:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9860:87:18",
															"nodeType": "YulAssignment",
															"src": "9860:87:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9920:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9920:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9928:4:18",
																				"nodeType": "YulLiteral",
																				"src": "9928:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9916:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9916:3:18"
																		},
																		"nativeSrc": "9916:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9916:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9935:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9935:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9943:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9943:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "9869:46:18",
																	"nodeType": "YulIdentifier",
																	"src": "9869:46:18"
																},
																"nativeSrc": "9869:78:18",
																"nodeType": "YulFunctionCall",
																"src": "9869:78:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9860:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "9860:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "9615:338:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9654:6:18",
														"nodeType": "YulTypedName",
														"src": "9654:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9662:3:18",
														"nodeType": "YulTypedName",
														"src": "9662:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9670:5:18",
														"nodeType": "YulTypedName",
														"src": "9670:5:18",
														"type": ""
													}
												],
												"src": "9615:338:18"
											},
											{
												"body": {
													"nativeSrc": "10051:560:18",
													"nodeType": "YulBlock",
													"src": "10051:560:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10097:83:18",
																"nodeType": "YulBlock",
																"src": "10097:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10099:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10099:77:18"
																			},
																			"nativeSrc": "10099:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10099:79:18"
																		},
																		"nativeSrc": "10099:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10099:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10072:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10072:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10081:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10081:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10068:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10068:3:18"
																		},
																		"nativeSrc": "10068:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10068:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10093:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10093:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10064:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10064:3:18"
																},
																"nativeSrc": "10064:32:18",
																"nodeType": "YulFunctionCall",
																"src": "10064:32:18"
															},
															"nativeSrc": "10061:119:18",
															"nodeType": "YulIf",
															"src": "10061:119:18"
														},
														{
															"nativeSrc": "10190:117:18",
															"nodeType": "YulBlock",
															"src": "10190:117:18",
															"statements": [
																{
																	"nativeSrc": "10205:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10205:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10219:1:18",
																		"nodeType": "YulLiteral",
																		"src": "10219:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10209:6:18",
																			"nodeType": "YulTypedName",
																			"src": "10209:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10234:63:18",
																	"nodeType": "YulAssignment",
																	"src": "10234:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10269:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "10269:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10280:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10280:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10265:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10265:3:18"
																				},
																				"nativeSrc": "10265:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10265:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10289:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10289:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10244:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "10244:20:18"
																		},
																		"nativeSrc": "10244:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10244:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10234:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "10234:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10317:287:18",
															"nodeType": "YulBlock",
															"src": "10317:287:18",
															"statements": [
																{
																	"nativeSrc": "10332:46:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10332:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10363:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "10363:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10374:2:18",
																						"nodeType": "YulLiteral",
																						"src": "10374:2:18",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10359:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10359:3:18"
																				},
																				"nativeSrc": "10359:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10359:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10346:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "10346:12:18"
																		},
																		"nativeSrc": "10346:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10346:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10336:6:18",
																			"nodeType": "YulTypedName",
																			"src": "10336:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10425:83:18",
																		"nodeType": "YulBlock",
																		"src": "10425:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10427:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "10427:77:18"
																					},
																					"nativeSrc": "10427:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "10427:79:18"
																				},
																				"nativeSrc": "10427:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "10427:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10397:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10397:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10405:18:18",
																				"nodeType": "YulLiteral",
																				"src": "10405:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10394:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "10394:2:18"
																		},
																		"nativeSrc": "10394:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10394:30:18"
																	},
																	"nativeSrc": "10391:117:18",
																	"nodeType": "YulIf",
																	"src": "10391:117:18"
																},
																{
																	"nativeSrc": "10522:72:18",
																	"nodeType": "YulAssignment",
																	"src": "10522:72:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10566:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "10566:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10577:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10577:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10562:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10562:3:18"
																				},
																				"nativeSrc": "10562:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10562:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10586:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10586:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "10532:29:18",
																			"nodeType": "YulIdentifier",
																			"src": "10532:29:18"
																		},
																		"nativeSrc": "10532:62:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10532:62:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10522:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "10522:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "9959:652:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10013:9:18",
														"nodeType": "YulTypedName",
														"src": "10013:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10024:7:18",
														"nodeType": "YulTypedName",
														"src": "10024:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10036:6:18",
														"nodeType": "YulTypedName",
														"src": "10036:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10044:6:18",
														"nodeType": "YulTypedName",
														"src": "10044:6:18",
														"type": ""
													}
												],
												"src": "9959:652:18"
											},
											{
												"body": {
													"nativeSrc": "10662:32:18",
													"nodeType": "YulBlock",
													"src": "10662:32:18",
													"statements": [
														{
															"nativeSrc": "10672:16:18",
															"nodeType": "YulAssignment",
															"src": "10672:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "10683:5:18",
																"nodeType": "YulIdentifier",
																"src": "10683:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10672:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "10672:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "10617:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10644:5:18",
														"nodeType": "YulTypedName",
														"src": "10644:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10654:7:18",
														"nodeType": "YulTypedName",
														"src": "10654:7:18",
														"type": ""
													}
												],
												"src": "10617:77:18"
											},
											{
												"body": {
													"nativeSrc": "10765:53:18",
													"nodeType": "YulBlock",
													"src": "10765:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10782:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10782:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10805:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "10805:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "10787:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "10787:17:18"
																		},
																		"nativeSrc": "10787:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10787:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10775:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10775:6:18"
																},
																"nativeSrc": "10775:37:18",
																"nodeType": "YulFunctionCall",
																"src": "10775:37:18"
															},
															"nativeSrc": "10775:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "10775:37:18"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "10700:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10753:5:18",
														"nodeType": "YulTypedName",
														"src": "10753:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10760:3:18",
														"nodeType": "YulTypedName",
														"src": "10760:3:18",
														"type": ""
													}
												],
												"src": "10700:118:18"
											},
											{
												"body": {
													"nativeSrc": "10922:124:18",
													"nodeType": "YulBlock",
													"src": "10922:124:18",
													"statements": [
														{
															"nativeSrc": "10932:26:18",
															"nodeType": "YulAssignment",
															"src": "10932:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10944:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10944:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10955:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10955:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10940:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10940:3:18"
																},
																"nativeSrc": "10940:18:18",
																"nodeType": "YulFunctionCall",
																"src": "10940:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10932:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10932:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11012:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11012:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11025:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11025:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11036:1:18",
																				"nodeType": "YulLiteral",
																				"src": "11036:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11021:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11021:3:18"
																		},
																		"nativeSrc": "11021:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11021:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10968:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "10968:43:18"
																},
																"nativeSrc": "10968:71:18",
																"nodeType": "YulFunctionCall",
																"src": "10968:71:18"
															},
															"nativeSrc": "10968:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "10968:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "10824:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10894:9:18",
														"nodeType": "YulTypedName",
														"src": "10894:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10906:6:18",
														"nodeType": "YulTypedName",
														"src": "10906:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10917:4:18",
														"nodeType": "YulTypedName",
														"src": "10917:4:18",
														"type": ""
													}
												],
												"src": "10824:222:18"
											},
											{
												"body": {
													"nativeSrc": "11084:28:18",
													"nodeType": "YulBlock",
													"src": "11084:28:18",
													"statements": [
														{
															"nativeSrc": "11094:12:18",
															"nodeType": "YulAssignment",
															"src": "11094:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "11101:5:18",
																"nodeType": "YulIdentifier",
																"src": "11101:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11094:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11094:3:18"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "11052:60:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11070:5:18",
														"nodeType": "YulTypedName",
														"src": "11070:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11080:3:18",
														"nodeType": "YulTypedName",
														"src": "11080:3:18",
														"type": ""
													}
												],
												"src": "11052:60:18"
											},
											{
												"body": {
													"nativeSrc": "11178:82:18",
													"nodeType": "YulBlock",
													"src": "11178:82:18",
													"statements": [
														{
															"nativeSrc": "11188:66:18",
															"nodeType": "YulAssignment",
															"src": "11188:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11246:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "11246:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "11228:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "11228:17:18"
																				},
																				"nativeSrc": "11228:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11228:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "11219:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "11219:8:18"
																		},
																		"nativeSrc": "11219:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11219:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "11201:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "11201:17:18"
																},
																"nativeSrc": "11201:53:18",
																"nodeType": "YulFunctionCall",
																"src": "11201:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11188:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "11188:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "11118:142:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11158:5:18",
														"nodeType": "YulTypedName",
														"src": "11158:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11168:9:18",
														"nodeType": "YulTypedName",
														"src": "11168:9:18",
														"type": ""
													}
												],
												"src": "11118:142:18"
											},
											{
												"body": {
													"nativeSrc": "11326:66:18",
													"nodeType": "YulBlock",
													"src": "11326:66:18",
													"statements": [
														{
															"nativeSrc": "11336:50:18",
															"nodeType": "YulAssignment",
															"src": "11336:50:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11380:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "11380:5:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "11349:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "11349:30:18"
																},
																"nativeSrc": "11349:37:18",
																"nodeType": "YulFunctionCall",
																"src": "11349:37:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11336:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "11336:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "11266:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11306:5:18",
														"nodeType": "YulTypedName",
														"src": "11306:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11316:9:18",
														"nodeType": "YulTypedName",
														"src": "11316:9:18",
														"type": ""
													}
												],
												"src": "11266:126:18"
											},
											{
												"body": {
													"nativeSrc": "11487:66:18",
													"nodeType": "YulBlock",
													"src": "11487:66:18",
													"statements": [
														{
															"nativeSrc": "11497:50:18",
															"nodeType": "YulAssignment",
															"src": "11497:50:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11541:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "11541:5:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "11510:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "11510:30:18"
																},
																"nativeSrc": "11510:37:18",
																"nodeType": "YulFunctionCall",
																"src": "11510:37:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11497:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "11497:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ISocialMetricsOracle_$2742_to_t_address",
												"nativeSrc": "11398:155:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11467:5:18",
														"nodeType": "YulTypedName",
														"src": "11467:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11477:9:18",
														"nodeType": "YulTypedName",
														"src": "11477:9:18",
														"type": ""
													}
												],
												"src": "11398:155:18"
											},
											{
												"body": {
													"nativeSrc": "11653:95:18",
													"nodeType": "YulBlock",
													"src": "11653:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11670:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11670:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11735:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "11735:5:18"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ISocialMetricsOracle_$2742_to_t_address",
																			"nativeSrc": "11675:59:18",
																			"nodeType": "YulIdentifier",
																			"src": "11675:59:18"
																		},
																		"nativeSrc": "11675:66:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11675:66:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11663:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11663:6:18"
																},
																"nativeSrc": "11663:79:18",
																"nodeType": "YulFunctionCall",
																"src": "11663:79:18"
															},
															"nativeSrc": "11663:79:18",
															"nodeType": "YulExpressionStatement",
															"src": "11663:79:18"
														}
													]
												},
												"name": "abi_encode_t_contract$_ISocialMetricsOracle_$2742_to_t_address_fromStack",
												"nativeSrc": "11559:189:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11641:5:18",
														"nodeType": "YulTypedName",
														"src": "11641:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11648:3:18",
														"nodeType": "YulTypedName",
														"src": "11648:3:18",
														"type": ""
													}
												],
												"src": "11559:189:18"
											},
											{
												"body": {
													"nativeSrc": "11881:153:18",
													"nodeType": "YulBlock",
													"src": "11881:153:18",
													"statements": [
														{
															"nativeSrc": "11891:26:18",
															"nodeType": "YulAssignment",
															"src": "11891:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11903:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11903:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11914:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11914:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11899:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11899:3:18"
																},
																"nativeSrc": "11899:18:18",
																"nodeType": "YulFunctionCall",
																"src": "11899:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11891:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11891:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12000:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12000:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12013:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12013:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12024:1:18",
																				"nodeType": "YulLiteral",
																				"src": "12024:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12009:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12009:3:18"
																		},
																		"nativeSrc": "12009:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12009:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ISocialMetricsOracle_$2742_to_t_address_fromStack",
																	"nativeSrc": "11927:72:18",
																	"nodeType": "YulIdentifier",
																	"src": "11927:72:18"
																},
																"nativeSrc": "11927:100:18",
																"nodeType": "YulFunctionCall",
																"src": "11927:100:18"
															},
															"nativeSrc": "11927:100:18",
															"nodeType": "YulExpressionStatement",
															"src": "11927:100:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISocialMetricsOracle_$2742__to_t_address__fromStack_reversed",
												"nativeSrc": "11754:280:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11853:9:18",
														"nodeType": "YulTypedName",
														"src": "11853:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11865:6:18",
														"nodeType": "YulTypedName",
														"src": "11865:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11876:4:18",
														"nodeType": "YulTypedName",
														"src": "11876:4:18",
														"type": ""
													}
												],
												"src": "11754:280:18"
											},
											{
												"body": {
													"nativeSrc": "12105:53:18",
													"nodeType": "YulBlock",
													"src": "12105:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12122:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12122:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12145:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "12145:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "12127:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "12127:17:18"
																		},
																		"nativeSrc": "12127:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12127:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12115:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12115:6:18"
																},
																"nativeSrc": "12115:37:18",
																"nodeType": "YulFunctionCall",
																"src": "12115:37:18"
															},
															"nativeSrc": "12115:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "12115:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "12040:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12093:5:18",
														"nodeType": "YulTypedName",
														"src": "12093:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12100:3:18",
														"nodeType": "YulTypedName",
														"src": "12100:3:18",
														"type": ""
													}
												],
												"src": "12040:118:18"
											},
											{
												"body": {
													"nativeSrc": "12262:124:18",
													"nodeType": "YulBlock",
													"src": "12262:124:18",
													"statements": [
														{
															"nativeSrc": "12272:26:18",
															"nodeType": "YulAssignment",
															"src": "12272:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12284:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12284:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12295:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12295:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12280:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12280:3:18"
																},
																"nativeSrc": "12280:18:18",
																"nodeType": "YulFunctionCall",
																"src": "12280:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12272:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12272:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12352:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12352:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12365:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12365:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12376:1:18",
																				"nodeType": "YulLiteral",
																				"src": "12376:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12361:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12361:3:18"
																		},
																		"nativeSrc": "12361:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12361:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12308:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12308:43:18"
																},
																"nativeSrc": "12308:71:18",
																"nodeType": "YulFunctionCall",
																"src": "12308:71:18"
															},
															"nativeSrc": "12308:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "12308:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "12164:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12234:9:18",
														"nodeType": "YulTypedName",
														"src": "12234:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12246:6:18",
														"nodeType": "YulTypedName",
														"src": "12246:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12257:4:18",
														"nodeType": "YulTypedName",
														"src": "12257:4:18",
														"type": ""
													}
												],
												"src": "12164:222:18"
											},
											{
												"body": {
													"nativeSrc": "12459:241:18",
													"nodeType": "YulBlock",
													"src": "12459:241:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "12564:22:18",
																"nodeType": "YulBlock",
																"src": "12564:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12566:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "12566:16:18"
																			},
																			"nativeSrc": "12566:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12566:18:18"
																		},
																		"nativeSrc": "12566:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12566:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12536:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12536:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12544:18:18",
																		"nodeType": "YulLiteral",
																		"src": "12544:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12533:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "12533:2:18"
																},
																"nativeSrc": "12533:30:18",
																"nodeType": "YulFunctionCall",
																"src": "12533:30:18"
															},
															"nativeSrc": "12530:56:18",
															"nodeType": "YulIf",
															"src": "12530:56:18"
														},
														{
															"nativeSrc": "12596:37:18",
															"nodeType": "YulAssignment",
															"src": "12596:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12626:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12626:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "12604:21:18",
																	"nodeType": "YulIdentifier",
																	"src": "12604:21:18"
																},
																"nativeSrc": "12604:29:18",
																"nodeType": "YulFunctionCall",
																"src": "12604:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "12596:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12596:4:18"
																}
															]
														},
														{
															"nativeSrc": "12670:23:18",
															"nodeType": "YulAssignment",
															"src": "12670:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "12682:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "12682:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12688:4:18",
																		"nodeType": "YulLiteral",
																		"src": "12688:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12678:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12678:3:18"
																},
																"nativeSrc": "12678:15:18",
																"nodeType": "YulFunctionCall",
																"src": "12678:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "12670:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12670:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "12392:308:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "12443:6:18",
														"nodeType": "YulTypedName",
														"src": "12443:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "12454:4:18",
														"nodeType": "YulTypedName",
														"src": "12454:4:18",
														"type": ""
													}
												],
												"src": "12392:308:18"
											},
											{
												"body": {
													"nativeSrc": "12790:341:18",
													"nodeType": "YulBlock",
													"src": "12790:341:18",
													"statements": [
														{
															"nativeSrc": "12800:75:18",
															"nodeType": "YulAssignment",
															"src": "12800:75:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12867:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12867:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "12825:41:18",
																			"nodeType": "YulIdentifier",
																			"src": "12825:41:18"
																		},
																		"nativeSrc": "12825:49:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12825:49:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "12809:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "12809:15:18"
																},
																"nativeSrc": "12809:66:18",
																"nodeType": "YulFunctionCall",
																"src": "12809:66:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12800:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "12800:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12891:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "12891:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12898:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12898:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12884:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12884:6:18"
																},
																"nativeSrc": "12884:21:18",
																"nodeType": "YulFunctionCall",
																"src": "12884:21:18"
															},
															"nativeSrc": "12884:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "12884:21:18"
														},
														{
															"nativeSrc": "12914:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12914:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12929:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "12929:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12936:4:18",
																		"nodeType": "YulLiteral",
																		"src": "12936:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12925:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12925:3:18"
																},
																"nativeSrc": "12925:16:18",
																"nodeType": "YulFunctionCall",
																"src": "12925:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "12918:3:18",
																	"nodeType": "YulTypedName",
																	"src": "12918:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12979:83:18",
																"nodeType": "YulBlock",
																"src": "12979:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "12981:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "12981:77:18"
																			},
																			"nativeSrc": "12981:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12981:79:18"
																		},
																		"nativeSrc": "12981:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12981:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "12960:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "12960:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12965:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12965:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12956:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12956:3:18"
																		},
																		"nativeSrc": "12956:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12956:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12974:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12974:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12953:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "12953:2:18"
																},
																"nativeSrc": "12953:25:18",
																"nodeType": "YulFunctionCall",
																"src": "12953:25:18"
															},
															"nativeSrc": "12950:112:18",
															"nodeType": "YulIf",
															"src": "12950:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "13108:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13108:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "13113:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13113:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13118:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13118:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "13071:36:18",
																	"nodeType": "YulIdentifier",
																	"src": "13071:36:18"
																},
																"nativeSrc": "13071:54:18",
																"nodeType": "YulFunctionCall",
																"src": "13071:54:18"
															},
															"nativeSrc": "13071:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "13071:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "12706:425:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12763:3:18",
														"nodeType": "YulTypedName",
														"src": "12763:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12768:6:18",
														"nodeType": "YulTypedName",
														"src": "12768:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12776:3:18",
														"nodeType": "YulTypedName",
														"src": "12776:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12784:5:18",
														"nodeType": "YulTypedName",
														"src": "12784:5:18",
														"type": ""
													}
												],
												"src": "12706:425:18"
											},
											{
												"body": {
													"nativeSrc": "13213:278:18",
													"nodeType": "YulBlock",
													"src": "13213:278:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "13262:83:18",
																"nodeType": "YulBlock",
																"src": "13262:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "13264:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "13264:77:18"
																			},
																			"nativeSrc": "13264:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13264:79:18"
																		},
																		"nativeSrc": "13264:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "13264:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "13241:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "13241:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13249:4:18",
																						"nodeType": "YulLiteral",
																						"src": "13249:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13237:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13237:3:18"
																				},
																				"nativeSrc": "13237:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13237:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "13256:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "13256:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "13233:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13233:3:18"
																		},
																		"nativeSrc": "13233:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13233:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13226:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13226:6:18"
																},
																"nativeSrc": "13226:35:18",
																"nodeType": "YulFunctionCall",
																"src": "13226:35:18"
															},
															"nativeSrc": "13223:122:18",
															"nodeType": "YulIf",
															"src": "13223:122:18"
														},
														{
															"nativeSrc": "13354:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "13354:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13381:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13381:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "13368:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "13368:12:18"
																},
																"nativeSrc": "13368:20:18",
																"nodeType": "YulFunctionCall",
																"src": "13368:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13358:6:18",
																	"nodeType": "YulTypedName",
																	"src": "13358:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13397:88:18",
															"nodeType": "YulAssignment",
															"src": "13397:88:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13458:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13458:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13466:4:18",
																				"nodeType": "YulLiteral",
																				"src": "13466:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13454:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13454:3:18"
																		},
																		"nativeSrc": "13454:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13454:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13473:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13473:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "13481:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13481:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "13406:47:18",
																	"nodeType": "YulIdentifier",
																	"src": "13406:47:18"
																},
																"nativeSrc": "13406:79:18",
																"nodeType": "YulFunctionCall",
																"src": "13406:79:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "13397:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "13397:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "13151:340:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13191:6:18",
														"nodeType": "YulTypedName",
														"src": "13191:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13199:3:18",
														"nodeType": "YulTypedName",
														"src": "13199:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "13207:5:18",
														"nodeType": "YulTypedName",
														"src": "13207:5:18",
														"type": ""
													}
												],
												"src": "13151:340:18"
											},
											{
												"body": {
													"nativeSrc": "13666:1020:18",
													"nodeType": "YulBlock",
													"src": "13666:1020:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "13713:83:18",
																"nodeType": "YulBlock",
																"src": "13713:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13715:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "13715:77:18"
																			},
																			"nativeSrc": "13715:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13715:79:18"
																		},
																		"nativeSrc": "13715:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "13715:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13687:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "13687:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13696:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13696:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13683:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13683:3:18"
																		},
																		"nativeSrc": "13683:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13683:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13708:3:18",
																		"nodeType": "YulLiteral",
																		"src": "13708:3:18",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13679:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13679:3:18"
																},
																"nativeSrc": "13679:33:18",
																"nodeType": "YulFunctionCall",
																"src": "13679:33:18"
															},
															"nativeSrc": "13676:120:18",
															"nodeType": "YulIf",
															"src": "13676:120:18"
														},
														{
															"nativeSrc": "13806:287:18",
															"nodeType": "YulBlock",
															"src": "13806:287:18",
															"statements": [
																{
																	"nativeSrc": "13821:45:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13821:45:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13852:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13852:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13863:1:18",
																						"nodeType": "YulLiteral",
																						"src": "13863:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13848:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13848:3:18"
																				},
																				"nativeSrc": "13848:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13848:17:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13835:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "13835:12:18"
																		},
																		"nativeSrc": "13835:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13835:31:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13825:6:18",
																			"nodeType": "YulTypedName",
																			"src": "13825:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13913:83:18",
																		"nodeType": "YulBlock",
																		"src": "13913:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13915:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "13915:77:18"
																					},
																					"nativeSrc": "13915:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "13915:79:18"
																				},
																				"nativeSrc": "13915:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "13915:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13885:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13885:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13893:18:18",
																				"nodeType": "YulLiteral",
																				"src": "13893:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13882:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "13882:2:18"
																		},
																		"nativeSrc": "13882:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13882:30:18"
																	},
																	"nativeSrc": "13879:117:18",
																	"nodeType": "YulIf",
																	"src": "13879:117:18"
																},
																{
																	"nativeSrc": "14010:73:18",
																	"nodeType": "YulAssignment",
																	"src": "14010:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14055:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "14055:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14066:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "14066:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14051:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14051:3:18"
																				},
																				"nativeSrc": "14051:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14051:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14075:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14075:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "14020:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "14020:30:18"
																		},
																		"nativeSrc": "14020:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14020:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14010:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "14010:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14103:288:18",
															"nodeType": "YulBlock",
															"src": "14103:288:18",
															"statements": [
																{
																	"nativeSrc": "14118:46:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14118:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14149:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "14149:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14160:2:18",
																						"nodeType": "YulLiteral",
																						"src": "14160:2:18",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14145:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14145:3:18"
																				},
																				"nativeSrc": "14145:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14145:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "14132:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "14132:12:18"
																		},
																		"nativeSrc": "14132:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14132:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14122:6:18",
																			"nodeType": "YulTypedName",
																			"src": "14122:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "14211:83:18",
																		"nodeType": "YulBlock",
																		"src": "14211:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "14213:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "14213:77:18"
																					},
																					"nativeSrc": "14213:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "14213:79:18"
																				},
																				"nativeSrc": "14213:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "14213:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "14183:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "14183:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14191:18:18",
																				"nodeType": "YulLiteral",
																				"src": "14191:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "14180:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "14180:2:18"
																		},
																		"nativeSrc": "14180:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14180:30:18"
																	},
																	"nativeSrc": "14177:117:18",
																	"nodeType": "YulIf",
																	"src": "14177:117:18"
																},
																{
																	"nativeSrc": "14308:73:18",
																	"nodeType": "YulAssignment",
																	"src": "14308:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14353:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "14353:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14364:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "14364:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14349:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14349:3:18"
																				},
																				"nativeSrc": "14349:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14349:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14373:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14373:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "14318:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "14318:30:18"
																		},
																		"nativeSrc": "14318:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14318:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14308:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "14308:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14401:118:18",
															"nodeType": "YulBlock",
															"src": "14401:118:18",
															"statements": [
																{
																	"nativeSrc": "14416:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14416:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14430:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14430:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14420:6:18",
																			"nodeType": "YulTypedName",
																			"src": "14420:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14446:63:18",
																	"nodeType": "YulAssignment",
																	"src": "14446:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14481:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "14481:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14492:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "14492:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14477:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14477:3:18"
																				},
																				"nativeSrc": "14477:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14477:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14501:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14501:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14456:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "14456:20:18"
																		},
																		"nativeSrc": "14456:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14456:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "14446:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "14446:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14529:150:18",
															"nodeType": "YulBlock",
															"src": "14529:150:18",
															"statements": [
																{
																	"nativeSrc": "14544:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14544:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14558:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14558:2:18",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14548:6:18",
																			"nodeType": "YulTypedName",
																			"src": "14548:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14574:95:18",
																	"nodeType": "YulAssignment",
																	"src": "14574:95:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14641:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "14641:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14652:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "14652:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14637:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14637:3:18"
																				},
																				"nativeSrc": "14637:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14637:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14661:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14661:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_TokenMechanics_$2769_memory_ptr",
																			"nativeSrc": "14584:52:18",
																			"nodeType": "YulIdentifier",
																			"src": "14584:52:18"
																		},
																		"nativeSrc": "14584:85:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14584:85:18"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "14574:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "14574:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_struct$_TokenMechanics_$2769_memory_ptr",
												"nativeSrc": "13497:1189:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13612:9:18",
														"nodeType": "YulTypedName",
														"src": "13612:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13623:7:18",
														"nodeType": "YulTypedName",
														"src": "13623:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13635:6:18",
														"nodeType": "YulTypedName",
														"src": "13635:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13643:6:18",
														"nodeType": "YulTypedName",
														"src": "13643:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13651:6:18",
														"nodeType": "YulTypedName",
														"src": "13651:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13659:6:18",
														"nodeType": "YulTypedName",
														"src": "13659:6:18",
														"type": ""
													}
												],
												"src": "13497:1189:18"
											},
											{
												"body": {
													"nativeSrc": "14775:391:18",
													"nodeType": "YulBlock",
													"src": "14775:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "14821:83:18",
																"nodeType": "YulBlock",
																"src": "14821:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14823:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "14823:77:18"
																			},
																			"nativeSrc": "14823:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "14823:79:18"
																		},
																		"nativeSrc": "14823:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "14823:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14796:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14796:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14805:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14805:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14792:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14792:3:18"
																		},
																		"nativeSrc": "14792:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14792:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14817:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14817:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14788:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14788:3:18"
																},
																"nativeSrc": "14788:32:18",
																"nodeType": "YulFunctionCall",
																"src": "14788:32:18"
															},
															"nativeSrc": "14785:119:18",
															"nodeType": "YulIf",
															"src": "14785:119:18"
														},
														{
															"nativeSrc": "14914:117:18",
															"nodeType": "YulBlock",
															"src": "14914:117:18",
															"statements": [
																{
																	"nativeSrc": "14929:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14929:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14943:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14943:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14933:6:18",
																			"nodeType": "YulTypedName",
																			"src": "14933:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14958:63:18",
																	"nodeType": "YulAssignment",
																	"src": "14958:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14993:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "14993:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15004:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "15004:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14989:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14989:3:18"
																				},
																				"nativeSrc": "14989:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14989:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15013:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "15013:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14968:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "14968:20:18"
																		},
																		"nativeSrc": "14968:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14968:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14958:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "14958:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15041:118:18",
															"nodeType": "YulBlock",
															"src": "15041:118:18",
															"statements": [
																{
																	"nativeSrc": "15056:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15056:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15070:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15070:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15060:6:18",
																			"nodeType": "YulTypedName",
																			"src": "15060:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15086:63:18",
																	"nodeType": "YulAssignment",
																	"src": "15086:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15121:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "15121:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15132:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "15132:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15117:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "15117:3:18"
																				},
																				"nativeSrc": "15117:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "15117:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15141:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "15141:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "15096:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "15096:20:18"
																		},
																		"nativeSrc": "15096:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15096:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "15086:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "15086:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "14692:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14737:9:18",
														"nodeType": "YulTypedName",
														"src": "14737:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14748:7:18",
														"nodeType": "YulTypedName",
														"src": "14748:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14760:6:18",
														"nodeType": "YulTypedName",
														"src": "14760:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14768:6:18",
														"nodeType": "YulTypedName",
														"src": "14768:6:18",
														"type": ""
													}
												],
												"src": "14692:474:18"
											},
											{
												"body": {
													"nativeSrc": "15200:152:18",
													"nodeType": "YulBlock",
													"src": "15200:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15217:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15217:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15220:77:18",
																		"nodeType": "YulLiteral",
																		"src": "15220:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15210:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15210:6:18"
																},
																"nativeSrc": "15210:88:18",
																"nodeType": "YulFunctionCall",
																"src": "15210:88:18"
															},
															"nativeSrc": "15210:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "15210:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15314:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15314:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15317:4:18",
																		"nodeType": "YulLiteral",
																		"src": "15317:4:18",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15307:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15307:6:18"
																},
																"nativeSrc": "15307:15:18",
																"nodeType": "YulFunctionCall",
																"src": "15307:15:18"
															},
															"nativeSrc": "15307:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "15307:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15338:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15338:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15341:4:18",
																		"nodeType": "YulLiteral",
																		"src": "15341:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15331:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15331:6:18"
																},
																"nativeSrc": "15331:15:18",
																"nodeType": "YulFunctionCall",
																"src": "15331:15:18"
															},
															"nativeSrc": "15331:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "15331:15:18"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "15172:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "15172:180:18"
											},
											{
												"body": {
													"nativeSrc": "15409:269:18",
													"nodeType": "YulBlock",
													"src": "15409:269:18",
													"statements": [
														{
															"nativeSrc": "15419:22:18",
															"nodeType": "YulAssignment",
															"src": "15419:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15433:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "15433:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15439:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15439:1:18",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15429:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15429:3:18"
																},
																"nativeSrc": "15429:12:18",
																"nodeType": "YulFunctionCall",
																"src": "15429:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "15419:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15419:6:18"
																}
															]
														},
														{
															"nativeSrc": "15450:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "15450:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15480:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "15480:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15486:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15486:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15476:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15476:3:18"
																},
																"nativeSrc": "15476:12:18",
																"nodeType": "YulFunctionCall",
																"src": "15476:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "15454:18:18",
																	"nodeType": "YulTypedName",
																	"src": "15454:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15527:51:18",
																"nodeType": "YulBlock",
																"src": "15527:51:18",
																"statements": [
																	{
																		"nativeSrc": "15541:27:18",
																		"nodeType": "YulAssignment",
																		"src": "15541:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "15555:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "15555:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15563:4:18",
																					"nodeType": "YulLiteral",
																					"src": "15563:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "15551:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "15551:3:18"
																			},
																			"nativeSrc": "15551:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "15551:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "15541:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15541:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "15507:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "15507:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15500:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15500:6:18"
																},
																"nativeSrc": "15500:26:18",
																"nodeType": "YulFunctionCall",
																"src": "15500:26:18"
															},
															"nativeSrc": "15497:81:18",
															"nodeType": "YulIf",
															"src": "15497:81:18"
														},
														{
															"body": {
																"nativeSrc": "15630:42:18",
																"nodeType": "YulBlock",
																"src": "15630:42:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "15644:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "15644:16:18"
																			},
																			"nativeSrc": "15644:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "15644:18:18"
																		},
																		"nativeSrc": "15644:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "15644:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "15594:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "15594:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "15617:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15617:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15625:2:18",
																				"nodeType": "YulLiteral",
																				"src": "15625:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "15614:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "15614:2:18"
																		},
																		"nativeSrc": "15614:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15614:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "15591:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "15591:2:18"
																},
																"nativeSrc": "15591:38:18",
																"nodeType": "YulFunctionCall",
																"src": "15591:38:18"
															},
															"nativeSrc": "15588:84:18",
															"nodeType": "YulIf",
															"src": "15588:84:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "15358:320:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "15393:4:18",
														"nodeType": "YulTypedName",
														"src": "15393:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "15402:6:18",
														"nodeType": "YulTypedName",
														"src": "15402:6:18",
														"type": ""
													}
												],
												"src": "15358:320:18"
											},
											{
												"body": {
													"nativeSrc": "15739:53:18",
													"nodeType": "YulBlock",
													"src": "15739:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15756:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15756:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15779:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "15779:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "15761:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "15761:17:18"
																		},
																		"nativeSrc": "15761:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15761:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15749:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15749:6:18"
																},
																"nativeSrc": "15749:37:18",
																"nodeType": "YulFunctionCall",
																"src": "15749:37:18"
															},
															"nativeSrc": "15749:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "15749:37:18"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "15684:108:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15727:5:18",
														"nodeType": "YulTypedName",
														"src": "15727:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15734:3:18",
														"nodeType": "YulTypedName",
														"src": "15734:3:18",
														"type": ""
													}
												],
												"src": "15684:108:18"
											},
											{
												"body": {
													"nativeSrc": "16006:1157:18",
													"nodeType": "YulBlock",
													"src": "16006:1157:18",
													"statements": [
														{
															"nativeSrc": "16016:26:18",
															"nodeType": "YulVariableDeclaration",
															"src": "16016:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16032:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16032:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16037:4:18",
																		"nodeType": "YulLiteral",
																		"src": "16037:4:18",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16028:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16028:3:18"
																},
																"nativeSrc": "16028:14:18",
																"nodeType": "YulFunctionCall",
																"src": "16028:14:18"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "16020:4:18",
																	"nodeType": "YulTypedName",
																	"src": "16020:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16052:177:18",
															"nodeType": "YulBlock",
															"src": "16052:177:18",
															"statements": [
																{
																	"nativeSrc": "16100:43:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16100:43:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16130:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "16130:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16137:4:18",
																						"nodeType": "YulLiteral",
																						"src": "16137:4:18",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16126:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "16126:3:18"
																				},
																				"nativeSrc": "16126:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16126:16:18"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "16120:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "16120:5:18"
																		},
																		"nativeSrc": "16120:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16120:23:18"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "16104:12:18",
																			"nodeType": "YulTypedName",
																			"src": "16104:12:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "16190:12:18",
																				"nodeType": "YulIdentifier",
																				"src": "16190:12:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "16208:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "16208:3:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16213:4:18",
																						"nodeType": "YulLiteral",
																						"src": "16213:4:18",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16204:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "16204:3:18"
																				},
																				"nativeSrc": "16204:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16204:14:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "16156:33:18",
																			"nodeType": "YulIdentifier",
																			"src": "16156:33:18"
																		},
																		"nativeSrc": "16156:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16156:63:18"
																	},
																	"nativeSrc": "16156:63:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "16156:63:18"
																}
															]
														},
														{
															"nativeSrc": "16239:177:18",
															"nodeType": "YulBlock",
															"src": "16239:177:18",
															"statements": [
																{
																	"nativeSrc": "16287:43:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16287:43:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16317:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "16317:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16324:4:18",
																						"nodeType": "YulLiteral",
																						"src": "16324:4:18",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16313:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "16313:3:18"
																				},
																				"nativeSrc": "16313:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16313:16:18"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "16307:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "16307:5:18"
																		},
																		"nativeSrc": "16307:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16307:23:18"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "16291:12:18",
																			"nodeType": "YulTypedName",
																			"src": "16291:12:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "16377:12:18",
																				"nodeType": "YulIdentifier",
																				"src": "16377:12:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "16395:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "16395:3:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16400:4:18",
																						"nodeType": "YulLiteral",
																						"src": "16400:4:18",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16391:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "16391:3:18"
																				},
																				"nativeSrc": "16391:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16391:14:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "16343:33:18",
																			"nodeType": "YulIdentifier",
																			"src": "16343:33:18"
																		},
																		"nativeSrc": "16343:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16343:63:18"
																	},
																	"nativeSrc": "16343:63:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "16343:63:18"
																}
															]
														},
														{
															"nativeSrc": "16426:173:18",
															"nodeType": "YulBlock",
															"src": "16426:173:18",
															"statements": [
																{
																	"nativeSrc": "16470:43:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16470:43:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16500:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "16500:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16507:4:18",
																						"nodeType": "YulLiteral",
																						"src": "16507:4:18",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16496:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "16496:3:18"
																				},
																				"nativeSrc": "16496:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16496:16:18"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "16490:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "16490:5:18"
																		},
																		"nativeSrc": "16490:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16490:23:18"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "16474:12:18",
																			"nodeType": "YulTypedName",
																			"src": "16474:12:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "16560:12:18",
																				"nodeType": "YulIdentifier",
																				"src": "16560:12:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "16578:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "16578:3:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16583:4:18",
																						"nodeType": "YulLiteral",
																						"src": "16583:4:18",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16574:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "16574:3:18"
																				},
																				"nativeSrc": "16574:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16574:14:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "16526:33:18",
																			"nodeType": "YulIdentifier",
																			"src": "16526:33:18"
																		},
																		"nativeSrc": "16526:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16526:63:18"
																	},
																	"nativeSrc": "16526:63:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "16526:63:18"
																}
															]
														},
														{
															"nativeSrc": "16609:176:18",
															"nodeType": "YulBlock",
															"src": "16609:176:18",
															"statements": [
																{
																	"nativeSrc": "16656:43:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16656:43:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16686:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "16686:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16693:4:18",
																						"nodeType": "YulLiteral",
																						"src": "16693:4:18",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16682:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "16682:3:18"
																				},
																				"nativeSrc": "16682:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16682:16:18"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "16676:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "16676:5:18"
																		},
																		"nativeSrc": "16676:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16676:23:18"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "16660:12:18",
																			"nodeType": "YulTypedName",
																			"src": "16660:12:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "16746:12:18",
																				"nodeType": "YulIdentifier",
																				"src": "16746:12:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "16764:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "16764:3:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16769:4:18",
																						"nodeType": "YulLiteral",
																						"src": "16769:4:18",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16760:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "16760:3:18"
																				},
																				"nativeSrc": "16760:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16760:14:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "16712:33:18",
																			"nodeType": "YulIdentifier",
																			"src": "16712:33:18"
																		},
																		"nativeSrc": "16712:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16712:63:18"
																	},
																	"nativeSrc": "16712:63:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "16712:63:18"
																}
															]
														},
														{
															"nativeSrc": "16795:177:18",
															"nodeType": "YulBlock",
															"src": "16795:177:18",
															"statements": [
																{
																	"nativeSrc": "16843:43:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16843:43:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16873:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "16873:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16880:4:18",
																						"nodeType": "YulLiteral",
																						"src": "16880:4:18",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16869:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "16869:3:18"
																				},
																				"nativeSrc": "16869:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16869:16:18"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "16863:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "16863:5:18"
																		},
																		"nativeSrc": "16863:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16863:23:18"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "16847:12:18",
																			"nodeType": "YulTypedName",
																			"src": "16847:12:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "16933:12:18",
																				"nodeType": "YulIdentifier",
																				"src": "16933:12:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "16951:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "16951:3:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16956:4:18",
																						"nodeType": "YulLiteral",
																						"src": "16956:4:18",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16947:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "16947:3:18"
																				},
																				"nativeSrc": "16947:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16947:14:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "16899:33:18",
																			"nodeType": "YulIdentifier",
																			"src": "16899:33:18"
																		},
																		"nativeSrc": "16899:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16899:63:18"
																	},
																	"nativeSrc": "16899:63:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "16899:63:18"
																}
															]
														},
														{
															"nativeSrc": "16982:174:18",
															"nodeType": "YulBlock",
															"src": "16982:174:18",
															"statements": [
																{
																	"nativeSrc": "17027:43:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17027:43:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17057:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "17057:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17064:4:18",
																						"nodeType": "YulLiteral",
																						"src": "17064:4:18",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17053:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "17053:3:18"
																				},
																				"nativeSrc": "17053:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "17053:16:18"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17047:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "17047:5:18"
																		},
																		"nativeSrc": "17047:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17047:23:18"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "17031:12:18",
																			"nodeType": "YulTypedName",
																			"src": "17031:12:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "17117:12:18",
																				"nodeType": "YulIdentifier",
																				"src": "17117:12:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "17135:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "17135:3:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17140:4:18",
																						"nodeType": "YulLiteral",
																						"src": "17140:4:18",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17131:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "17131:3:18"
																				},
																				"nativeSrc": "17131:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "17131:14:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "17083:33:18",
																			"nodeType": "YulIdentifier",
																			"src": "17083:33:18"
																		},
																		"nativeSrc": "17083:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17083:63:18"
																	},
																	"nativeSrc": "17083:63:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "17083:63:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_TokenMechanics_$2769_memory_ptr_to_t_struct$_TokenMechanics_$2769_memory_ptr_fromStack",
												"nativeSrc": "15876:1287:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15993:5:18",
														"nodeType": "YulTypedName",
														"src": "15993:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16000:3:18",
														"nodeType": "YulTypedName",
														"src": "16000:3:18",
														"type": ""
													}
												],
												"src": "15876:1287:18"
											},
											{
												"body": {
													"nativeSrc": "17331:189:18",
													"nodeType": "YulBlock",
													"src": "17331:189:18",
													"statements": [
														{
															"nativeSrc": "17341:27:18",
															"nodeType": "YulAssignment",
															"src": "17341:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17353:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "17353:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17364:3:18",
																		"nodeType": "YulLiteral",
																		"src": "17364:3:18",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17349:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17349:3:18"
																},
																"nativeSrc": "17349:19:18",
																"nodeType": "YulFunctionCall",
																"src": "17349:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17341:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "17341:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17486:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "17486:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17499:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "17499:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17510:1:18",
																				"nodeType": "YulLiteral",
																				"src": "17510:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17495:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17495:3:18"
																		},
																		"nativeSrc": "17495:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17495:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_TokenMechanics_$2769_memory_ptr_to_t_struct$_TokenMechanics_$2769_memory_ptr_fromStack",
																	"nativeSrc": "17378:107:18",
																	"nodeType": "YulIdentifier",
																	"src": "17378:107:18"
																},
																"nativeSrc": "17378:135:18",
																"nodeType": "YulFunctionCall",
																"src": "17378:135:18"
															},
															"nativeSrc": "17378:135:18",
															"nodeType": "YulExpressionStatement",
															"src": "17378:135:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_TokenMechanics_$2769_memory_ptr__to_t_struct$_TokenMechanics_$2769_memory_ptr__fromStack_reversed",
												"nativeSrc": "17169:351:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17303:9:18",
														"nodeType": "YulTypedName",
														"src": "17303:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17315:6:18",
														"nodeType": "YulTypedName",
														"src": "17315:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17326:4:18",
														"nodeType": "YulTypedName",
														"src": "17326:4:18",
														"type": ""
													}
												],
												"src": "17169:351:18"
											},
											{
												"body": {
													"nativeSrc": "17554:152:18",
													"nodeType": "YulBlock",
													"src": "17554:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17571:1:18",
																		"nodeType": "YulLiteral",
																		"src": "17571:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17574:77:18",
																		"nodeType": "YulLiteral",
																		"src": "17574:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17564:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17564:6:18"
																},
																"nativeSrc": "17564:88:18",
																"nodeType": "YulFunctionCall",
																"src": "17564:88:18"
															},
															"nativeSrc": "17564:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "17564:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17668:1:18",
																		"nodeType": "YulLiteral",
																		"src": "17668:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17671:4:18",
																		"nodeType": "YulLiteral",
																		"src": "17671:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17661:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17661:6:18"
																},
																"nativeSrc": "17661:15:18",
																"nodeType": "YulFunctionCall",
																"src": "17661:15:18"
															},
															"nativeSrc": "17661:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "17661:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17692:1:18",
																		"nodeType": "YulLiteral",
																		"src": "17692:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17695:4:18",
																		"nodeType": "YulLiteral",
																		"src": "17695:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17685:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17685:6:18"
																},
																"nativeSrc": "17685:15:18",
																"nodeType": "YulFunctionCall",
																"src": "17685:15:18"
															},
															"nativeSrc": "17685:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "17685:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "17526:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "17526:180:18"
											},
											{
												"body": {
													"nativeSrc": "17756:147:18",
													"nodeType": "YulBlock",
													"src": "17756:147:18",
													"statements": [
														{
															"nativeSrc": "17766:25:18",
															"nodeType": "YulAssignment",
															"src": "17766:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17789:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "17789:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17771:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "17771:17:18"
																},
																"nativeSrc": "17771:20:18",
																"nodeType": "YulFunctionCall",
																"src": "17771:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17766:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "17766:1:18"
																}
															]
														},
														{
															"nativeSrc": "17800:25:18",
															"nodeType": "YulAssignment",
															"src": "17800:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17823:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "17823:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17805:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "17805:17:18"
																},
																"nativeSrc": "17805:20:18",
																"nodeType": "YulFunctionCall",
																"src": "17805:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17800:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "17800:1:18"
																}
															]
														},
														{
															"nativeSrc": "17834:16:18",
															"nodeType": "YulAssignment",
															"src": "17834:16:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17845:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "17845:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17848:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "17848:1:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17841:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17841:3:18"
																},
																"nativeSrc": "17841:9:18",
																"nodeType": "YulFunctionCall",
																"src": "17841:9:18"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "17834:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17834:3:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17874:22:18",
																"nodeType": "YulBlock",
																"src": "17874:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17876:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "17876:16:18"
																			},
																			"nativeSrc": "17876:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "17876:18:18"
																		},
																		"nativeSrc": "17876:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "17876:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17866:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "17866:1:18"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "17869:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "17869:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17863:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "17863:2:18"
																},
																"nativeSrc": "17863:10:18",
																"nodeType": "YulFunctionCall",
																"src": "17863:10:18"
															},
															"nativeSrc": "17860:36:18",
															"nodeType": "YulIf",
															"src": "17860:36:18"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "17712:191:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17743:1:18",
														"nodeType": "YulTypedName",
														"src": "17743:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17746:1:18",
														"nodeType": "YulTypedName",
														"src": "17746:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "17752:3:18",
														"nodeType": "YulTypedName",
														"src": "17752:3:18",
														"type": ""
													}
												],
												"src": "17712:191:18"
											},
											{
												"body": {
													"nativeSrc": "17972:80:18",
													"nodeType": "YulBlock",
													"src": "17972:80:18",
													"statements": [
														{
															"nativeSrc": "17982:22:18",
															"nodeType": "YulAssignment",
															"src": "17982:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17997:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "17997:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17991:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "17991:5:18"
																},
																"nativeSrc": "17991:13:18",
																"nodeType": "YulFunctionCall",
																"src": "17991:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17982:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "17982:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18040:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "18040:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "18013:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "18013:26:18"
																},
																"nativeSrc": "18013:33:18",
																"nodeType": "YulFunctionCall",
																"src": "18013:33:18"
															},
															"nativeSrc": "18013:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "18013:33:18"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "17909:143:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17950:6:18",
														"nodeType": "YulTypedName",
														"src": "17950:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17958:3:18",
														"nodeType": "YulTypedName",
														"src": "17958:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17966:5:18",
														"nodeType": "YulTypedName",
														"src": "17966:5:18",
														"type": ""
													}
												],
												"src": "17909:143:18"
											},
											{
												"body": {
													"nativeSrc": "18204:891:18",
													"nodeType": "YulBlock",
													"src": "18204:891:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "18248:83:18",
																"nodeType": "YulBlock",
																"src": "18248:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nativeSrc": "18250:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "18250:77:18"
																			},
																			"nativeSrc": "18250:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "18250:79:18"
																		},
																		"nativeSrc": "18250:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "18250:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nativeSrc": "18225:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "18225:3:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18230:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "18230:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18221:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18221:3:18"
																		},
																		"nativeSrc": "18221:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18221:19:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18242:4:18",
																		"nodeType": "YulLiteral",
																		"src": "18242:4:18",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18217:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18217:3:18"
																},
																"nativeSrc": "18217:30:18",
																"nodeType": "YulFunctionCall",
																"src": "18217:30:18"
															},
															"nativeSrc": "18214:117:18",
															"nodeType": "YulIf",
															"src": "18214:117:18"
														},
														{
															"nativeSrc": "18340:30:18",
															"nodeType": "YulAssignment",
															"src": "18340:30:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18365:4:18",
																		"nodeType": "YulLiteral",
																		"src": "18365:4:18",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "18349:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "18349:15:18"
																},
																"nativeSrc": "18349:21:18",
																"nodeType": "YulFunctionCall",
																"src": "18349:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18340:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "18340:5:18"
																}
															]
														},
														{
															"nativeSrc": "18380:167:18",
															"nodeType": "YulBlock",
															"src": "18380:167:18",
															"statements": [
																{
																	"nativeSrc": "18421:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18421:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18435:1:18",
																		"nodeType": "YulLiteral",
																		"src": "18435:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18425:6:18",
																			"nodeType": "YulTypedName",
																			"src": "18425:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18461:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "18461:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18468:4:18",
																						"nodeType": "YulLiteral",
																						"src": "18468:4:18",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18457:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "18457:3:18"
																				},
																				"nativeSrc": "18457:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "18457:16:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "18511:9:18",
																								"nodeType": "YulIdentifier",
																								"src": "18511:9:18"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "18522:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "18522:6:18"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "18507:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "18507:3:18"
																						},
																						"nativeSrc": "18507:22:18",
																						"nodeType": "YulFunctionCall",
																						"src": "18507:22:18"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "18531:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "18531:3:18"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nativeSrc": "18475:31:18",
																					"nodeType": "YulIdentifier",
																					"src": "18475:31:18"
																				},
																				"nativeSrc": "18475:60:18",
																				"nodeType": "YulFunctionCall",
																				"src": "18475:60:18"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "18450:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "18450:6:18"
																		},
																		"nativeSrc": "18450:86:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18450:86:18"
																	},
																	"nativeSrc": "18450:86:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "18450:86:18"
																}
															]
														},
														{
															"nativeSrc": "18557:172:18",
															"nodeType": "YulBlock",
															"src": "18557:172:18",
															"statements": [
																{
																	"nativeSrc": "18602:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18602:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18616:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18616:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18606:6:18",
																			"nodeType": "YulTypedName",
																			"src": "18606:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18643:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "18643:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18650:4:18",
																						"nodeType": "YulLiteral",
																						"src": "18650:4:18",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18639:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "18639:3:18"
																				},
																				"nativeSrc": "18639:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "18639:16:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "18693:9:18",
																								"nodeType": "YulIdentifier",
																								"src": "18693:9:18"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "18704:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "18704:6:18"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "18689:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "18689:3:18"
																						},
																						"nativeSrc": "18689:22:18",
																						"nodeType": "YulFunctionCall",
																						"src": "18689:22:18"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "18713:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "18713:3:18"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nativeSrc": "18657:31:18",
																					"nodeType": "YulIdentifier",
																					"src": "18657:31:18"
																				},
																				"nativeSrc": "18657:60:18",
																				"nodeType": "YulFunctionCall",
																				"src": "18657:60:18"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "18632:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "18632:6:18"
																		},
																		"nativeSrc": "18632:86:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18632:86:18"
																	},
																	"nativeSrc": "18632:86:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "18632:86:18"
																}
															]
														},
														{
															"nativeSrc": "18739:172:18",
															"nodeType": "YulBlock",
															"src": "18739:172:18",
															"statements": [
																{
																	"nativeSrc": "18784:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18784:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18798:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18798:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18788:6:18",
																			"nodeType": "YulTypedName",
																			"src": "18788:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18825:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "18825:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18832:4:18",
																						"nodeType": "YulLiteral",
																						"src": "18832:4:18",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18821:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "18821:3:18"
																				},
																				"nativeSrc": "18821:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "18821:16:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "18875:9:18",
																								"nodeType": "YulIdentifier",
																								"src": "18875:9:18"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "18886:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "18886:6:18"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "18871:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "18871:3:18"
																						},
																						"nativeSrc": "18871:22:18",
																						"nodeType": "YulFunctionCall",
																						"src": "18871:22:18"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "18895:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "18895:3:18"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nativeSrc": "18839:31:18",
																					"nodeType": "YulIdentifier",
																					"src": "18839:31:18"
																				},
																				"nativeSrc": "18839:60:18",
																				"nodeType": "YulFunctionCall",
																				"src": "18839:60:18"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "18814:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "18814:6:18"
																		},
																		"nativeSrc": "18814:86:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18814:86:18"
																	},
																	"nativeSrc": "18814:86:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "18814:86:18"
																}
															]
														},
														{
															"nativeSrc": "18921:167:18",
															"nodeType": "YulBlock",
															"src": "18921:167:18",
															"statements": [
																{
																	"nativeSrc": "18961:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18961:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18975:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18975:2:18",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18965:6:18",
																			"nodeType": "YulTypedName",
																			"src": "18965:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19002:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "19002:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19009:4:18",
																						"nodeType": "YulLiteral",
																						"src": "19009:4:18",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18998:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "18998:3:18"
																				},
																				"nativeSrc": "18998:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "18998:16:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "19052:9:18",
																								"nodeType": "YulIdentifier",
																								"src": "19052:9:18"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "19063:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "19063:6:18"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "19048:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "19048:3:18"
																						},
																						"nativeSrc": "19048:22:18",
																						"nodeType": "YulFunctionCall",
																						"src": "19048:22:18"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "19072:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "19072:3:18"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nativeSrc": "19016:31:18",
																					"nodeType": "YulIdentifier",
																					"src": "19016:31:18"
																				},
																				"nativeSrc": "19016:60:18",
																				"nodeType": "YulFunctionCall",
																				"src": "19016:60:18"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "18991:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "18991:6:18"
																		},
																		"nativeSrc": "18991:86:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18991:86:18"
																	},
																	"nativeSrc": "18991:86:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "18991:86:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_SocialMetrics_$2730_memory_ptr_fromMemory",
												"nativeSrc": "18107:988:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18179:9:18",
														"nodeType": "YulTypedName",
														"src": "18179:9:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18190:3:18",
														"nodeType": "YulTypedName",
														"src": "18190:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "18198:5:18",
														"nodeType": "YulTypedName",
														"src": "18198:5:18",
														"type": ""
													}
												],
												"src": "18107:988:18"
											},
											{
												"body": {
													"nativeSrc": "19209:306:18",
													"nodeType": "YulBlock",
													"src": "19209:306:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "19256:83:18",
																"nodeType": "YulBlock",
																"src": "19256:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19258:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "19258:77:18"
																			},
																			"nativeSrc": "19258:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "19258:79:18"
																		},
																		"nativeSrc": "19258:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "19258:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19230:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "19230:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19239:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "19239:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19226:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19226:3:18"
																		},
																		"nativeSrc": "19226:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19226:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19251:3:18",
																		"nodeType": "YulLiteral",
																		"src": "19251:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19222:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19222:3:18"
																},
																"nativeSrc": "19222:33:18",
																"nodeType": "YulFunctionCall",
																"src": "19222:33:18"
															},
															"nativeSrc": "19219:120:18",
															"nodeType": "YulIf",
															"src": "19219:120:18"
														},
														{
															"nativeSrc": "19349:159:18",
															"nodeType": "YulBlock",
															"src": "19349:159:18",
															"statements": [
																{
																	"nativeSrc": "19364:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19364:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19378:1:18",
																		"nodeType": "YulLiteral",
																		"src": "19378:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19368:6:18",
																			"nodeType": "YulTypedName",
																			"src": "19368:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19393:105:18",
																	"nodeType": "YulAssignment",
																	"src": "19393:105:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19470:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "19470:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19481:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "19481:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19466:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "19466:3:18"
																				},
																				"nativeSrc": "19466:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "19466:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19490:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "19490:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_SocialMetrics_$2730_memory_ptr_fromMemory",
																			"nativeSrc": "19403:62:18",
																			"nodeType": "YulIdentifier",
																			"src": "19403:62:18"
																		},
																		"nativeSrc": "19403:95:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19403:95:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19393:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "19393:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_SocialMetrics_$2730_memory_ptr_fromMemory",
												"nativeSrc": "19101:414:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19179:9:18",
														"nodeType": "YulTypedName",
														"src": "19179:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19190:7:18",
														"nodeType": "YulTypedName",
														"src": "19190:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19202:6:18",
														"nodeType": "YulTypedName",
														"src": "19202:6:18",
														"type": ""
													}
												],
												"src": "19101:414:18"
											},
											{
												"body": {
													"nativeSrc": "19566:149:18",
													"nodeType": "YulBlock",
													"src": "19566:149:18",
													"statements": [
														{
															"nativeSrc": "19576:25:18",
															"nodeType": "YulAssignment",
															"src": "19576:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19599:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "19599:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19581:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "19581:17:18"
																},
																"nativeSrc": "19581:20:18",
																"nodeType": "YulFunctionCall",
																"src": "19581:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19576:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "19576:1:18"
																}
															]
														},
														{
															"nativeSrc": "19610:25:18",
															"nodeType": "YulAssignment",
															"src": "19610:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19633:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "19633:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19615:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "19615:17:18"
																},
																"nativeSrc": "19615:20:18",
																"nodeType": "YulFunctionCall",
																"src": "19615:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19610:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "19610:1:18"
																}
															]
														},
														{
															"nativeSrc": "19644:17:18",
															"nodeType": "YulAssignment",
															"src": "19644:17:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19656:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "19656:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19659:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "19659:1:18"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "19652:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19652:3:18"
																},
																"nativeSrc": "19652:9:18",
																"nodeType": "YulFunctionCall",
																"src": "19652:9:18"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "19644:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "19644:4:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19686:22:18",
																"nodeType": "YulBlock",
																"src": "19686:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19688:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "19688:16:18"
																			},
																			"nativeSrc": "19688:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "19688:18:18"
																		},
																		"nativeSrc": "19688:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "19688:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "19677:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "19677:4:18"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "19683:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "19683:1:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19674:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "19674:2:18"
																},
																"nativeSrc": "19674:11:18",
																"nodeType": "YulFunctionCall",
																"src": "19674:11:18"
															},
															"nativeSrc": "19671:37:18",
															"nodeType": "YulIf",
															"src": "19671:37:18"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "19521:194:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19552:1:18",
														"nodeType": "YulTypedName",
														"src": "19552:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19555:1:18",
														"nodeType": "YulTypedName",
														"src": "19555:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "19561:4:18",
														"nodeType": "YulTypedName",
														"src": "19561:4:18",
														"type": ""
													}
												],
												"src": "19521:194:18"
											},
											{
												"body": {
													"nativeSrc": "19764:79:18",
													"nodeType": "YulBlock",
													"src": "19764:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "19821:16:18",
																"nodeType": "YulBlock",
																"src": "19821:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "19830:1:18",
																					"nodeType": "YulLiteral",
																					"src": "19830:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19833:1:18",
																					"nodeType": "YulLiteral",
																					"src": "19833:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "19823:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "19823:6:18"
																			},
																			"nativeSrc": "19823:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "19823:12:18"
																		},
																		"nativeSrc": "19823:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "19823:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19787:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "19787:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19812:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "19812:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "19794:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "19794:17:18"
																				},
																				"nativeSrc": "19794:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "19794:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "19784:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "19784:2:18"
																		},
																		"nativeSrc": "19784:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19784:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19777:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19777:6:18"
																},
																"nativeSrc": "19777:43:18",
																"nodeType": "YulFunctionCall",
																"src": "19777:43:18"
															},
															"nativeSrc": "19774:63:18",
															"nodeType": "YulIf",
															"src": "19774:63:18"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "19721:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19757:5:18",
														"nodeType": "YulTypedName",
														"src": "19757:5:18",
														"type": ""
													}
												],
												"src": "19721:122:18"
											},
											{
												"body": {
													"nativeSrc": "19912:80:18",
													"nodeType": "YulBlock",
													"src": "19912:80:18",
													"statements": [
														{
															"nativeSrc": "19922:22:18",
															"nodeType": "YulAssignment",
															"src": "19922:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19937:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "19937:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19931:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "19931:5:18"
																},
																"nativeSrc": "19931:13:18",
																"nodeType": "YulFunctionCall",
																"src": "19931:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19922:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "19922:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19980:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "19980:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "19953:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "19953:26:18"
																},
																"nativeSrc": "19953:33:18",
																"nodeType": "YulFunctionCall",
																"src": "19953:33:18"
															},
															"nativeSrc": "19953:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "19953:33:18"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "19849:143:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19890:6:18",
														"nodeType": "YulTypedName",
														"src": "19890:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19898:3:18",
														"nodeType": "YulTypedName",
														"src": "19898:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19906:5:18",
														"nodeType": "YulTypedName",
														"src": "19906:5:18",
														"type": ""
													}
												],
												"src": "19849:143:18"
											},
											{
												"body": {
													"nativeSrc": "20075:274:18",
													"nodeType": "YulBlock",
													"src": "20075:274:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "20121:83:18",
																"nodeType": "YulBlock",
																"src": "20121:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20123:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "20123:77:18"
																			},
																			"nativeSrc": "20123:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "20123:79:18"
																		},
																		"nativeSrc": "20123:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "20123:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20096:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "20096:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20105:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "20105:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20092:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20092:3:18"
																		},
																		"nativeSrc": "20092:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20092:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20117:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20117:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20088:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20088:3:18"
																},
																"nativeSrc": "20088:32:18",
																"nodeType": "YulFunctionCall",
																"src": "20088:32:18"
															},
															"nativeSrc": "20085:119:18",
															"nodeType": "YulIf",
															"src": "20085:119:18"
														},
														{
															"nativeSrc": "20214:128:18",
															"nodeType": "YulBlock",
															"src": "20214:128:18",
															"statements": [
																{
																	"nativeSrc": "20229:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20229:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20243:1:18",
																		"nodeType": "YulLiteral",
																		"src": "20243:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20233:6:18",
																			"nodeType": "YulTypedName",
																			"src": "20233:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20258:74:18",
																	"nodeType": "YulAssignment",
																	"src": "20258:74:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20304:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "20304:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20315:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "20315:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20300:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "20300:3:18"
																				},
																				"nativeSrc": "20300:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "20300:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20324:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "20324:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "20268:31:18",
																			"nodeType": "YulIdentifier",
																			"src": "20268:31:18"
																		},
																		"nativeSrc": "20268:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20268:64:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20258:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "20258:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "19998:351:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20045:9:18",
														"nodeType": "YulTypedName",
														"src": "20045:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20056:7:18",
														"nodeType": "YulTypedName",
														"src": "20056:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20068:6:18",
														"nodeType": "YulTypedName",
														"src": "20068:6:18",
														"type": ""
													}
												],
												"src": "19998:351:18"
											},
											{
												"body": {
													"nativeSrc": "20406:51:18",
													"nodeType": "YulBlock",
													"src": "20406:51:18",
													"statements": [
														{
															"nativeSrc": "20416:34:18",
															"nodeType": "YulAssignment",
															"src": "20416:34:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20441:1:18",
																		"nodeType": "YulLiteral",
																		"src": "20441:1:18",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "20444:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "20444:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "20437:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20437:3:18"
																},
																"nativeSrc": "20437:13:18",
																"nodeType": "YulFunctionCall",
																"src": "20437:13:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "20416:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "20416:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "20355:102:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20387:5:18",
														"nodeType": "YulTypedName",
														"src": "20387:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "20397:8:18",
														"nodeType": "YulTypedName",
														"src": "20397:8:18",
														"type": ""
													}
												],
												"src": "20355:102:18"
											},
											{
												"body": {
													"nativeSrc": "20536:775:18",
													"nodeType": "YulBlock",
													"src": "20536:775:18",
													"statements": [
														{
															"nativeSrc": "20546:15:18",
															"nodeType": "YulAssignment",
															"src": "20546:15:18",
															"value": {
																"name": "_power",
																"nativeSrc": "20555:6:18",
																"nodeType": "YulIdentifier",
																"src": "20555:6:18"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "20546:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "20546:5:18"
																}
															]
														},
														{
															"nativeSrc": "20570:14:18",
															"nodeType": "YulAssignment",
															"src": "20570:14:18",
															"value": {
																"name": "_base",
																"nativeSrc": "20579:5:18",
																"nodeType": "YulIdentifier",
																"src": "20579:5:18"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "20570:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "20570:4:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20628:677:18",
																"nodeType": "YulBlock",
																"src": "20628:677:18",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "20716:22:18",
																			"nodeType": "YulBlock",
																			"src": "20716:22:18",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "20718:16:18",
																							"nodeType": "YulIdentifier",
																							"src": "20718:16:18"
																						},
																						"nativeSrc": "20718:18:18",
																						"nodeType": "YulFunctionCall",
																						"src": "20718:18:18"
																					},
																					"nativeSrc": "20718:18:18",
																					"nodeType": "YulExpressionStatement",
																					"src": "20718:18:18"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "20694:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "20694:4:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "20704:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "20704:3:18"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "20709:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "20709:4:18"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "20700:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "20700:3:18"
																					},
																					"nativeSrc": "20700:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "20700:14:18"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "20691:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "20691:2:18"
																			},
																			"nativeSrc": "20691:24:18",
																			"nodeType": "YulFunctionCall",
																			"src": "20691:24:18"
																		},
																		"nativeSrc": "20688:50:18",
																		"nodeType": "YulIf",
																		"src": "20688:50:18"
																	},
																	{
																		"body": {
																			"nativeSrc": "20783:419:18",
																			"nodeType": "YulBlock",
																			"src": "20783:419:18",
																			"statements": [
																				{
																					"nativeSrc": "21163:25:18",
																					"nodeType": "YulAssignment",
																					"src": "21163:25:18",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "21176:5:18",
																								"nodeType": "YulIdentifier",
																								"src": "21176:5:18"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "21183:4:18",
																								"nodeType": "YulIdentifier",
																								"src": "21183:4:18"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "21172:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "21172:3:18"
																						},
																						"nativeSrc": "21172:16:18",
																						"nodeType": "YulFunctionCall",
																						"src": "21172:16:18"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "21163:5:18",
																							"nodeType": "YulIdentifier",
																							"src": "21163:5:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "20758:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "20758:8:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20768:1:18",
																					"nodeType": "YulLiteral",
																					"src": "20768:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "20754:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "20754:3:18"
																			},
																			"nativeSrc": "20754:16:18",
																			"nodeType": "YulFunctionCall",
																			"src": "20754:16:18"
																		},
																		"nativeSrc": "20751:451:18",
																		"nodeType": "YulIf",
																		"src": "20751:451:18"
																	},
																	{
																		"nativeSrc": "21215:23:18",
																		"nodeType": "YulAssignment",
																		"src": "21215:23:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "21227:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "21227:4:18"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "21233:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "21233:4:18"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "21223:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "21223:3:18"
																			},
																			"nativeSrc": "21223:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "21223:15:18"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "21215:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "21215:4:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "21251:44:18",
																		"nodeType": "YulAssignment",
																		"src": "21251:44:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "21286:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "21286:8:18"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "21263:22:18",
																				"nodeType": "YulIdentifier",
																				"src": "21263:22:18"
																			},
																			"nativeSrc": "21263:32:18",
																			"nodeType": "YulFunctionCall",
																			"src": "21263:32:18"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "21251:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "21251:8:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "20604:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "20604:8:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20614:1:18",
																		"nodeType": "YulLiteral",
																		"src": "20614:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20601:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "20601:2:18"
																},
																"nativeSrc": "20601:15:18",
																"nodeType": "YulFunctionCall",
																"src": "20601:15:18"
															},
															"nativeSrc": "20593:712:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "20617:2:18",
																"nodeType": "YulBlock",
																"src": "20617:2:18",
																"statements": []
															},
															"pre": {
																"nativeSrc": "20597:3:18",
																"nodeType": "YulBlock",
																"src": "20597:3:18",
																"statements": []
															},
															"src": "20593:712:18"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "20463:848:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "20491:6:18",
														"nodeType": "YulTypedName",
														"src": "20491:6:18",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "20499:5:18",
														"nodeType": "YulTypedName",
														"src": "20499:5:18",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "20506:8:18",
														"nodeType": "YulTypedName",
														"src": "20506:8:18",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "20516:3:18",
														"nodeType": "YulTypedName",
														"src": "20516:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "20524:5:18",
														"nodeType": "YulTypedName",
														"src": "20524:5:18",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "20531:4:18",
														"nodeType": "YulTypedName",
														"src": "20531:4:18",
														"type": ""
													}
												],
												"src": "20463:848:18"
											},
											{
												"body": {
													"nativeSrc": "21377:1013:18",
													"nodeType": "YulBlock",
													"src": "21377:1013:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "21572:20:18",
																"nodeType": "YulBlock",
																"src": "21572:20:18",
																"statements": [
																	{
																		"nativeSrc": "21574:10:18",
																		"nodeType": "YulAssignment",
																		"src": "21574:10:18",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "21583:1:18",
																			"nodeType": "YulLiteral",
																			"src": "21583:1:18",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "21574:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "21574:5:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "21585:5:18",
																		"nodeType": "YulLeave",
																		"src": "21585:5:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "21562:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "21562:8:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21555:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "21555:6:18"
																},
																"nativeSrc": "21555:16:18",
																"nodeType": "YulFunctionCall",
																"src": "21555:16:18"
															},
															"nativeSrc": "21552:40:18",
															"nodeType": "YulIf",
															"src": "21552:40:18"
														},
														{
															"body": {
																"nativeSrc": "21617:20:18",
																"nodeType": "YulBlock",
																"src": "21617:20:18",
																"statements": [
																	{
																		"nativeSrc": "21619:10:18",
																		"nodeType": "YulAssignment",
																		"src": "21619:10:18",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "21628:1:18",
																			"nodeType": "YulLiteral",
																			"src": "21628:1:18",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "21619:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "21619:5:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "21630:5:18",
																		"nodeType": "YulLeave",
																		"src": "21630:5:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "21611:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "21611:4:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21604:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "21604:6:18"
																},
																"nativeSrc": "21604:12:18",
																"nodeType": "YulFunctionCall",
																"src": "21604:12:18"
															},
															"nativeSrc": "21601:36:18",
															"nodeType": "YulIf",
															"src": "21601:36:18"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "21747:20:18",
																		"nodeType": "YulBlock",
																		"src": "21747:20:18",
																		"statements": [
																			{
																				"nativeSrc": "21749:10:18",
																				"nodeType": "YulAssignment",
																				"src": "21749:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "21758:1:18",
																					"nodeType": "YulLiteral",
																					"src": "21758:1:18",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "21749:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "21749:5:18"
																					}
																				]
																			},
																			{
																				"nativeSrc": "21760:5:18",
																				"nodeType": "YulLeave",
																				"src": "21760:5:18"
																			}
																		]
																	},
																	"nativeSrc": "21740:27:18",
																	"nodeType": "YulCase",
																	"src": "21740:27:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21745:1:18",
																		"nodeType": "YulLiteral",
																		"src": "21745:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "21791:176:18",
																		"nodeType": "YulBlock",
																		"src": "21791:176:18",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "21826:22:18",
																					"nodeType": "YulBlock",
																					"src": "21826:22:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "21828:16:18",
																									"nodeType": "YulIdentifier",
																									"src": "21828:16:18"
																								},
																								"nativeSrc": "21828:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "21828:18:18"
																							},
																							"nativeSrc": "21828:18:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "21828:18:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "21811:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "21811:8:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "21821:3:18",
																							"nodeType": "YulLiteral",
																							"src": "21821:3:18",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "21808:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "21808:2:18"
																					},
																					"nativeSrc": "21808:17:18",
																					"nodeType": "YulFunctionCall",
																					"src": "21808:17:18"
																				},
																				"nativeSrc": "21805:43:18",
																				"nodeType": "YulIf",
																				"src": "21805:43:18"
																			},
																			{
																				"nativeSrc": "21861:25:18",
																				"nodeType": "YulAssignment",
																				"src": "21861:25:18",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "21874:1:18",
																							"nodeType": "YulLiteral",
																							"src": "21874:1:18",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "21877:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "21877:8:18"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "21870:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "21870:3:18"
																					},
																					"nativeSrc": "21870:16:18",
																					"nodeType": "YulFunctionCall",
																					"src": "21870:16:18"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "21861:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "21861:5:18"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "21917:22:18",
																					"nodeType": "YulBlock",
																					"src": "21917:22:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "21919:16:18",
																									"nodeType": "YulIdentifier",
																									"src": "21919:16:18"
																								},
																								"nativeSrc": "21919:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "21919:18:18"
																							},
																							"nativeSrc": "21919:18:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "21919:18:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "21905:5:18",
																							"nodeType": "YulIdentifier",
																							"src": "21905:5:18"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "21912:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "21912:3:18"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "21902:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "21902:2:18"
																					},
																					"nativeSrc": "21902:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "21902:14:18"
																				},
																				"nativeSrc": "21899:40:18",
																				"nodeType": "YulIf",
																				"src": "21899:40:18"
																			},
																			{
																				"nativeSrc": "21952:5:18",
																				"nodeType": "YulLeave",
																				"src": "21952:5:18"
																			}
																		]
																	},
																	"nativeSrc": "21776:191:18",
																	"nodeType": "YulCase",
																	"src": "21776:191:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21781:1:18",
																		"nodeType": "YulLiteral",
																		"src": "21781:1:18",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "21697:4:18",
																"nodeType": "YulIdentifier",
																"src": "21697:4:18"
															},
															"nativeSrc": "21690:277:18",
															"nodeType": "YulSwitch",
															"src": "21690:277:18"
														},
														{
															"body": {
																"nativeSrc": "22099:123:18",
																"nodeType": "YulBlock",
																"src": "22099:123:18",
																"statements": [
																	{
																		"nativeSrc": "22113:28:18",
																		"nodeType": "YulAssignment",
																		"src": "22113:28:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "22126:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "22126:4:18"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "22132:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "22132:8:18"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "22122:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "22122:3:18"
																			},
																			"nativeSrc": "22122:19:18",
																			"nodeType": "YulFunctionCall",
																			"src": "22122:19:18"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "22113:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "22113:5:18"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "22172:22:18",
																			"nodeType": "YulBlock",
																			"src": "22172:22:18",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "22174:16:18",
																							"nodeType": "YulIdentifier",
																							"src": "22174:16:18"
																						},
																						"nativeSrc": "22174:18:18",
																						"nodeType": "YulFunctionCall",
																						"src": "22174:18:18"
																					},
																					"nativeSrc": "22174:18:18",
																					"nodeType": "YulExpressionStatement",
																					"src": "22174:18:18"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "22160:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "22160:5:18"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "22167:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "22167:3:18"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "22157:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "22157:2:18"
																			},
																			"nativeSrc": "22157:14:18",
																			"nodeType": "YulFunctionCall",
																			"src": "22157:14:18"
																		},
																		"nativeSrc": "22154:40:18",
																		"nodeType": "YulIf",
																		"src": "22154:40:18"
																	},
																	{
																		"nativeSrc": "22207:5:18",
																		"nodeType": "YulLeave",
																		"src": "22207:5:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "22002:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "22002:4:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "22008:2:18",
																						"nodeType": "YulLiteral",
																						"src": "22008:2:18",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "21999:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "21999:2:18"
																				},
																				"nativeSrc": "21999:12:18",
																				"nodeType": "YulFunctionCall",
																				"src": "21999:12:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "22016:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "22016:8:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "22026:2:18",
																						"nodeType": "YulLiteral",
																						"src": "22026:2:18",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "22013:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "22013:2:18"
																				},
																				"nativeSrc": "22013:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "22013:16:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "21995:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21995:3:18"
																		},
																		"nativeSrc": "21995:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21995:35:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "22051:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "22051:4:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "22057:3:18",
																						"nodeType": "YulLiteral",
																						"src": "22057:3:18",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "22048:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "22048:2:18"
																				},
																				"nativeSrc": "22048:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "22048:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "22066:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "22066:8:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "22076:2:18",
																						"nodeType": "YulLiteral",
																						"src": "22076:2:18",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "22063:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "22063:2:18"
																				},
																				"nativeSrc": "22063:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "22063:16:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "22044:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22044:3:18"
																		},
																		"nativeSrc": "22044:36:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22044:36:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "21979:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "21979:2:18"
																},
																"nativeSrc": "21979:111:18",
																"nodeType": "YulFunctionCall",
																"src": "21979:111:18"
															},
															"nativeSrc": "21976:246:18",
															"nodeType": "YulIf",
															"src": "21976:246:18"
														},
														{
															"nativeSrc": "22232:57:18",
															"nodeType": "YulAssignment",
															"src": "22232:57:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22266:1:18",
																		"nodeType": "YulLiteral",
																		"src": "22266:1:18",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "22269:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22269:4:18"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "22275:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "22275:8:18"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "22285:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22285:3:18"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "22247:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "22247:18:18"
																},
																"nativeSrc": "22247:42:18",
																"nodeType": "YulFunctionCall",
																"src": "22247:42:18"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "22232:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "22232:5:18"
																},
																{
																	"name": "base",
																	"nativeSrc": "22239:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "22239:4:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22328:22:18",
																"nodeType": "YulBlock",
																"src": "22328:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "22330:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "22330:16:18"
																			},
																			"nativeSrc": "22330:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "22330:18:18"
																		},
																		"nativeSrc": "22330:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "22330:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "22305:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "22305:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "22316:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "22316:3:18"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "22321:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "22321:4:18"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "22312:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22312:3:18"
																		},
																		"nativeSrc": "22312:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22312:14:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22302:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "22302:2:18"
																},
																"nativeSrc": "22302:25:18",
																"nodeType": "YulFunctionCall",
																"src": "22302:25:18"
															},
															"nativeSrc": "22299:51:18",
															"nodeType": "YulIf",
															"src": "22299:51:18"
														},
														{
															"nativeSrc": "22359:25:18",
															"nodeType": "YulAssignment",
															"src": "22359:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "22372:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "22372:5:18"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "22379:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22379:4:18"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "22368:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22368:3:18"
																},
																"nativeSrc": "22368:16:18",
																"nodeType": "YulFunctionCall",
																"src": "22368:16:18"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "22359:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "22359:5:18"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "21317:1073:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "21347:4:18",
														"nodeType": "YulTypedName",
														"src": "21347:4:18",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "21353:8:18",
														"nodeType": "YulTypedName",
														"src": "21353:8:18",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "21363:3:18",
														"nodeType": "YulTypedName",
														"src": "21363:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "21371:5:18",
														"nodeType": "YulTypedName",
														"src": "21371:5:18",
														"type": ""
													}
												],
												"src": "21317:1073:18"
											},
											{
												"body": {
													"nativeSrc": "22460:217:18",
													"nodeType": "YulBlock",
													"src": "22460:217:18",
													"statements": [
														{
															"nativeSrc": "22470:31:18",
															"nodeType": "YulAssignment",
															"src": "22470:31:18",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "22496:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22496:4:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22478:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "22478:17:18"
																},
																"nativeSrc": "22478:23:18",
																"nodeType": "YulFunctionCall",
																"src": "22478:23:18"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "22470:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "22470:4:18"
																}
															]
														},
														{
															"nativeSrc": "22510:37:18",
															"nodeType": "YulAssignment",
															"src": "22510:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "22538:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "22538:8:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "22522:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "22522:15:18"
																},
																"nativeSrc": "22522:25:18",
																"nodeType": "YulFunctionCall",
																"src": "22522:25:18"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "22510:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "22510:8:18"
																}
															]
														},
														{
															"nativeSrc": "22557:113:18",
															"nodeType": "YulAssignment",
															"src": "22557:113:18",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "22587:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22587:4:18"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "22593:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "22593:8:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22603:66:18",
																		"nodeType": "YulLiteral",
																		"src": "22603:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "22566:20:18",
																	"nodeType": "YulIdentifier",
																	"src": "22566:20:18"
																},
																"nativeSrc": "22566:104:18",
																"nodeType": "YulFunctionCall",
																"src": "22566:104:18"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "22557:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "22557:5:18"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "22396:281:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "22435:4:18",
														"nodeType": "YulTypedName",
														"src": "22435:4:18",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "22441:8:18",
														"nodeType": "YulTypedName",
														"src": "22441:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "22454:5:18",
														"nodeType": "YulTypedName",
														"src": "22454:5:18",
														"type": ""
													}
												],
												"src": "22396:281:18"
											},
											{
												"body": {
													"nativeSrc": "22731:362:18",
													"nodeType": "YulBlock",
													"src": "22731:362:18",
													"statements": [
														{
															"nativeSrc": "22741:25:18",
															"nodeType": "YulAssignment",
															"src": "22741:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22764:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "22764:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22746:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "22746:17:18"
																},
																"nativeSrc": "22746:20:18",
																"nodeType": "YulFunctionCall",
																"src": "22746:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "22741:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "22741:1:18"
																}
															]
														},
														{
															"nativeSrc": "22775:25:18",
															"nodeType": "YulAssignment",
															"src": "22775:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "22798:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "22798:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22780:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "22780:17:18"
																},
																"nativeSrc": "22780:20:18",
																"nodeType": "YulFunctionCall",
																"src": "22780:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "22775:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "22775:1:18"
																}
															]
														},
														{
															"nativeSrc": "22809:28:18",
															"nodeType": "YulVariableDeclaration",
															"src": "22809:28:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22832:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "22832:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "22835:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "22835:1:18"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "22828:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22828:3:18"
																},
																"nativeSrc": "22828:9:18",
																"nodeType": "YulFunctionCall",
																"src": "22828:9:18"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "22813:11:18",
																	"nodeType": "YulTypedName",
																	"src": "22813:11:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22846:41:18",
															"nodeType": "YulAssignment",
															"src": "22846:41:18",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "22875:11:18",
																		"nodeType": "YulIdentifier",
																		"src": "22875:11:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22857:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "22857:17:18"
																},
																"nativeSrc": "22857:30:18",
																"nodeType": "YulFunctionCall",
																"src": "22857:30:18"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "22846:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "22846:7:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23064:22:18",
																"nodeType": "YulBlock",
																"src": "23064:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23066:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "23066:16:18"
																			},
																			"nativeSrc": "23066:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "23066:18:18"
																		},
																		"nativeSrc": "23066:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "23066:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "22997:1:18",
																						"nodeType": "YulIdentifier",
																						"src": "22997:1:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "22990:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "22990:6:18"
																				},
																				"nativeSrc": "22990:9:18",
																				"nodeType": "YulFunctionCall",
																				"src": "22990:9:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "23020:1:18",
																						"nodeType": "YulIdentifier",
																						"src": "23020:1:18"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "23027:7:18",
																								"nodeType": "YulIdentifier",
																								"src": "23027:7:18"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "23036:1:18",
																								"nodeType": "YulIdentifier",
																								"src": "23036:1:18"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "23023:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "23023:3:18"
																						},
																						"nativeSrc": "23023:15:18",
																						"nodeType": "YulFunctionCall",
																						"src": "23023:15:18"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "23017:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "23017:2:18"
																				},
																				"nativeSrc": "23017:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "23017:22:18"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "22970:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "22970:2:18"
																		},
																		"nativeSrc": "22970:83:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22970:83:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "22950:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22950:6:18"
																},
																"nativeSrc": "22950:113:18",
																"nodeType": "YulFunctionCall",
																"src": "22950:113:18"
															},
															"nativeSrc": "22947:139:18",
															"nodeType": "YulIf",
															"src": "22947:139:18"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "22683:410:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "22714:1:18",
														"nodeType": "YulTypedName",
														"src": "22714:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "22717:1:18",
														"nodeType": "YulTypedName",
														"src": "22717:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "22723:7:18",
														"nodeType": "YulTypedName",
														"src": "22723:7:18",
														"type": ""
													}
												],
												"src": "22683:410:18"
											},
											{
												"body": {
													"nativeSrc": "23152:32:18",
													"nodeType": "YulBlock",
													"src": "23152:32:18",
													"statements": [
														{
															"nativeSrc": "23162:16:18",
															"nodeType": "YulAssignment",
															"src": "23162:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "23173:5:18",
																"nodeType": "YulIdentifier",
																"src": "23173:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "23162:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "23162:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "23099:85:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23134:5:18",
														"nodeType": "YulTypedName",
														"src": "23134:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "23144:7:18",
														"nodeType": "YulTypedName",
														"src": "23144:7:18",
														"type": ""
													}
												],
												"src": "23099:85:18"
											},
											{
												"body": {
													"nativeSrc": "23234:57:18",
													"nodeType": "YulBlock",
													"src": "23234:57:18",
													"statements": [
														{
															"nativeSrc": "23244:41:18",
															"nodeType": "YulAssignment",
															"src": "23244:41:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23259:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "23259:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23266:18:18",
																		"nodeType": "YulLiteral",
																		"src": "23266:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "23255:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23255:3:18"
																},
																"nativeSrc": "23255:30:18",
																"nodeType": "YulFunctionCall",
																"src": "23255:30:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "23244:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "23244:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "23190:101:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23216:5:18",
														"nodeType": "YulTypedName",
														"src": "23216:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "23226:7:18",
														"nodeType": "YulTypedName",
														"src": "23226:7:18",
														"type": ""
													}
												],
												"src": "23190:101:18"
											},
											{
												"body": {
													"nativeSrc": "23364:89:18",
													"nodeType": "YulBlock",
													"src": "23364:89:18",
													"statements": [
														{
															"nativeSrc": "23374:73:18",
															"nodeType": "YulAssignment",
															"src": "23374:73:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "23439:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "23439:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "23413:25:18",
																					"nodeType": "YulIdentifier",
																					"src": "23413:25:18"
																				},
																				"nativeSrc": "23413:32:18",
																				"nodeType": "YulFunctionCall",
																				"src": "23413:32:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "23404:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "23404:8:18"
																		},
																		"nativeSrc": "23404:42:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23404:42:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "23387:16:18",
																	"nodeType": "YulIdentifier",
																	"src": "23387:16:18"
																},
																"nativeSrc": "23387:60:18",
																"nodeType": "YulFunctionCall",
																"src": "23387:60:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "23374:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "23374:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "23297:156:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23344:5:18",
														"nodeType": "YulTypedName",
														"src": "23344:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "23354:9:18",
														"nodeType": "YulTypedName",
														"src": "23354:9:18",
														"type": ""
													}
												],
												"src": "23297:156:18"
											},
											{
												"body": {
													"nativeSrc": "23531:73:18",
													"nodeType": "YulBlock",
													"src": "23531:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23548:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "23548:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "23591:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "23591:5:18"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "23553:37:18",
																			"nodeType": "YulIdentifier",
																			"src": "23553:37:18"
																		},
																		"nativeSrc": "23553:44:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23553:44:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23541:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "23541:6:18"
																},
																"nativeSrc": "23541:57:18",
																"nodeType": "YulFunctionCall",
																"src": "23541:57:18"
															},
															"nativeSrc": "23541:57:18",
															"nodeType": "YulExpressionStatement",
															"src": "23541:57:18"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "23459:145:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23519:5:18",
														"nodeType": "YulTypedName",
														"src": "23519:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "23526:3:18",
														"nodeType": "YulTypedName",
														"src": "23526:3:18",
														"type": ""
													}
												],
												"src": "23459:145:18"
											},
											{
												"body": {
													"nativeSrc": "23715:131:18",
													"nodeType": "YulBlock",
													"src": "23715:131:18",
													"statements": [
														{
															"nativeSrc": "23725:26:18",
															"nodeType": "YulAssignment",
															"src": "23725:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23737:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "23737:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23748:2:18",
																		"nodeType": "YulLiteral",
																		"src": "23748:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23733:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23733:3:18"
																},
																"nativeSrc": "23733:18:18",
																"nodeType": "YulFunctionCall",
																"src": "23733:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23725:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "23725:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23812:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "23812:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23825:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "23825:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23836:1:18",
																				"nodeType": "YulLiteral",
																				"src": "23836:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23821:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "23821:3:18"
																		},
																		"nativeSrc": "23821:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23821:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "23761:50:18",
																	"nodeType": "YulIdentifier",
																	"src": "23761:50:18"
																},
																"nativeSrc": "23761:78:18",
																"nodeType": "YulFunctionCall",
																"src": "23761:78:18"
															},
															"nativeSrc": "23761:78:18",
															"nodeType": "YulExpressionStatement",
															"src": "23761:78:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "23610:236:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23687:9:18",
														"nodeType": "YulTypedName",
														"src": "23687:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23699:6:18",
														"nodeType": "YulTypedName",
														"src": "23699:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23710:4:18",
														"nodeType": "YulTypedName",
														"src": "23710:4:18",
														"type": ""
													}
												],
												"src": "23610:236:18"
											},
											{
												"body": {
													"nativeSrc": "24006:288:18",
													"nodeType": "YulBlock",
													"src": "24006:288:18",
													"statements": [
														{
															"nativeSrc": "24016:26:18",
															"nodeType": "YulAssignment",
															"src": "24016:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24028:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "24028:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24039:2:18",
																		"nodeType": "YulLiteral",
																		"src": "24039:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24024:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24024:3:18"
																},
																"nativeSrc": "24024:18:18",
																"nodeType": "YulFunctionCall",
																"src": "24024:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24016:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "24016:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24096:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "24096:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24109:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "24109:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24120:1:18",
																				"nodeType": "YulLiteral",
																				"src": "24120:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24105:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "24105:3:18"
																		},
																		"nativeSrc": "24105:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24105:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24052:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "24052:43:18"
																},
																"nativeSrc": "24052:71:18",
																"nodeType": "YulFunctionCall",
																"src": "24052:71:18"
															},
															"nativeSrc": "24052:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "24052:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24177:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "24177:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24190:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "24190:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24201:2:18",
																				"nodeType": "YulLiteral",
																				"src": "24201:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24186:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "24186:3:18"
																		},
																		"nativeSrc": "24186:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24186:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24133:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "24133:43:18"
																},
																"nativeSrc": "24133:72:18",
																"nodeType": "YulFunctionCall",
																"src": "24133:72:18"
															},
															"nativeSrc": "24133:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "24133:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "24259:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "24259:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24272:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "24272:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24283:2:18",
																				"nodeType": "YulLiteral",
																				"src": "24283:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24268:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "24268:3:18"
																		},
																		"nativeSrc": "24268:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24268:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24215:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "24215:43:18"
																},
																"nativeSrc": "24215:72:18",
																"nodeType": "YulFunctionCall",
																"src": "24215:72:18"
															},
															"nativeSrc": "24215:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "24215:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "23852:442:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23962:9:18",
														"nodeType": "YulTypedName",
														"src": "23962:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23974:6:18",
														"nodeType": "YulTypedName",
														"src": "23974:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23982:6:18",
														"nodeType": "YulTypedName",
														"src": "23982:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23990:6:18",
														"nodeType": "YulTypedName",
														"src": "23990:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24001:4:18",
														"nodeType": "YulTypedName",
														"src": "24001:4:18",
														"type": ""
													}
												],
												"src": "23852:442:18"
											},
											{
												"body": {
													"nativeSrc": "24406:60:18",
													"nodeType": "YulBlock",
													"src": "24406:60:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24428:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "24428:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24436:1:18",
																				"nodeType": "YulLiteral",
																				"src": "24436:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24424:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "24424:3:18"
																		},
																		"nativeSrc": "24424:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24424:14:18"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "24440:18:18",
																		"nodeType": "YulLiteral",
																		"src": "24440:18:18",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24417:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "24417:6:18"
																},
																"nativeSrc": "24417:42:18",
																"nodeType": "YulFunctionCall",
																"src": "24417:42:18"
															},
															"nativeSrc": "24417:42:18",
															"nodeType": "YulExpressionStatement",
															"src": "24417:42:18"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "24300:166:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24398:6:18",
														"nodeType": "YulTypedName",
														"src": "24398:6:18",
														"type": ""
													}
												],
												"src": "24300:166:18"
											},
											{
												"body": {
													"nativeSrc": "24618:220:18",
													"nodeType": "YulBlock",
													"src": "24618:220:18",
													"statements": [
														{
															"nativeSrc": "24628:74:18",
															"nodeType": "YulAssignment",
															"src": "24628:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24694:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "24694:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24699:2:18",
																		"nodeType": "YulLiteral",
																		"src": "24699:2:18",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24635:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "24635:58:18"
																},
																"nativeSrc": "24635:67:18",
																"nodeType": "YulFunctionCall",
																"src": "24635:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24628:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24628:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24800:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "24800:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "24711:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "24711:88:18"
																},
																"nativeSrc": "24711:93:18",
																"nodeType": "YulFunctionCall",
																"src": "24711:93:18"
															},
															"nativeSrc": "24711:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "24711:93:18"
														},
														{
															"nativeSrc": "24813:19:18",
															"nodeType": "YulAssignment",
															"src": "24813:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24824:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "24824:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24829:2:18",
																		"nodeType": "YulLiteral",
																		"src": "24829:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24820:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24820:3:18"
																},
																"nativeSrc": "24820:12:18",
																"nodeType": "YulFunctionCall",
																"src": "24820:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24813:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24813:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24472:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24606:3:18",
														"nodeType": "YulTypedName",
														"src": "24606:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24614:3:18",
														"nodeType": "YulTypedName",
														"src": "24614:3:18",
														"type": ""
													}
												],
												"src": "24472:366:18"
											},
											{
												"body": {
													"nativeSrc": "25015:248:18",
													"nodeType": "YulBlock",
													"src": "25015:248:18",
													"statements": [
														{
															"nativeSrc": "25025:26:18",
															"nodeType": "YulAssignment",
															"src": "25025:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25037:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "25037:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25048:2:18",
																		"nodeType": "YulLiteral",
																		"src": "25048:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25033:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "25033:3:18"
																},
																"nativeSrc": "25033:18:18",
																"nodeType": "YulFunctionCall",
																"src": "25033:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25025:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "25025:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25072:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "25072:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25083:1:18",
																				"nodeType": "YulLiteral",
																				"src": "25083:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25068:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "25068:3:18"
																		},
																		"nativeSrc": "25068:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25068:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25091:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "25091:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25097:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "25097:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25087:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "25087:3:18"
																		},
																		"nativeSrc": "25087:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25087:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25061:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "25061:6:18"
																},
																"nativeSrc": "25061:47:18",
																"nodeType": "YulFunctionCall",
																"src": "25061:47:18"
															},
															"nativeSrc": "25061:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "25061:47:18"
														},
														{
															"nativeSrc": "25117:139:18",
															"nodeType": "YulAssignment",
															"src": "25117:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25251:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "25251:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25125:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "25125:124:18"
																},
																"nativeSrc": "25125:131:18",
																"nodeType": "YulFunctionCall",
																"src": "25125:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25117:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "25117:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24844:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24995:9:18",
														"nodeType": "YulTypedName",
														"src": "24995:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25010:4:18",
														"nodeType": "YulTypedName",
														"src": "25010:4:18",
														"type": ""
													}
												],
												"src": "24844:419:18"
											},
											{
												"body": {
													"nativeSrc": "25423:288:18",
													"nodeType": "YulBlock",
													"src": "25423:288:18",
													"statements": [
														{
															"nativeSrc": "25433:26:18",
															"nodeType": "YulAssignment",
															"src": "25433:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25445:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "25445:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25456:2:18",
																		"nodeType": "YulLiteral",
																		"src": "25456:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25441:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "25441:3:18"
																},
																"nativeSrc": "25441:18:18",
																"nodeType": "YulFunctionCall",
																"src": "25441:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25433:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "25433:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25513:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "25513:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25526:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "25526:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25537:1:18",
																				"nodeType": "YulLiteral",
																				"src": "25537:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25522:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "25522:3:18"
																		},
																		"nativeSrc": "25522:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25522:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25469:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "25469:43:18"
																},
																"nativeSrc": "25469:71:18",
																"nodeType": "YulFunctionCall",
																"src": "25469:71:18"
															},
															"nativeSrc": "25469:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "25469:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25594:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "25594:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25607:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "25607:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25618:2:18",
																				"nodeType": "YulLiteral",
																				"src": "25618:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25603:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "25603:3:18"
																		},
																		"nativeSrc": "25603:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25603:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25550:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "25550:43:18"
																},
																"nativeSrc": "25550:72:18",
																"nodeType": "YulFunctionCall",
																"src": "25550:72:18"
															},
															"nativeSrc": "25550:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "25550:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "25676:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "25676:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25689:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "25689:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25700:2:18",
																				"nodeType": "YulLiteral",
																				"src": "25700:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25685:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "25685:3:18"
																		},
																		"nativeSrc": "25685:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25685:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25632:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "25632:43:18"
																},
																"nativeSrc": "25632:72:18",
																"nodeType": "YulFunctionCall",
																"src": "25632:72:18"
															},
															"nativeSrc": "25632:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "25632:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "25269:442:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25379:9:18",
														"nodeType": "YulTypedName",
														"src": "25379:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "25391:6:18",
														"nodeType": "YulTypedName",
														"src": "25391:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25399:6:18",
														"nodeType": "YulTypedName",
														"src": "25399:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25407:6:18",
														"nodeType": "YulTypedName",
														"src": "25407:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25418:4:18",
														"nodeType": "YulTypedName",
														"src": "25418:4:18",
														"type": ""
													}
												],
												"src": "25269:442:18"
											},
											{
												"body": {
													"nativeSrc": "25823:64:18",
													"nodeType": "YulBlock",
													"src": "25823:64:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25845:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "25845:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25853:1:18",
																				"nodeType": "YulLiteral",
																				"src": "25853:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25841:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "25841:3:18"
																		},
																		"nativeSrc": "25841:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25841:14:18"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "25857:22:18",
																		"nodeType": "YulLiteral",
																		"src": "25857:22:18",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25834:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "25834:6:18"
																},
																"nativeSrc": "25834:46:18",
																"nodeType": "YulFunctionCall",
																"src": "25834:46:18"
															},
															"nativeSrc": "25834:46:18",
															"nodeType": "YulExpressionStatement",
															"src": "25834:46:18"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "25717:170:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25815:6:18",
														"nodeType": "YulTypedName",
														"src": "25815:6:18",
														"type": ""
													}
												],
												"src": "25717:170:18"
											},
											{
												"body": {
													"nativeSrc": "26039:220:18",
													"nodeType": "YulBlock",
													"src": "26039:220:18",
													"statements": [
														{
															"nativeSrc": "26049:74:18",
															"nodeType": "YulAssignment",
															"src": "26049:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26115:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "26115:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26120:2:18",
																		"nodeType": "YulLiteral",
																		"src": "26120:2:18",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26056:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "26056:58:18"
																},
																"nativeSrc": "26056:67:18",
																"nodeType": "YulFunctionCall",
																"src": "26056:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26049:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "26049:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26221:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "26221:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "26132:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "26132:88:18"
																},
																"nativeSrc": "26132:93:18",
																"nodeType": "YulFunctionCall",
																"src": "26132:93:18"
															},
															"nativeSrc": "26132:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "26132:93:18"
														},
														{
															"nativeSrc": "26234:19:18",
															"nodeType": "YulAssignment",
															"src": "26234:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26245:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "26245:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26250:2:18",
																		"nodeType": "YulLiteral",
																		"src": "26250:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26241:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "26241:3:18"
																},
																"nativeSrc": "26241:12:18",
																"nodeType": "YulFunctionCall",
																"src": "26241:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26234:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "26234:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25893:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26027:3:18",
														"nodeType": "YulTypedName",
														"src": "26027:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26035:3:18",
														"nodeType": "YulTypedName",
														"src": "26035:3:18",
														"type": ""
													}
												],
												"src": "25893:366:18"
											},
											{
												"body": {
													"nativeSrc": "26436:248:18",
													"nodeType": "YulBlock",
													"src": "26436:248:18",
													"statements": [
														{
															"nativeSrc": "26446:26:18",
															"nodeType": "YulAssignment",
															"src": "26446:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26458:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "26458:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26469:2:18",
																		"nodeType": "YulLiteral",
																		"src": "26469:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26454:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "26454:3:18"
																},
																"nativeSrc": "26454:18:18",
																"nodeType": "YulFunctionCall",
																"src": "26454:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26446:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "26446:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26493:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "26493:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26504:1:18",
																				"nodeType": "YulLiteral",
																				"src": "26504:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26489:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "26489:3:18"
																		},
																		"nativeSrc": "26489:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26489:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26512:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "26512:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26518:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "26518:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26508:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "26508:3:18"
																		},
																		"nativeSrc": "26508:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26508:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26482:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "26482:6:18"
																},
																"nativeSrc": "26482:47:18",
																"nodeType": "YulFunctionCall",
																"src": "26482:47:18"
															},
															"nativeSrc": "26482:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "26482:47:18"
														},
														{
															"nativeSrc": "26538:139:18",
															"nodeType": "YulAssignment",
															"src": "26538:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26672:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "26672:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26546:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "26546:124:18"
																},
																"nativeSrc": "26546:131:18",
																"nodeType": "YulFunctionCall",
																"src": "26546:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26538:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "26538:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26265:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26416:9:18",
														"nodeType": "YulTypedName",
														"src": "26416:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26431:4:18",
														"nodeType": "YulTypedName",
														"src": "26431:4:18",
														"type": ""
													}
												],
												"src": "26265:419:18"
											},
											{
												"body": {
													"nativeSrc": "26744:87:18",
													"nodeType": "YulBlock",
													"src": "26744:87:18",
													"statements": [
														{
															"nativeSrc": "26754:11:18",
															"nodeType": "YulAssignment",
															"src": "26754:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "26762:3:18",
																"nodeType": "YulIdentifier",
																"src": "26762:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "26754:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "26754:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26782:1:18",
																		"nodeType": "YulLiteral",
																		"src": "26782:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "26785:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "26785:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26775:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "26775:6:18"
																},
																"nativeSrc": "26775:14:18",
																"nodeType": "YulFunctionCall",
																"src": "26775:14:18"
															},
															"nativeSrc": "26775:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "26775:14:18"
														},
														{
															"nativeSrc": "26798:26:18",
															"nodeType": "YulAssignment",
															"src": "26798:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26816:1:18",
																		"nodeType": "YulLiteral",
																		"src": "26816:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26819:4:18",
																		"nodeType": "YulLiteral",
																		"src": "26819:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "26806:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "26806:9:18"
																},
																"nativeSrc": "26806:18:18",
																"nodeType": "YulFunctionCall",
																"src": "26806:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "26798:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "26798:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "26690:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "26731:3:18",
														"nodeType": "YulTypedName",
														"src": "26731:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "26739:4:18",
														"nodeType": "YulTypedName",
														"src": "26739:4:18",
														"type": ""
													}
												],
												"src": "26690:141:18"
											},
											{
												"body": {
													"nativeSrc": "26881:49:18",
													"nodeType": "YulBlock",
													"src": "26881:49:18",
													"statements": [
														{
															"nativeSrc": "26891:33:18",
															"nodeType": "YulAssignment",
															"src": "26891:33:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "26909:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "26909:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26916:2:18",
																				"nodeType": "YulLiteral",
																				"src": "26916:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26905:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "26905:3:18"
																		},
																		"nativeSrc": "26905:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26905:14:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26921:2:18",
																		"nodeType": "YulLiteral",
																		"src": "26921:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "26901:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "26901:3:18"
																},
																"nativeSrc": "26901:23:18",
																"nodeType": "YulFunctionCall",
																"src": "26901:23:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "26891:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "26891:6:18"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "26837:93:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26864:5:18",
														"nodeType": "YulTypedName",
														"src": "26864:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "26874:6:18",
														"nodeType": "YulTypedName",
														"src": "26874:6:18",
														"type": ""
													}
												],
												"src": "26837:93:18"
											},
											{
												"body": {
													"nativeSrc": "26989:54:18",
													"nodeType": "YulBlock",
													"src": "26989:54:18",
													"statements": [
														{
															"nativeSrc": "26999:37:18",
															"nodeType": "YulAssignment",
															"src": "26999:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "27024:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "27024:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "27030:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "27030:5:18"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "27020:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "27020:3:18"
																},
																"nativeSrc": "27020:16:18",
																"nodeType": "YulFunctionCall",
																"src": "27020:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "26999:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "26999:8:18"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "26936:107:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "26964:4:18",
														"nodeType": "YulTypedName",
														"src": "26964:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "26970:5:18",
														"nodeType": "YulTypedName",
														"src": "26970:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "26980:8:18",
														"nodeType": "YulTypedName",
														"src": "26980:8:18",
														"type": ""
													}
												],
												"src": "26936:107:18"
											},
											{
												"body": {
													"nativeSrc": "27125:317:18",
													"nodeType": "YulBlock",
													"src": "27125:317:18",
													"statements": [
														{
															"nativeSrc": "27135:35:18",
															"nodeType": "YulVariableDeclaration",
															"src": "27135:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "27156:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "27156:10:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27168:1:18",
																		"nodeType": "YulLiteral",
																		"src": "27168:1:18",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "27152:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "27152:3:18"
																},
																"nativeSrc": "27152:18:18",
																"nodeType": "YulFunctionCall",
																"src": "27152:18:18"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "27139:9:18",
																	"nodeType": "YulTypedName",
																	"src": "27139:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27179:109:18",
															"nodeType": "YulVariableDeclaration",
															"src": "27179:109:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "27210:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "27210:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27221:66:18",
																		"nodeType": "YulLiteral",
																		"src": "27221:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "27191:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "27191:18:18"
																},
																"nativeSrc": "27191:97:18",
																"nodeType": "YulFunctionCall",
																"src": "27191:97:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "27183:4:18",
																	"nodeType": "YulTypedName",
																	"src": "27183:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27297:51:18",
															"nodeType": "YulAssignment",
															"src": "27297:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "27328:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "27328:9:18"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "27339:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "27339:8:18"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "27309:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "27309:18:18"
																},
																"nativeSrc": "27309:39:18",
																"nodeType": "YulFunctionCall",
																"src": "27309:39:18"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "27297:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "27297:8:18"
																}
															]
														},
														{
															"nativeSrc": "27357:30:18",
															"nodeType": "YulAssignment",
															"src": "27357:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27370:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "27370:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "27381:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "27381:4:18"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "27377:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "27377:3:18"
																		},
																		"nativeSrc": "27377:9:18",
																		"nodeType": "YulFunctionCall",
																		"src": "27377:9:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "27366:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "27366:3:18"
																},
																"nativeSrc": "27366:21:18",
																"nodeType": "YulFunctionCall",
																"src": "27366:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "27357:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "27357:5:18"
																}
															]
														},
														{
															"nativeSrc": "27396:40:18",
															"nodeType": "YulAssignment",
															"src": "27396:40:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27409:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "27409:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "27420:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "27420:8:18"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "27430:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "27430:4:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "27416:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "27416:3:18"
																		},
																		"nativeSrc": "27416:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "27416:19:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "27406:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "27406:2:18"
																},
																"nativeSrc": "27406:30:18",
																"nodeType": "YulFunctionCall",
																"src": "27406:30:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "27396:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "27396:6:18"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "27049:393:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27086:5:18",
														"nodeType": "YulTypedName",
														"src": "27086:5:18",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "27093:10:18",
														"nodeType": "YulTypedName",
														"src": "27093:10:18",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "27105:8:18",
														"nodeType": "YulTypedName",
														"src": "27105:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "27118:6:18",
														"nodeType": "YulTypedName",
														"src": "27118:6:18",
														"type": ""
													}
												],
												"src": "27049:393:18"
											},
											{
												"body": {
													"nativeSrc": "27508:82:18",
													"nodeType": "YulBlock",
													"src": "27508:82:18",
													"statements": [
														{
															"nativeSrc": "27518:66:18",
															"nodeType": "YulAssignment",
															"src": "27518:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "27576:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "27576:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "27558:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "27558:17:18"
																				},
																				"nativeSrc": "27558:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "27558:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "27549:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "27549:8:18"
																		},
																		"nativeSrc": "27549:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "27549:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "27531:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "27531:17:18"
																},
																"nativeSrc": "27531:53:18",
																"nodeType": "YulFunctionCall",
																"src": "27531:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "27518:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "27518:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "27448:142:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27488:5:18",
														"nodeType": "YulTypedName",
														"src": "27488:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "27498:9:18",
														"nodeType": "YulTypedName",
														"src": "27498:9:18",
														"type": ""
													}
												],
												"src": "27448:142:18"
											},
											{
												"body": {
													"nativeSrc": "27643:28:18",
													"nodeType": "YulBlock",
													"src": "27643:28:18",
													"statements": [
														{
															"nativeSrc": "27653:12:18",
															"nodeType": "YulAssignment",
															"src": "27653:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "27660:5:18",
																"nodeType": "YulIdentifier",
																"src": "27660:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "27653:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "27653:3:18"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "27596:75:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27629:5:18",
														"nodeType": "YulTypedName",
														"src": "27629:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "27639:3:18",
														"nodeType": "YulTypedName",
														"src": "27639:3:18",
														"type": ""
													}
												],
												"src": "27596:75:18"
											},
											{
												"body": {
													"nativeSrc": "27753:193:18",
													"nodeType": "YulBlock",
													"src": "27753:193:18",
													"statements": [
														{
															"nativeSrc": "27763:63:18",
															"nodeType": "YulVariableDeclaration",
															"src": "27763:63:18",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "27818:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "27818:7:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "27787:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "27787:30:18"
																},
																"nativeSrc": "27787:39:18",
																"nodeType": "YulFunctionCall",
																"src": "27787:39:18"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "27767:16:18",
																	"nodeType": "YulTypedName",
																	"src": "27767:16:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "27842:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "27842:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "27882:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "27882:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "27876:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "27876:5:18"
																				},
																				"nativeSrc": "27876:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "27876:11:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "27889:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "27889:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "27921:16:18",
																						"nodeType": "YulIdentifier",
																						"src": "27921:16:18"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "27897:23:18",
																					"nodeType": "YulIdentifier",
																					"src": "27897:23:18"
																				},
																				"nativeSrc": "27897:41:18",
																				"nodeType": "YulFunctionCall",
																				"src": "27897:41:18"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "27848:27:18",
																			"nodeType": "YulIdentifier",
																			"src": "27848:27:18"
																		},
																		"nativeSrc": "27848:91:18",
																		"nodeType": "YulFunctionCall",
																		"src": "27848:91:18"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "27835:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "27835:6:18"
																},
																"nativeSrc": "27835:105:18",
																"nodeType": "YulFunctionCall",
																"src": "27835:105:18"
															},
															"nativeSrc": "27835:105:18",
															"nodeType": "YulExpressionStatement",
															"src": "27835:105:18"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "27677:269:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "27730:4:18",
														"nodeType": "YulTypedName",
														"src": "27730:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "27736:6:18",
														"nodeType": "YulTypedName",
														"src": "27736:6:18",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "27744:7:18",
														"nodeType": "YulTypedName",
														"src": "27744:7:18",
														"type": ""
													}
												],
												"src": "27677:269:18"
											},
											{
												"body": {
													"nativeSrc": "28001:24:18",
													"nodeType": "YulBlock",
													"src": "28001:24:18",
													"statements": [
														{
															"nativeSrc": "28011:8:18",
															"nodeType": "YulAssignment",
															"src": "28011:8:18",
															"value": {
																"kind": "number",
																"nativeSrc": "28018:1:18",
																"nodeType": "YulLiteral",
																"src": "28018:1:18",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "28011:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "28011:3:18"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "27952:73:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "27997:3:18",
														"nodeType": "YulTypedName",
														"src": "27997:3:18",
														"type": ""
													}
												],
												"src": "27952:73:18"
											},
											{
												"body": {
													"nativeSrc": "28084:136:18",
													"nodeType": "YulBlock",
													"src": "28084:136:18",
													"statements": [
														{
															"nativeSrc": "28094:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "28094:46:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "28108:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "28108:30:18"
																},
																"nativeSrc": "28108:32:18",
																"nodeType": "YulFunctionCall",
																"src": "28108:32:18"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "28098:6:18",
																	"nodeType": "YulTypedName",
																	"src": "28098:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "28193:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "28193:4:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "28199:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "28199:6:18"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "28207:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "28207:6:18"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "28149:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "28149:43:18"
																},
																"nativeSrc": "28149:65:18",
																"nodeType": "YulFunctionCall",
																"src": "28149:65:18"
															},
															"nativeSrc": "28149:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "28149:65:18"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "28031:189:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "28070:4:18",
														"nodeType": "YulTypedName",
														"src": "28070:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "28076:6:18",
														"nodeType": "YulTypedName",
														"src": "28076:6:18",
														"type": ""
													}
												],
												"src": "28031:189:18"
											},
											{
												"body": {
													"nativeSrc": "28276:136:18",
													"nodeType": "YulBlock",
													"src": "28276:136:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "28343:63:18",
																"nodeType": "YulBlock",
																"src": "28343:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "28387:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "28387:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "28394:1:18",
																					"nodeType": "YulLiteral",
																					"src": "28394:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "28357:29:18",
																				"nodeType": "YulIdentifier",
																				"src": "28357:29:18"
																			},
																			"nativeSrc": "28357:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "28357:39:18"
																		},
																		"nativeSrc": "28357:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "28357:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "28296:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "28296:5:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "28303:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "28303:3:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "28293:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "28293:2:18"
																},
																"nativeSrc": "28293:14:18",
																"nodeType": "YulFunctionCall",
																"src": "28293:14:18"
															},
															"nativeSrc": "28286:120:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "28308:26:18",
																"nodeType": "YulBlock",
																"src": "28308:26:18",
																"statements": [
																	{
																		"nativeSrc": "28310:22:18",
																		"nodeType": "YulAssignment",
																		"src": "28310:22:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "28323:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "28323:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "28330:1:18",
																					"nodeType": "YulLiteral",
																					"src": "28330:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "28319:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "28319:3:18"
																			},
																			"nativeSrc": "28319:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "28319:13:18"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "28310:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "28310:5:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "28290:2:18",
																"nodeType": "YulBlock",
																"src": "28290:2:18",
																"statements": []
															},
															"src": "28286:120:18"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "28226:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "28264:5:18",
														"nodeType": "YulTypedName",
														"src": "28264:5:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "28271:3:18",
														"nodeType": "YulTypedName",
														"src": "28271:3:18",
														"type": ""
													}
												],
												"src": "28226:186:18"
											},
											{
												"body": {
													"nativeSrc": "28497:464:18",
													"nodeType": "YulBlock",
													"src": "28497:464:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "28523:431:18",
																"nodeType": "YulBlock",
																"src": "28523:431:18",
																"statements": [
																	{
																		"nativeSrc": "28537:54:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "28537:54:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "28585:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "28585:5:18"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "28553:31:18",
																				"nodeType": "YulIdentifier",
																				"src": "28553:31:18"
																			},
																			"nativeSrc": "28553:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "28553:38:18"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "28541:8:18",
																				"nodeType": "YulTypedName",
																				"src": "28541:8:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "28604:63:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "28604:63:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "28627:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "28627:8:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "28655:10:18",
																							"nodeType": "YulIdentifier",
																							"src": "28655:10:18"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "28637:17:18",
																						"nodeType": "YulIdentifier",
																						"src": "28637:17:18"
																					},
																					"nativeSrc": "28637:29:18",
																					"nodeType": "YulFunctionCall",
																					"src": "28637:29:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "28623:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "28623:3:18"
																			},
																			"nativeSrc": "28623:44:18",
																			"nodeType": "YulFunctionCall",
																			"src": "28623:44:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "28608:11:18",
																				"nodeType": "YulTypedName",
																				"src": "28608:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "28824:27:18",
																			"nodeType": "YulBlock",
																			"src": "28824:27:18",
																			"statements": [
																				{
																					"nativeSrc": "28826:23:18",
																					"nodeType": "YulAssignment",
																					"src": "28826:23:18",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "28841:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "28841:8:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "28826:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "28826:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "28808:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "28808:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "28820:2:18",
																					"nodeType": "YulLiteral",
																					"src": "28820:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "28805:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "28805:2:18"
																			},
																			"nativeSrc": "28805:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "28805:18:18"
																		},
																		"nativeSrc": "28802:49:18",
																		"nodeType": "YulIf",
																		"src": "28802:49:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "28893:11:18",
																					"nodeType": "YulIdentifier",
																					"src": "28893:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "28910:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "28910:8:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "28938:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "28938:3:18"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "28920:17:18",
																								"nodeType": "YulIdentifier",
																								"src": "28920:17:18"
																							},
																							"nativeSrc": "28920:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "28920:22:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "28906:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "28906:3:18"
																					},
																					"nativeSrc": "28906:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "28906:37:18"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "28864:28:18",
																				"nodeType": "YulIdentifier",
																				"src": "28864:28:18"
																			},
																			"nativeSrc": "28864:80:18",
																			"nodeType": "YulFunctionCall",
																			"src": "28864:80:18"
																		},
																		"nativeSrc": "28864:80:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "28864:80:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "28514:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "28514:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28519:2:18",
																		"nodeType": "YulLiteral",
																		"src": "28519:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "28511:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "28511:2:18"
																},
																"nativeSrc": "28511:11:18",
																"nodeType": "YulFunctionCall",
																"src": "28511:11:18"
															},
															"nativeSrc": "28508:446:18",
															"nodeType": "YulIf",
															"src": "28508:446:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "28418:543:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "28473:5:18",
														"nodeType": "YulTypedName",
														"src": "28473:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "28480:3:18",
														"nodeType": "YulTypedName",
														"src": "28480:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "28485:10:18",
														"nodeType": "YulTypedName",
														"src": "28485:10:18",
														"type": ""
													}
												],
												"src": "28418:543:18"
											},
											{
												"body": {
													"nativeSrc": "29030:54:18",
													"nodeType": "YulBlock",
													"src": "29030:54:18",
													"statements": [
														{
															"nativeSrc": "29040:37:18",
															"nodeType": "YulAssignment",
															"src": "29040:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "29065:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "29065:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "29071:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "29071:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "29061:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "29061:3:18"
																},
																"nativeSrc": "29061:16:18",
																"nodeType": "YulFunctionCall",
																"src": "29061:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "29040:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "29040:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "28967:117:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "29005:4:18",
														"nodeType": "YulTypedName",
														"src": "29005:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "29011:5:18",
														"nodeType": "YulTypedName",
														"src": "29011:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "29021:8:18",
														"nodeType": "YulTypedName",
														"src": "29021:8:18",
														"type": ""
													}
												],
												"src": "28967:117:18"
											},
											{
												"body": {
													"nativeSrc": "29141:118:18",
													"nodeType": "YulBlock",
													"src": "29141:118:18",
													"statements": [
														{
															"nativeSrc": "29151:68:18",
															"nodeType": "YulVariableDeclaration",
															"src": "29151:68:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "29200:1:18",
																						"nodeType": "YulLiteral",
																						"src": "29200:1:18",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "29203:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "29203:5:18"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "29196:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "29196:3:18"
																				},
																				"nativeSrc": "29196:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "29196:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "29215:1:18",
																						"nodeType": "YulLiteral",
																						"src": "29215:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "29211:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "29211:3:18"
																				},
																				"nativeSrc": "29211:6:18",
																				"nodeType": "YulFunctionCall",
																				"src": "29211:6:18"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "29167:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "29167:28:18"
																		},
																		"nativeSrc": "29167:51:18",
																		"nodeType": "YulFunctionCall",
																		"src": "29167:51:18"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "29163:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "29163:3:18"
																},
																"nativeSrc": "29163:56:18",
																"nodeType": "YulFunctionCall",
																"src": "29163:56:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "29155:4:18",
																	"nodeType": "YulTypedName",
																	"src": "29155:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "29228:25:18",
															"nodeType": "YulAssignment",
															"src": "29228:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "29242:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "29242:4:18"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "29248:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "29248:4:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "29238:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "29238:3:18"
																},
																"nativeSrc": "29238:15:18",
																"nodeType": "YulFunctionCall",
																"src": "29238:15:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "29228:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "29228:6:18"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "29090:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "29118:4:18",
														"nodeType": "YulTypedName",
														"src": "29118:4:18",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "29124:5:18",
														"nodeType": "YulTypedName",
														"src": "29124:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "29134:6:18",
														"nodeType": "YulTypedName",
														"src": "29134:6:18",
														"type": ""
													}
												],
												"src": "29090:169:18"
											},
											{
												"body": {
													"nativeSrc": "29345:214:18",
													"nodeType": "YulBlock",
													"src": "29345:214:18",
													"statements": [
														{
															"nativeSrc": "29478:37:18",
															"nodeType": "YulAssignment",
															"src": "29478:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "29505:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "29505:4:18"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "29511:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "29511:3:18"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "29486:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "29486:18:18"
																},
																"nativeSrc": "29486:29:18",
																"nodeType": "YulFunctionCall",
																"src": "29486:29:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "29478:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "29478:4:18"
																}
															]
														},
														{
															"nativeSrc": "29524:29:18",
															"nodeType": "YulAssignment",
															"src": "29524:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "29535:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "29535:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "29545:1:18",
																				"nodeType": "YulLiteral",
																				"src": "29545:1:18",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "29548:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "29548:3:18"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "29541:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "29541:3:18"
																		},
																		"nativeSrc": "29541:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "29541:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "29532:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "29532:2:18"
																},
																"nativeSrc": "29532:21:18",
																"nodeType": "YulFunctionCall",
																"src": "29532:21:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "29524:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "29524:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "29264:295:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "29326:4:18",
														"nodeType": "YulTypedName",
														"src": "29326:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "29332:3:18",
														"nodeType": "YulTypedName",
														"src": "29332:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "29340:4:18",
														"nodeType": "YulTypedName",
														"src": "29340:4:18",
														"type": ""
													}
												],
												"src": "29264:295:18"
											},
											{
												"body": {
													"nativeSrc": "29656:1303:18",
													"nodeType": "YulBlock",
													"src": "29656:1303:18",
													"statements": [
														{
															"nativeSrc": "29667:51:18",
															"nodeType": "YulVariableDeclaration",
															"src": "29667:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "29714:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "29714:3:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "29681:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "29681:32:18"
																},
																"nativeSrc": "29681:37:18",
																"nodeType": "YulFunctionCall",
																"src": "29681:37:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "29671:6:18",
																	"nodeType": "YulTypedName",
																	"src": "29671:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "29803:22:18",
																"nodeType": "YulBlock",
																"src": "29803:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "29805:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "29805:16:18"
																			},
																			"nativeSrc": "29805:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "29805:18:18"
																		},
																		"nativeSrc": "29805:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "29805:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "29775:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "29775:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29783:18:18",
																		"nodeType": "YulLiteral",
																		"src": "29783:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "29772:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "29772:2:18"
																},
																"nativeSrc": "29772:30:18",
																"nodeType": "YulFunctionCall",
																"src": "29772:30:18"
															},
															"nativeSrc": "29769:56:18",
															"nodeType": "YulIf",
															"src": "29769:56:18"
														},
														{
															"nativeSrc": "29835:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "29835:52:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "29881:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "29881:4:18"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "29875:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "29875:5:18"
																		},
																		"nativeSrc": "29875:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "29875:11:18"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "29849:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "29849:25:18"
																},
																"nativeSrc": "29849:38:18",
																"nodeType": "YulFunctionCall",
																"src": "29849:38:18"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "29839:6:18",
																	"nodeType": "YulTypedName",
																	"src": "29839:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "29980:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "29980:4:18"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "29986:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "29986:6:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "29994:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "29994:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "29934:45:18",
																	"nodeType": "YulIdentifier",
																	"src": "29934:45:18"
																},
																"nativeSrc": "29934:67:18",
																"nodeType": "YulFunctionCall",
																"src": "29934:67:18"
															},
															"nativeSrc": "29934:67:18",
															"nodeType": "YulExpressionStatement",
															"src": "29934:67:18"
														},
														{
															"nativeSrc": "30011:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "30011:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "30028:1:18",
																"nodeType": "YulLiteral",
																"src": "30028:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "30015:9:18",
																	"nodeType": "YulTypedName",
																	"src": "30015:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "30039:17:18",
															"nodeType": "YulAssignment",
															"src": "30039:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "30052:4:18",
																"nodeType": "YulLiteral",
																"src": "30052:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "30039:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "30039:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "30103:611:18",
																		"nodeType": "YulBlock",
																		"src": "30103:611:18",
																		"statements": [
																			{
																				"nativeSrc": "30117:37:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "30117:37:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "30136:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "30136:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "30148:4:18",
																									"nodeType": "YulLiteral",
																									"src": "30148:4:18",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "30144:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "30144:3:18"
																							},
																							"nativeSrc": "30144:9:18",
																							"nodeType": "YulFunctionCall",
																							"src": "30144:9:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "30132:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "30132:3:18"
																					},
																					"nativeSrc": "30132:22:18",
																					"nodeType": "YulFunctionCall",
																					"src": "30132:22:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "30121:7:18",
																						"nodeType": "YulTypedName",
																						"src": "30121:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "30168:51:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "30168:51:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "30214:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "30214:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "30182:31:18",
																						"nodeType": "YulIdentifier",
																						"src": "30182:31:18"
																					},
																					"nativeSrc": "30182:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "30182:37:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "30172:6:18",
																						"nodeType": "YulTypedName",
																						"src": "30172:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "30232:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "30232:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "30241:1:18",
																					"nodeType": "YulLiteral",
																					"src": "30241:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "30236:1:18",
																						"nodeType": "YulTypedName",
																						"src": "30236:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "30300:163:18",
																					"nodeType": "YulBlock",
																					"src": "30300:163:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "30325:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "30325:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "30343:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "30343:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "30348:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "30348:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "30339:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "30339:3:18"
																												},
																												"nativeSrc": "30339:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "30339:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "30333:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "30333:5:18"
																										},
																										"nativeSrc": "30333:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "30333:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "30318:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "30318:6:18"
																								},
																								"nativeSrc": "30318:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "30318:42:18"
																							},
																							"nativeSrc": "30318:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "30318:42:18"
																						},
																						{
																							"nativeSrc": "30377:24:18",
																							"nodeType": "YulAssignment",
																							"src": "30377:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "30391:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "30391:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "30399:1:18",
																										"nodeType": "YulLiteral",
																										"src": "30399:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "30387:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "30387:3:18"
																								},
																								"nativeSrc": "30387:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "30387:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "30377:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "30377:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "30418:31:18",
																							"nodeType": "YulAssignment",
																							"src": "30418:31:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "30435:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "30435:9:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "30446:2:18",
																										"nodeType": "YulLiteral",
																										"src": "30446:2:18",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "30431:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "30431:3:18"
																								},
																								"nativeSrc": "30431:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "30431:18:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "30418:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "30418:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "30266:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "30266:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "30269:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "30269:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "30263:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "30263:2:18"
																					},
																					"nativeSrc": "30263:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "30263:14:18"
																				},
																				"nativeSrc": "30255:208:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "30278:21:18",
																					"nodeType": "YulBlock",
																					"src": "30278:21:18",
																					"statements": [
																						{
																							"nativeSrc": "30280:17:18",
																							"nodeType": "YulAssignment",
																							"src": "30280:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "30289:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "30289:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "30292:4:18",
																										"nodeType": "YulLiteral",
																										"src": "30292:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "30285:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "30285:3:18"
																								},
																								"nativeSrc": "30285:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "30285:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "30280:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "30280:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "30259:3:18",
																					"nodeType": "YulBlock",
																					"src": "30259:3:18",
																					"statements": []
																				},
																				"src": "30255:208:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "30499:156:18",
																					"nodeType": "YulBlock",
																					"src": "30499:156:18",
																					"statements": [
																						{
																							"nativeSrc": "30517:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "30517:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "30544:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "30544:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "30549:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "30549:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "30540:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "30540:3:18"
																										},
																										"nativeSrc": "30540:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "30540:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "30534:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "30534:5:18"
																								},
																								"nativeSrc": "30534:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "30534:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "30521:9:18",
																									"nodeType": "YulTypedName",
																									"src": "30521:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "30584:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "30584:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "30611:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "30611:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "30626:6:18",
																														"nodeType": "YulIdentifier",
																														"src": "30626:6:18"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "30634:4:18",
																														"nodeType": "YulLiteral",
																														"src": "30634:4:18",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "30622:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "30622:3:18"
																												},
																												"nativeSrc": "30622:17:18",
																												"nodeType": "YulFunctionCall",
																												"src": "30622:17:18"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "30592:18:18",
																											"nodeType": "YulIdentifier",
																											"src": "30592:18:18"
																										},
																										"nativeSrc": "30592:48:18",
																										"nodeType": "YulFunctionCall",
																										"src": "30592:48:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "30577:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "30577:6:18"
																								},
																								"nativeSrc": "30577:64:18",
																								"nodeType": "YulFunctionCall",
																								"src": "30577:64:18"
																							},
																							"nativeSrc": "30577:64:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "30577:64:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "30482:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "30482:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "30491:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "30491:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "30479:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "30479:2:18"
																					},
																					"nativeSrc": "30479:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "30479:19:18"
																				},
																				"nativeSrc": "30476:179:18",
																				"nodeType": "YulIf",
																				"src": "30476:179:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "30675:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "30675:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "30689:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "30689:6:18"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "30697:1:18",
																											"nodeType": "YulLiteral",
																											"src": "30697:1:18",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "30685:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "30685:3:18"
																									},
																									"nativeSrc": "30685:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "30685:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "30701:1:18",
																									"nodeType": "YulLiteral",
																									"src": "30701:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "30681:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "30681:3:18"
																							},
																							"nativeSrc": "30681:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "30681:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "30668:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "30668:6:18"
																					},
																					"nativeSrc": "30668:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "30668:36:18"
																				},
																				"nativeSrc": "30668:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "30668:36:18"
																			}
																		]
																	},
																	"nativeSrc": "30096:618:18",
																	"nodeType": "YulCase",
																	"src": "30096:618:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "30101:1:18",
																		"nodeType": "YulLiteral",
																		"src": "30101:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "30731:222:18",
																		"nodeType": "YulBlock",
																		"src": "30731:222:18",
																		"statements": [
																			{
																				"nativeSrc": "30745:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "30745:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "30758:1:18",
																					"nodeType": "YulLiteral",
																					"src": "30758:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "30749:5:18",
																						"nodeType": "YulTypedName",
																						"src": "30749:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "30782:67:18",
																					"nodeType": "YulBlock",
																					"src": "30782:67:18",
																					"statements": [
																						{
																							"nativeSrc": "30800:35:18",
																							"nodeType": "YulAssignment",
																							"src": "30800:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "30819:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "30819:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "30824:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "30824:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "30815:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "30815:3:18"
																										},
																										"nativeSrc": "30815:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "30815:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "30809:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "30809:5:18"
																								},
																								"nativeSrc": "30809:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "30809:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "30800:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "30800:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "30775:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "30775:6:18"
																				},
																				"nativeSrc": "30772:77:18",
																				"nodeType": "YulIf",
																				"src": "30772:77:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "30869:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "30869:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "30928:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "30928:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "30935:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "30935:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "30875:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "30875:52:18"
																							},
																							"nativeSrc": "30875:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "30875:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "30862:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "30862:6:18"
																					},
																					"nativeSrc": "30862:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "30862:81:18"
																				},
																				"nativeSrc": "30862:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "30862:81:18"
																			}
																		]
																	},
																	"nativeSrc": "30723:230:18",
																	"nodeType": "YulCase",
																	"src": "30723:230:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "30076:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "30076:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30084:2:18",
																		"nodeType": "YulLiteral",
																		"src": "30084:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "30073:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "30073:2:18"
																},
																"nativeSrc": "30073:14:18",
																"nodeType": "YulFunctionCall",
																"src": "30073:14:18"
															},
															"nativeSrc": "30066:887:18",
															"nodeType": "YulSwitch",
															"src": "30066:887:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "29564:1395:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "29645:4:18",
														"nodeType": "YulTypedName",
														"src": "29645:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "29651:3:18",
														"nodeType": "YulTypedName",
														"src": "29651:3:18",
														"type": ""
													}
												],
												"src": "29564:1395:18"
											},
											{
												"body": {
													"nativeSrc": "30993:152:18",
													"nodeType": "YulBlock",
													"src": "30993:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31010:1:18",
																		"nodeType": "YulLiteral",
																		"src": "31010:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31013:77:18",
																		"nodeType": "YulLiteral",
																		"src": "31013:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31003:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "31003:6:18"
																},
																"nativeSrc": "31003:88:18",
																"nodeType": "YulFunctionCall",
																"src": "31003:88:18"
															},
															"nativeSrc": "31003:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "31003:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31107:1:18",
																		"nodeType": "YulLiteral",
																		"src": "31107:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31110:4:18",
																		"nodeType": "YulLiteral",
																		"src": "31110:4:18",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31100:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "31100:6:18"
																},
																"nativeSrc": "31100:15:18",
																"nodeType": "YulFunctionCall",
																"src": "31100:15:18"
															},
															"nativeSrc": "31100:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "31100:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31131:1:18",
																		"nodeType": "YulLiteral",
																		"src": "31131:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31134:4:18",
																		"nodeType": "YulLiteral",
																		"src": "31134:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "31124:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "31124:6:18"
																},
																"nativeSrc": "31124:15:18",
																"nodeType": "YulFunctionCall",
																"src": "31124:15:18"
															},
															"nativeSrc": "31124:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "31124:15:18"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "30965:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "30965:180:18"
											},
											{
												"body": {
													"nativeSrc": "31193:143:18",
													"nodeType": "YulBlock",
													"src": "31193:143:18",
													"statements": [
														{
															"nativeSrc": "31203:25:18",
															"nodeType": "YulAssignment",
															"src": "31203:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "31226:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "31226:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "31208:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "31208:17:18"
																},
																"nativeSrc": "31208:20:18",
																"nodeType": "YulFunctionCall",
																"src": "31208:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "31203:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "31203:1:18"
																}
															]
														},
														{
															"nativeSrc": "31237:25:18",
															"nodeType": "YulAssignment",
															"src": "31237:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "31260:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "31260:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "31242:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "31242:17:18"
																},
																"nativeSrc": "31242:20:18",
																"nodeType": "YulFunctionCall",
																"src": "31242:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "31237:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "31237:1:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "31284:22:18",
																"nodeType": "YulBlock",
																"src": "31284:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "31286:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "31286:16:18"
																			},
																			"nativeSrc": "31286:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "31286:18:18"
																		},
																		"nativeSrc": "31286:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "31286:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "31281:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "31281:1:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "31274:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "31274:6:18"
																},
																"nativeSrc": "31274:9:18",
																"nodeType": "YulFunctionCall",
																"src": "31274:9:18"
															},
															"nativeSrc": "31271:35:18",
															"nodeType": "YulIf",
															"src": "31271:35:18"
														},
														{
															"nativeSrc": "31316:14:18",
															"nodeType": "YulAssignment",
															"src": "31316:14:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "31325:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "31325:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "31328:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "31328:1:18"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "31321:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "31321:3:18"
																},
																"nativeSrc": "31321:9:18",
																"nodeType": "YulFunctionCall",
																"src": "31321:9:18"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "31316:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "31316:1:18"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "31151:185:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "31182:1:18",
														"nodeType": "YulTypedName",
														"src": "31182:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "31185:1:18",
														"nodeType": "YulTypedName",
														"src": "31185:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "31191:1:18",
														"nodeType": "YulTypedName",
														"src": "31191:1:18",
														"type": ""
													}
												],
												"src": "31151:185:18"
											},
											{
												"body": {
													"nativeSrc": "31400:40:18",
													"nodeType": "YulBlock",
													"src": "31400:40:18",
													"statements": [
														{
															"nativeSrc": "31411:22:18",
															"nodeType": "YulAssignment",
															"src": "31411:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "31427:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "31427:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "31421:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "31421:5:18"
																},
																"nativeSrc": "31421:12:18",
																"nodeType": "YulFunctionCall",
																"src": "31421:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "31411:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "31411:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "31342:98:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31383:5:18",
														"nodeType": "YulTypedName",
														"src": "31383:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "31393:6:18",
														"nodeType": "YulTypedName",
														"src": "31393:6:18",
														"type": ""
													}
												],
												"src": "31342:98:18"
											},
											{
												"body": {
													"nativeSrc": "31559:34:18",
													"nodeType": "YulBlock",
													"src": "31559:34:18",
													"statements": [
														{
															"nativeSrc": "31569:18:18",
															"nodeType": "YulAssignment",
															"src": "31569:18:18",
															"value": {
																"name": "pos",
																"nativeSrc": "31584:3:18",
																"nodeType": "YulIdentifier",
																"src": "31584:3:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "31569:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "31569:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "31446:147:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "31531:3:18",
														"nodeType": "YulTypedName",
														"src": "31531:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "31536:6:18",
														"nodeType": "YulTypedName",
														"src": "31536:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "31547:11:18",
														"nodeType": "YulTypedName",
														"src": "31547:11:18",
														"type": ""
													}
												],
												"src": "31446:147:18"
											},
											{
												"body": {
													"nativeSrc": "31707:278:18",
													"nodeType": "YulBlock",
													"src": "31707:278:18",
													"statements": [
														{
															"nativeSrc": "31717:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "31717:52:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "31763:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "31763:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "31731:31:18",
																	"nodeType": "YulIdentifier",
																	"src": "31731:31:18"
																},
																"nativeSrc": "31731:38:18",
																"nodeType": "YulFunctionCall",
																"src": "31731:38:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "31721:6:18",
																	"nodeType": "YulTypedName",
																	"src": "31721:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "31778:95:18",
															"nodeType": "YulAssignment",
															"src": "31778:95:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31861:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "31861:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "31866:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "31866:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "31785:75:18",
																	"nodeType": "YulIdentifier",
																	"src": "31785:75:18"
																},
																"nativeSrc": "31785:88:18",
																"nodeType": "YulFunctionCall",
																"src": "31785:88:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "31778:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "31778:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "31921:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "31921:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31928:4:18",
																				"nodeType": "YulLiteral",
																				"src": "31928:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31917:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "31917:3:18"
																		},
																		"nativeSrc": "31917:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "31917:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "31935:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "31935:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "31940:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "31940:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "31882:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "31882:34:18"
																},
																"nativeSrc": "31882:65:18",
																"nodeType": "YulFunctionCall",
																"src": "31882:65:18"
															},
															"nativeSrc": "31882:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "31882:65:18"
														},
														{
															"nativeSrc": "31956:23:18",
															"nodeType": "YulAssignment",
															"src": "31956:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31967:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "31967:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "31972:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "31972:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31963:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "31963:3:18"
																},
																"nativeSrc": "31963:16:18",
																"nodeType": "YulFunctionCall",
																"src": "31963:16:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "31956:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "31956:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "31599:386:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31688:5:18",
														"nodeType": "YulTypedName",
														"src": "31688:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "31695:3:18",
														"nodeType": "YulTypedName",
														"src": "31695:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "31703:3:18",
														"nodeType": "YulTypedName",
														"src": "31703:3:18",
														"type": ""
													}
												],
												"src": "31599:386:18"
											},
											{
												"body": {
													"nativeSrc": "32125:137:18",
													"nodeType": "YulBlock",
													"src": "32125:137:18",
													"statements": [
														{
															"nativeSrc": "32136:100:18",
															"nodeType": "YulAssignment",
															"src": "32136:100:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "32223:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "32223:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "32232:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "32232:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "32143:79:18",
																	"nodeType": "YulIdentifier",
																	"src": "32143:79:18"
																},
																"nativeSrc": "32143:93:18",
																"nodeType": "YulFunctionCall",
																"src": "32143:93:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "32136:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "32136:3:18"
																}
															]
														},
														{
															"nativeSrc": "32246:10:18",
															"nodeType": "YulAssignment",
															"src": "32246:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "32253:3:18",
																"nodeType": "YulIdentifier",
																"src": "32253:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "32246:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "32246:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "31991:271:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "32104:3:18",
														"nodeType": "YulTypedName",
														"src": "32104:3:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "32110:6:18",
														"nodeType": "YulTypedName",
														"src": "32110:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "32121:3:18",
														"nodeType": "YulTypedName",
														"src": "32121:3:18",
														"type": ""
													}
												],
												"src": "31991:271:18"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    // struct SocialToken.TokenMechanics\n    function abi_decode_t_struct$_TokenMechanics_$2769_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xc0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xc0)\n\n        {\n            // minSentimentScore\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // minEngagementRate\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // minTweetCount\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // rewardBaseAmount\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // penaltyBaseAmount\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // cooldownPeriod\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_TokenMechanics_$2769_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_TokenMechanics_$2769_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISocialMetricsOracle_$2742_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ISocialMetricsOracle_$2742_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISocialMetricsOracle_$2742_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISocialMetricsOracle_$2742__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISocialMetricsOracle_$2742_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_struct$_TokenMechanics_$2769_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 288) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_struct$_TokenMechanics_$2769_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct SocialToken.TokenMechanics -> struct SocialToken.TokenMechanics\n    function abi_encode_t_struct$_TokenMechanics_$2769_memory_ptr_to_t_struct$_TokenMechanics_$2769_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // minSentimentScore\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // minEngagementRate\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // minTweetCount\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // rewardBaseAmount\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // penaltyBaseAmount\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // cooldownPeriod\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_TokenMechanics_$2769_memory_ptr__to_t_struct$_TokenMechanics_$2769_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_struct$_TokenMechanics_$2769_memory_ptr_to_t_struct$_TokenMechanics_$2769_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct ISocialMetricsOracle.SocialMetrics\n    function abi_decode_t_struct$_SocialMetrics_$2730_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x80) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x80)\n\n        {\n            // tweetCount\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // sentimentScore\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // engagementRate\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // timestamp\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_SocialMetrics_$2730_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_SocialMetrics_$2730_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"468": [
									{
										"length": 32,
										"start": 5465
									},
									{
										"length": 32,
										"start": 5550
									},
									{
										"length": 32,
										"start": 5992
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061019b575f3560e01c8063715018a6116100eb578063a9059cbb11610089578063b88a802f11610063578063b88a802f1461054e578063d8ad523114610564578063dd62ed3e146105a0578063f2fde38b146105dc5761019b565b8063a9059cbb146104c0578063ad3cb1cc146104fc578063af9dcc2c146105265761019b565b80638da5cb5b116100c55780638da5cb5b1461042c57806395d89b41146104565780639e24f23614610480578063a7892c11146104aa5761019b565b8063715018a6146103d657806378f3c4b6146103ec5780638456cb59146104165761019b565b8063313ce567116101585780634f1ef286116101325780634f1ef2861461032a57806352d1902d146103465780635c975abb1461037057806370a082311461039a5761019b565b8063313ce567146102bb57806338b42785146102e55780633f4ba83a146103145761019b565b806306fdde031461019f578063095ea7b3146101c95780630b5940361461020557806318160ddd1461022d5780631cb44dfc1461025757806323b872dd1461027f575b5f80fd5b3480156101aa575f80fd5b506101b3610604565b6040516101c091906126be565b60405180910390f35b3480156101d4575f80fd5b506101ef60048036038101906101ea919061277c565b6106a2565b6040516101fc91906127d4565b60405180910390f35b348015610210575f80fd5b5061022b60048036038101906102269190612906565b6106c4565b005b348015610238575f80fd5b50610241610746565b60405161024e9190612940565b60405180910390f35b348015610262575f80fd5b5061027d60048036038101906102789190612959565b61075d565b005b34801561028a575f80fd5b506102a560048036038101906102a09190612984565b610850565b6040516102b291906127d4565b60405180910390f35b3480156102c6575f80fd5b506102cf61087e565b6040516102dc91906129ef565b60405180910390f35b3480156102f0575f80fd5b506102f9610886565b60405161030b96959493929190612a08565b60405180910390f35b34801561031f575f80fd5b506103286108af565b005b610344600480360381019061033f9190612b1b565b6108c1565b005b348015610351575f80fd5b5061035a6108e0565b6040516103679190612b8d565b60405180910390f35b34801561037b575f80fd5b50610384610911565b60405161039191906127d4565b60405180910390f35b3480156103a5575f80fd5b506103c060048036038101906103bb9190612959565b610925565b6040516103cd9190612940565b60405180910390f35b3480156103e1575f80fd5b506103ea610978565b005b3480156103f7575f80fd5b5061040061098b565b60405161040d9190612c01565b60405180910390f35b348015610421575f80fd5b5061042a6109b0565b005b348015610437575f80fd5b506104406109c2565b60405161044d9190612c29565b60405180910390f35b348015610461575f80fd5b5061046a6109f7565b60405161047791906126be565b60405180910390f35b34801561048b575f80fd5b50610494610a95565b6040516104a19190612940565b60405180910390f35b3480156104b5575f80fd5b506104be610a9b565b005b3480156104cb575f80fd5b506104e660048036038101906104e1919061277c565b610ce5565b6040516104f391906127d4565b60405180910390f35b348015610507575f80fd5b50610510610d07565b60405161051d91906126be565b60405180910390f35b348015610531575f80fd5b5061054c60048036038101906105479190612ce0565b610d40565b005b348015610559575f80fd5b50610562610fee565b005b34801561056f575f80fd5b5061058a60048036038101906105859190612959565b611185565b6040516105979190612940565b60405180910390f35b3480156105ab575f80fd5b506105c660048036038101906105c19190612d7d565b61119a565b6040516105d39190612940565b60405180910390f35b3480156105e7575f80fd5b5061060260048036038101906105fd9190612959565b61122a565b005b60605f61060f6112ae565b905080600301805461062090612de8565b80601f016020809104026020016040519081016040528092919081815260200182805461064c90612de8565b80156106975780601f1061066e57610100808354040283529160200191610697565b820191905f5260205f20905b81548152906001019060200180831161067a57829003601f168201915b505050505091505090565b5f806106ac6112d5565b90506106b98185856112dc565b600191505092915050565b6106cc6112ee565b8060335f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015560a082015181600501559050507f367b6b00685ae263e44e2231e399d2e112eac1979516a9e0e1069d7cd4ac3a2d8160405161073b9190612ea0565b60405180910390a150565b5f806107506112ae565b9050806002015491505090565b6107656112ee565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107ca576040517f5521068100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060325f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f3df77beb5db05fcdd70a30fc8adf3f83f9501b68579455adbd100b818094039460405160405180910390a250565b5f8061085a6112d5565b9050610867858285611375565b610872858585611407565b60019150509392505050565b5f6012905090565b6033805f0154908060010154908060020154908060030154908060040154908060050154905086565b6108b76112ee565b6108bf6114f7565b565b6108c9611557565b6108d28261163d565b6108dc8282611648565b5050565b5f6108e9611766565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f805f9054906101000a900460ff16905090565b5f8061092f6112ae565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b6109806112ee565b6109895f6117ed565b565b60325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109b86112ee565b6109c06118be565b565b5f806109cc61191f565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f610a026112ae565b9050806004018054610a1390612de8565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3f90612de8565b8015610a8a5780601f10610a6157610100808354040283529160200191610a8a565b820191905f5260205f20905b815481529060010190602001808311610a6d57829003601f168201915b505050505091505090565b60395481565b610aa3611946565b603360050154603954610ab69190612ee6565b421015610aef576040517f4a448f3700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663395924dc6040518163ffffffff1660e01b8152600401608060405180830381865afa158015610b5a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b7e9190612fa2565b9050610e10816060015142610b939190612fcd565b1115610bcb576040517f7428474c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b603360020154815f01511015610c0d576040517fda2029d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60335f0154816020015110158015610c2e5750603360010154816040015110155b15610c4157610c3c81611990565b610c4b565b610c4a81611a07565b5b4260398190555060325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166309c22c5d6040518163ffffffff1660e01b81526004016020604051808303815f875af1158015610cbd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ce1919061302a565b5050565b5f80610cef6112d5565b9050610cfc818585611407565b600191505092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b5f610d49611a7e565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610d915750825b90505f60018367ffffffffffffffff16148015610dc457505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610dd2575080155b15610e09576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610e56576001855f0160086101000a81548160ff0219169083151502179055505b610e608989611aa5565b610e6933611abb565b610e71611acf565b610e79611ae1565b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603610ede576040517f5521068100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8660325f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560335f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050155905050610f8933610f6a61087e565b600a610f769190613184565b620f4240610f8491906131ce565b611aeb565b8315610fe3575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610fda919061325b565b60405180910390a15b505050505050505050565b610ff6611946565b603360050154603a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546110449190612ee6565b42101561107d576040517f2bc08a7300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663395924dc6040518163ffffffff1660e01b8152600401608060405180830381865afa1580156110e8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061110c9190612fa2565b90505f61112a8260200151836040015161112533610925565b611b6a565b90505f8111156111815761113e3382611aeb565b42603a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5050565b603a602052805f5260405f205f915090505481565b5f806111a46112ae565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b6112326112ee565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016112999190612c29565b60405180910390fd5b6112ab816117ed565b50565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b6112e98383836001611c0e565b505050565b6112f66112d5565b73ffffffffffffffffffffffffffffffffffffffff166113146109c2565b73ffffffffffffffffffffffffffffffffffffffff1614611373576113376112d5565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161136a9190612c29565b60405180910390fd5b565b5f611380848461119a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461140157818110156113f2578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016113e993929190613274565b60405180910390fd5b61140084848484035f611c0e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611477575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161146e9190612c29565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114e7575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016114de9190612c29565b60405180910390fd5b6114f2838383611deb565b505050565b6114ff61201a565b5f805f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6115406112d5565b60405161154d9190612c29565b60405180910390a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061160457507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166115eb612063565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561163b576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6116456112ee565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156116b057506040513d601f19601f820116820180604052508101906116ad919061302a565b60015b6116f157816040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016116e89190612c29565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b811461175757806040517faa1d49a400000000000000000000000000000000000000000000000000000000815260040161174e9190612b8d565b60405180910390fd5b61176183836120b6565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146117eb576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f6117f661191f565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b6118c6611946565b60015f806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119086112d5565b6040516119159190612c29565b60405180910390a1565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b61194e610911565b1561198e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611985906132f3565b60405180910390fd5b565b5f6119ab826020015183604001516119a6610746565b611b6a565b90505f811115611a03576119bf3082612128565b7fda04004d58812f3e164f58e498158acca1b0054d975fce0e3bafdf56f2e254ba81836020015184604001516040516119fa93929190613311565b60405180910390a15b5050565b5f611a2282602001518360400151611a1d610746565b6121a7565b90505f811115611a7a57611a363082611aeb565b7f0958e73d0165cd8413c567ddcfecfbdfb06498a561de5cd56849c2b463f66cdf8183602001518460400151604051611a7193929190613311565b60405180910390a15b5050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611aad612270565b611ab782826122b0565b5050565b611ac3612270565b611acc816122ec565b50565b611ad7612270565b611adf612370565b565b611ae9612270565b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b5b575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611b529190612c29565b60405180910390fd5b611b665f8383611deb565b5050565b5f80611b8360335f01548661239290919063ffffffff16565b90505f611b9e6033600101548661239290919063ffffffff16565b9050611c036064611bf5612710611be788611bd987611bcb8a6033600301546123a790919063ffffffff16565b6123a790919063ffffffff16565b6123a790919063ffffffff16565b6123bc90919063ffffffff16565b6123bc90919063ffffffff16565b925050509392505050565b5f611c176112ae565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611c89575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611c809190612c29565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611cf9575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611cf09190612c29565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115611de4578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611ddb9190612940565b60405180910390a35b5050505050565b5f611df46112ae565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611e485781816002015f828254611e3c9190612ee6565b92505081905550611f1a565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015611ed3578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611eca93929190613274565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611f635781816002015f8282540392505081905550611faf565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161200c9190612940565b60405180910390a350505050565b612022610911565b612061576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161205890613390565b60405180910390fd5b565b5f61208f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6123d1565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6120bf826123da565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f8151111561211b5761211582826124a3565b50612124565b612123612523565b5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612198575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161218f9190612c29565b60405180910390fd5b6121a3825f83611deb565b5050565b5f808460335f0154116121ba575f6121d2565b6121d18560335f015461239290919063ffffffff16565b5b90505f84603360010154116121e7575f612200565b6121ff8560336001015461239290919063ffffffff16565b5b905061226560646122576127106122498861223b8761222d8a6033600401546123a790919063ffffffff16565b6123a790919063ffffffff16565b6123a790919063ffffffff16565b6123bc90919063ffffffff16565b6123bc90919063ffffffff16565b925050509392505050565b61227861255f565b6122ae576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6122b8612270565b5f6122c16112ae565b9050828160030190816122d49190613542565b50818160040190816122e69190613542565b50505050565b6122f4612270565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612364575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161235b9190612c29565b60405180910390fd5b61236d816117ed565b50565b612378612270565b5f805f6101000a81548160ff021916908315150217905550565b5f818361239f9190612fcd565b905092915050565b5f81836123b491906131ce565b905092915050565b5f81836123c9919061363e565b905092915050565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361243557806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161242c9190612c29565b60405180910390fd5b806124617f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6123d1565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff16846040516124cc91906136b2565b5f60405180830381855af49150503d805f8114612504576040519150601f19603f3d011682016040523d82523d5f602084013e612509565b606091505b509150915061251985838361257d565b9250505092915050565b5f34111561255d576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f612568611a7e565b5f0160089054906101000a900460ff16905090565b6060826125925761258d8261260a565b612602565b5f82511480156125b857505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156125fa57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016125f19190612c29565b60405180910390fd5b819050612603565b5b9392505050565b5f8151111561261c5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6126908261264e565b61269a8185612658565b93506126aa818560208601612668565b6126b381612676565b840191505092915050565b5f6020820190508181035f8301526126d68184612686565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f612718826126ef565b9050919050565b6127288161270e565b8114612732575f80fd5b50565b5f813590506127438161271f565b92915050565b5f819050919050565b61275b81612749565b8114612765575f80fd5b50565b5f8135905061277681612752565b92915050565b5f8060408385031215612792576127916126e7565b5b5f61279f85828601612735565b92505060206127b085828601612768565b9150509250929050565b5f8115159050919050565b6127ce816127ba565b82525050565b5f6020820190506127e75f8301846127c5565b92915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61282782612676565b810181811067ffffffffffffffff82111715612846576128456127f1565b5b80604052505050565b5f6128586126de565b9050612864828261281e565b919050565b5f60c0828403121561287e5761287d6127ed565b5b61288860c061284f565b90505f61289784828501612768565b5f8301525060206128aa84828501612768565b60208301525060406128be84828501612768565b60408301525060606128d284828501612768565b60608301525060806128e684828501612768565b60808301525060a06128fa84828501612768565b60a08301525092915050565b5f60c0828403121561291b5761291a6126e7565b5b5f61292884828501612869565b91505092915050565b61293a81612749565b82525050565b5f6020820190506129535f830184612931565b92915050565b5f6020828403121561296e5761296d6126e7565b5b5f61297b84828501612735565b91505092915050565b5f805f6060848603121561299b5761299a6126e7565b5b5f6129a886828701612735565b93505060206129b986828701612735565b92505060406129ca86828701612768565b9150509250925092565b5f60ff82169050919050565b6129e9816129d4565b82525050565b5f602082019050612a025f8301846129e0565b92915050565b5f60c082019050612a1b5f830189612931565b612a286020830188612931565b612a356040830187612931565b612a426060830186612931565b612a4f6080830185612931565b612a5c60a0830184612931565b979650505050505050565b5f80fd5b5f80fd5b5f67ffffffffffffffff821115612a8957612a886127f1565b5b612a9282612676565b9050602081019050919050565b828183375f83830152505050565b5f612abf612aba84612a6f565b61284f565b905082815260208101848484011115612adb57612ada612a6b565b5b612ae6848285612a9f565b509392505050565b5f82601f830112612b0257612b01612a67565b5b8135612b12848260208601612aad565b91505092915050565b5f8060408385031215612b3157612b306126e7565b5b5f612b3e85828601612735565b925050602083013567ffffffffffffffff811115612b5f57612b5e6126eb565b5b612b6b85828601612aee565b9150509250929050565b5f819050919050565b612b8781612b75565b82525050565b5f602082019050612ba05f830184612b7e565b92915050565b5f819050919050565b5f612bc9612bc4612bbf846126ef565b612ba6565b6126ef565b9050919050565b5f612bda82612baf565b9050919050565b5f612beb82612bd0565b9050919050565b612bfb81612be1565b82525050565b5f602082019050612c145f830184612bf2565b92915050565b612c238161270e565b82525050565b5f602082019050612c3c5f830184612c1a565b92915050565b5f67ffffffffffffffff821115612c5c57612c5b6127f1565b5b612c6582612676565b9050602081019050919050565b5f612c84612c7f84612c42565b61284f565b905082815260208101848484011115612ca057612c9f612a6b565b5b612cab848285612a9f565b509392505050565b5f82601f830112612cc757612cc6612a67565b5b8135612cd7848260208601612c72565b91505092915050565b5f805f806101208587031215612cf957612cf86126e7565b5b5f85013567ffffffffffffffff811115612d1657612d156126eb565b5b612d2287828801612cb3565b945050602085013567ffffffffffffffff811115612d4357612d426126eb565b5b612d4f87828801612cb3565b9350506040612d6087828801612735565b9250506060612d7187828801612869565b91505092959194509250565b5f8060408385031215612d9357612d926126e7565b5b5f612da085828601612735565b9250506020612db185828601612735565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612dff57607f821691505b602082108103612e1257612e11612dbb565b5b50919050565b612e2181612749565b82525050565b60c082015f820151612e3b5f850182612e18565b506020820151612e4e6020850182612e18565b506040820151612e616040850182612e18565b506060820151612e746060850182612e18565b506080820151612e876080850182612e18565b5060a0820151612e9a60a0850182612e18565b50505050565b5f60c082019050612eb35f830184612e27565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612ef082612749565b9150612efb83612749565b9250828201905080821115612f1357612f12612eb9565b5b92915050565b5f81519050612f2781612752565b92915050565b5f60808284031215612f4257612f416127ed565b5b612f4c608061284f565b90505f612f5b84828501612f19565b5f830152506020612f6e84828501612f19565b6020830152506040612f8284828501612f19565b6040830152506060612f9684828501612f19565b60608301525092915050565b5f60808284031215612fb757612fb66126e7565b5b5f612fc484828501612f2d565b91505092915050565b5f612fd782612749565b9150612fe283612749565b9250828203905081811115612ffa57612ff9612eb9565b5b92915050565b61300981612b75565b8114613013575f80fd5b50565b5f8151905061302481613000565b92915050565b5f6020828403121561303f5761303e6126e7565b5b5f61304c84828501613016565b91505092915050565b5f8160011c9050919050565b5f808291508390505b60018511156130aa5780860481111561308657613085612eb9565b5b60018516156130955780820291505b80810290506130a385613055565b945061306a565b94509492505050565b5f826130c2576001905061317d565b816130cf575f905061317d565b81600181146130e557600281146130ef5761311e565b600191505061317d565b60ff84111561310157613100612eb9565b5b8360020a91508482111561311857613117612eb9565b5b5061317d565b5060208310610133831016604e8410600b84101617156131535782820a90508381111561314e5761314d612eb9565b5b61317d565b6131608484846001613061565b9250905081840481111561317757613176612eb9565b5b81810290505b9392505050565b5f61318e82612749565b9150613199836129d4565b92506131c67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846130b3565b905092915050565b5f6131d882612749565b91506131e383612749565b92508282026131f181612749565b9150828204841483151761320857613207612eb9565b5b5092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f61324561324061323b8461320f565b612ba6565b613218565b9050919050565b6132558161322b565b82525050565b5f60208201905061326e5f83018461324c565b92915050565b5f6060820190506132875f830186612c1a565b6132946020830185612931565b6132a16040830184612931565b949350505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6132dd601083612658565b91506132e8826132a9565b602082019050919050565b5f6020820190508181035f83015261330a816132d1565b9050919050565b5f6060820190506133245f830186612931565b6133316020830185612931565b61333e6040830184612931565b949350505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f61337a601483612658565b915061338582613346565b602082019050919050565b5f6020820190508181035f8301526133a78161336e565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261340a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826133cf565b61341486836133cf565b95508019841693508086168417925050509392505050565b5f61344661344161343c84612749565b612ba6565b612749565b9050919050565b5f819050919050565b61345f8361342c565b61347361346b8261344d565b8484546133db565b825550505050565b5f90565b61348761347b565b613492818484613456565b505050565b5b818110156134b5576134aa5f8261347f565b600181019050613498565b5050565b601f8211156134fa576134cb816133ae565b6134d4846133c0565b810160208510156134e3578190505b6134f76134ef856133c0565b830182613497565b50505b505050565b5f82821c905092915050565b5f61351a5f19846008026134ff565b1980831691505092915050565b5f613532838361350b565b9150826002028217905092915050565b61354b8261264e565b67ffffffffffffffff811115613564576135636127f1565b5b61356e8254612de8565b6135798282856134b9565b5f60209050601f8311600181146135aa575f8415613598578287015190505b6135a28582613527565b865550613609565b601f1984166135b8866133ae565b5f5b828110156135df578489015182556001820191506020850194506020810190506135ba565b868310156135fc57848901516135f8601f89168261350b565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61364882612749565b915061365383612749565b92508261366357613662613611565b5b828204905092915050565b5f81519050919050565b5f81905092915050565b5f61368c8261366e565b6136968185613678565b93506136a6818560208601612668565b80840191505092915050565b5f6136bd8284613682565b91508190509291505056fea26469706673582212203406afcfbef0cc43887d8e4bdcf1a33f1a2c81e6f089e3f0f05a18f9b7b0174b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xEB JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xB88A802F GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0xD8AD5231 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5DC JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0xAF9DCC2C EQ PUSH2 0x526 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x9E24F236 EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0xA7892C11 EQ PUSH2 0x4AA JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x78F3C4B6 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x416 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x158 JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x132 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x39A JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x38B42785 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x314 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xB594036 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x1CB44DFC EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x27F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B3 PUSH2 0x604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x26BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x27D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x2906 JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x746 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x2959 JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x2984 JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x27D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH2 0x87E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x29EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH2 0x886 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x8AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x2B1B JUMP JUMPDEST PUSH2 0x8C1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x384 PUSH2 0x911 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x27D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x2959 JUMP JUMPDEST PUSH2 0x925 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EA PUSH2 0x978 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x400 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x2C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x42A PUSH2 0x9B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x440 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x461 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x46A PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x26BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x494 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BE PUSH2 0xA9B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x27D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x510 PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x26BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x2CE0 JUMP JUMPDEST PUSH2 0xD40 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x559 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x562 PUSH2 0xFEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x58A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x585 SWAP2 SWAP1 PUSH2 0x2959 JUMP JUMPDEST PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x2D7D JUMP JUMPDEST PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x602 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x2959 JUMP JUMPDEST PUSH2 0x122A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x60F PUSH2 0x12AE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x620 SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x64C SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x697 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x66E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x697 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x67A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6AC PUSH2 0x12D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x6B9 DUP2 DUP6 DUP6 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6CC PUSH2 0x12EE JUMP JUMPDEST DUP1 PUSH1 0x33 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE SWAP1 POP POP PUSH32 0x367B6B00685AE263E44E2231E399D2E112EAC1979516A9E0E1069D7CD4AC3A2D DUP2 PUSH1 0x40 MLOAD PUSH2 0x73B SWAP2 SWAP1 PUSH2 0x2EA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x750 PUSH2 0x12AE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x765 PUSH2 0x12EE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x5521068100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x32 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3DF77BEB5DB05FCDD70A30FC8ADF3F83F9501B68579455ADBD100B8180940394 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x85A PUSH2 0x12D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x867 DUP6 DUP3 DUP6 PUSH2 0x1375 JUMP JUMPDEST PUSH2 0x872 DUP6 DUP6 DUP6 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x33 DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0x8B7 PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x8BF PUSH2 0x14F7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8C9 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x8D2 DUP3 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x8DC DUP3 DUP3 PUSH2 0x1648 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8E9 PUSH2 0x1766 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x92F PUSH2 0x12AE JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x980 PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x989 PUSH0 PUSH2 0x17ED JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x9B8 PUSH2 0x12EE JUMP JUMPDEST PUSH2 0x9C0 PUSH2 0x18BE JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9CC PUSH2 0x191F JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xA02 PUSH2 0x12AE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xA13 SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA3F SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA8A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA61 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA8A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA6D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x39 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAA3 PUSH2 0x1946 JUMP JUMPDEST PUSH1 0x33 PUSH1 0x5 ADD SLOAD PUSH1 0x39 SLOAD PUSH2 0xAB6 SWAP2 SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x4A448F3700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x395924DC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB5A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB7E SWAP2 SWAP1 PUSH2 0x2FA2 JUMP JUMPDEST SWAP1 POP PUSH2 0xE10 DUP2 PUSH1 0x60 ADD MLOAD TIMESTAMP PUSH2 0xB93 SWAP2 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST GT ISZERO PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x7428474C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x2 ADD SLOAD DUP2 PUSH0 ADD MLOAD LT ISZERO PUSH2 0xC0D JUMPI PUSH1 0x40 MLOAD PUSH32 0xDA2029D100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 PUSH0 ADD SLOAD DUP2 PUSH1 0x20 ADD MLOAD LT ISZERO DUP1 ISZERO PUSH2 0xC2E JUMPI POP PUSH1 0x33 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0x40 ADD MLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0xC41 JUMPI PUSH2 0xC3C DUP2 PUSH2 0x1990 JUMP JUMPDEST PUSH2 0xC4B JUMP JUMPDEST PUSH2 0xC4A DUP2 PUSH2 0x1A07 JUMP JUMPDEST JUMPDEST TIMESTAMP PUSH1 0x39 DUP2 SWAP1 SSTORE POP PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9C22C5D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x302A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCEF PUSH2 0x12D5 JUMP JUMPDEST SWAP1 POP PUSH2 0xCFC DUP2 DUP6 DUP6 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xD49 PUSH2 0x1A7E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xD91 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xDC4 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xDD2 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xE09 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xE56 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xE60 DUP10 DUP10 PUSH2 0x1AA5 JUMP JUMPDEST PUSH2 0xE69 CALLER PUSH2 0x1ABB JUMP JUMPDEST PUSH2 0xE71 PUSH2 0x1ACF JUMP JUMPDEST PUSH2 0xE79 PUSH2 0x1AE1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x5521068100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x32 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x33 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE SWAP1 POP POP PUSH2 0xF89 CALLER PUSH2 0xF6A PUSH2 0x87E JUMP JUMPDEST PUSH1 0xA PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x3184 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0xF84 SWAP2 SWAP1 PUSH2 0x31CE JUMP JUMPDEST PUSH2 0x1AEB JUMP JUMPDEST DUP4 ISZERO PUSH2 0xFE3 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xFDA SWAP2 SWAP1 PUSH2 0x325B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFF6 PUSH2 0x1946 JUMP JUMPDEST PUSH1 0x33 PUSH1 0x5 ADD SLOAD PUSH1 0x3A PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1044 SWAP2 SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x107D JUMPI PUSH1 0x40 MLOAD PUSH32 0x2BC08A7300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x395924DC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x110C SWAP2 SWAP1 PUSH2 0x2FA2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x112A DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x1125 CALLER PUSH2 0x925 JUMP JUMPDEST PUSH2 0x1B6A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x1181 JUMPI PUSH2 0x113E CALLER DUP3 PUSH2 0x1AEB JUMP JUMPDEST TIMESTAMP PUSH1 0x3A PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3A PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x11A4 PUSH2 0x12AE JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1232 PUSH2 0x12EE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1299 SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12AB DUP2 PUSH2 0x17ED JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12E9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1C0E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x12F6 PUSH2 0x12D5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1314 PUSH2 0x9C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1373 JUMPI PUSH2 0x1337 PUSH2 0x12D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136A SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1380 DUP5 DUP5 PUSH2 0x119A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1401 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x13F2 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1400 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1C0E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1477 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146E SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14E7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DE SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14F2 DUP4 DUP4 DUP4 PUSH2 0x1DEB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x14FF PUSH2 0x201A JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1540 PUSH2 0x12D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154D SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1604 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15EB PUSH2 0x2063 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x163B JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1645 PUSH2 0x12EE JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x16B0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16AD SWAP2 SWAP1 PUSH2 0x302A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x16F1 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E8 SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x1757 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x174E SWAP2 SWAP1 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1761 DUP4 DUP4 PUSH2 0x20B6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17EB JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x17F6 PUSH2 0x191F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x18C6 PUSH2 0x1946 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1908 PUSH2 0x12D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1915 SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x194E PUSH2 0x911 JUMP JUMPDEST ISZERO PUSH2 0x198E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1985 SWAP1 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x19AB DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x19A6 PUSH2 0x746 JUMP JUMPDEST PUSH2 0x1B6A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x1A03 JUMPI PUSH2 0x19BF ADDRESS DUP3 PUSH2 0x2128 JUMP JUMPDEST PUSH32 0xDA04004D58812F3E164F58E498158ACCA1B0054D975FCE0E3BAFDF56F2E254BA DUP2 DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x19FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3311 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A22 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x1A1D PUSH2 0x746 JUMP JUMPDEST PUSH2 0x21A7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x1A7A JUMPI PUSH2 0x1A36 ADDRESS DUP3 PUSH2 0x1AEB JUMP JUMPDEST PUSH32 0x958E73D0165CD8413C567DDCFECFBDFB06498A561DE5CD56849C2B463F66CDF DUP2 DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1A71 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3311 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1AAD PUSH2 0x2270 JUMP JUMPDEST PUSH2 0x1AB7 DUP3 DUP3 PUSH2 0x22B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1AC3 PUSH2 0x2270 JUMP JUMPDEST PUSH2 0x1ACC DUP2 PUSH2 0x22EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AD7 PUSH2 0x2270 JUMP JUMPDEST PUSH2 0x1ADF PUSH2 0x2370 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1AE9 PUSH2 0x2270 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B5B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B52 SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B66 PUSH0 DUP4 DUP4 PUSH2 0x1DEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1B83 PUSH1 0x33 PUSH0 ADD SLOAD DUP7 PUSH2 0x2392 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1B9E PUSH1 0x33 PUSH1 0x1 ADD SLOAD DUP7 PUSH2 0x2392 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1C03 PUSH1 0x64 PUSH2 0x1BF5 PUSH2 0x2710 PUSH2 0x1BE7 DUP9 PUSH2 0x1BD9 DUP8 PUSH2 0x1BCB DUP11 PUSH1 0x33 PUSH1 0x3 ADD SLOAD PUSH2 0x23A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23BC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23BC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C17 PUSH2 0x12AE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C89 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C80 SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CF9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF0 SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x1DE4 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1DDB SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DF4 PUSH2 0x12AE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E48 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E3C SWAP2 SWAP1 PUSH2 0x2EE6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F1A JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1ED3 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ECA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F63 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1FAF JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x200C SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x2022 PUSH2 0x911 JUMP JUMPDEST PUSH2 0x2061 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2058 SWAP1 PUSH2 0x3390 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x208F PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x23D1 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20BF DUP3 PUSH2 0x23DA JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x211B JUMPI PUSH2 0x2115 DUP3 DUP3 PUSH2 0x24A3 JUMP JUMPDEST POP PUSH2 0x2124 JUMP JUMPDEST PUSH2 0x2123 PUSH2 0x2523 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2198 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x218F SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21A3 DUP3 PUSH0 DUP4 PUSH2 0x1DEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH1 0x33 PUSH0 ADD SLOAD GT PUSH2 0x21BA JUMPI PUSH0 PUSH2 0x21D2 JUMP JUMPDEST PUSH2 0x21D1 DUP6 PUSH1 0x33 PUSH0 ADD SLOAD PUSH2 0x2392 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH0 DUP5 PUSH1 0x33 PUSH1 0x1 ADD SLOAD GT PUSH2 0x21E7 JUMPI PUSH0 PUSH2 0x2200 JUMP JUMPDEST PUSH2 0x21FF DUP6 PUSH1 0x33 PUSH1 0x1 ADD SLOAD PUSH2 0x2392 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH2 0x2265 PUSH1 0x64 PUSH2 0x2257 PUSH2 0x2710 PUSH2 0x2249 DUP9 PUSH2 0x223B DUP8 PUSH2 0x222D DUP11 PUSH1 0x33 PUSH1 0x4 ADD SLOAD PUSH2 0x23A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23BC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23BC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2278 PUSH2 0x255F JUMP JUMPDEST PUSH2 0x22AE JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x22B8 PUSH2 0x2270 JUMP JUMPDEST PUSH0 PUSH2 0x22C1 PUSH2 0x12AE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x22D4 SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x22E6 SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x22F4 PUSH2 0x2270 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2364 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235B SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x236D DUP2 PUSH2 0x17ED JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2378 PUSH2 0x2270 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x239F SWAP2 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x23B4 SWAP2 SWAP1 PUSH2 0x31CE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x23C9 SWAP2 SWAP1 PUSH2 0x363E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2435 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x242C SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2461 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x23D1 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x24CC SWAP2 SWAP1 PUSH2 0x36B2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2504 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2509 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2519 DUP6 DUP4 DUP4 PUSH2 0x257D JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x255D JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x2568 PUSH2 0x1A7E JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2592 JUMPI PUSH2 0x258D DUP3 PUSH2 0x260A JUMP JUMPDEST PUSH2 0x2602 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x25B8 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x25FA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F1 SWAP2 SWAP1 PUSH2 0x2C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2603 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x261C JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2690 DUP3 PUSH2 0x264E JUMP JUMPDEST PUSH2 0x269A DUP2 DUP6 PUSH2 0x2658 JUMP JUMPDEST SWAP4 POP PUSH2 0x26AA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2668 JUMP JUMPDEST PUSH2 0x26B3 DUP2 PUSH2 0x2676 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26D6 DUP2 DUP5 PUSH2 0x2686 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2718 DUP3 PUSH2 0x26EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2728 DUP2 PUSH2 0x270E JUMP JUMPDEST DUP2 EQ PUSH2 0x2732 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2743 DUP2 PUSH2 0x271F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x275B DUP2 PUSH2 0x2749 JUMP JUMPDEST DUP2 EQ PUSH2 0x2765 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2776 DUP2 PUSH2 0x2752 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2792 JUMPI PUSH2 0x2791 PUSH2 0x26E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x279F DUP6 DUP3 DUP7 ADD PUSH2 0x2735 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27B0 DUP6 DUP3 DUP7 ADD PUSH2 0x2768 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27CE DUP2 PUSH2 0x27BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x27C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2827 DUP3 PUSH2 0x2676 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2846 JUMPI PUSH2 0x2845 PUSH2 0x27F1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2858 PUSH2 0x26DE JUMP JUMPDEST SWAP1 POP PUSH2 0x2864 DUP3 DUP3 PUSH2 0x281E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x287E JUMPI PUSH2 0x287D PUSH2 0x27ED JUMP JUMPDEST JUMPDEST PUSH2 0x2888 PUSH1 0xC0 PUSH2 0x284F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2897 DUP5 DUP3 DUP6 ADD PUSH2 0x2768 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x28AA DUP5 DUP3 DUP6 ADD PUSH2 0x2768 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x28BE DUP5 DUP3 DUP6 ADD PUSH2 0x2768 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x28D2 DUP5 DUP3 DUP6 ADD PUSH2 0x2768 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x28E6 DUP5 DUP3 DUP6 ADD PUSH2 0x2768 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x28FA DUP5 DUP3 DUP6 ADD PUSH2 0x2768 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x291B JUMPI PUSH2 0x291A PUSH2 0x26E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2928 DUP5 DUP3 DUP6 ADD PUSH2 0x2869 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x293A DUP2 PUSH2 0x2749 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2953 PUSH0 DUP4 ADD DUP5 PUSH2 0x2931 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x296E JUMPI PUSH2 0x296D PUSH2 0x26E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x297B DUP5 DUP3 DUP6 ADD PUSH2 0x2735 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x299B JUMPI PUSH2 0x299A PUSH2 0x26E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29A8 DUP7 DUP3 DUP8 ADD PUSH2 0x2735 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x29B9 DUP7 DUP3 DUP8 ADD PUSH2 0x2735 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x29CA DUP7 DUP3 DUP8 ADD PUSH2 0x2768 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29E9 DUP2 PUSH2 0x29D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A02 PUSH0 DUP4 ADD DUP5 PUSH2 0x29E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2A1B PUSH0 DUP4 ADD DUP10 PUSH2 0x2931 JUMP JUMPDEST PUSH2 0x2A28 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2931 JUMP JUMPDEST PUSH2 0x2A35 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2931 JUMP JUMPDEST PUSH2 0x2A42 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2931 JUMP JUMPDEST PUSH2 0x2A4F PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2931 JUMP JUMPDEST PUSH2 0x2A5C PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2931 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A89 JUMPI PUSH2 0x2A88 PUSH2 0x27F1 JUMP JUMPDEST JUMPDEST PUSH2 0x2A92 DUP3 PUSH2 0x2676 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2ABF PUSH2 0x2ABA DUP5 PUSH2 0x2A6F JUMP JUMPDEST PUSH2 0x284F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2ADB JUMPI PUSH2 0x2ADA PUSH2 0x2A6B JUMP JUMPDEST JUMPDEST PUSH2 0x2AE6 DUP5 DUP3 DUP6 PUSH2 0x2A9F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B02 JUMPI PUSH2 0x2B01 PUSH2 0x2A67 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2B12 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2AAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B31 JUMPI PUSH2 0x2B30 PUSH2 0x26E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B3E DUP6 DUP3 DUP7 ADD PUSH2 0x2735 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B5F JUMPI PUSH2 0x2B5E PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x2B6B DUP6 DUP3 DUP7 ADD PUSH2 0x2AEE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B87 DUP2 PUSH2 0x2B75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BA0 PUSH0 DUP4 ADD DUP5 PUSH2 0x2B7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2BC9 PUSH2 0x2BC4 PUSH2 0x2BBF DUP5 PUSH2 0x26EF JUMP JUMPDEST PUSH2 0x2BA6 JUMP JUMPDEST PUSH2 0x26EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2BDA DUP3 PUSH2 0x2BAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2BEB DUP3 PUSH2 0x2BD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BFB DUP2 PUSH2 0x2BE1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C14 PUSH0 DUP4 ADD DUP5 PUSH2 0x2BF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C23 DUP2 PUSH2 0x270E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C3C PUSH0 DUP4 ADD DUP5 PUSH2 0x2C1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C5C JUMPI PUSH2 0x2C5B PUSH2 0x27F1 JUMP JUMPDEST JUMPDEST PUSH2 0x2C65 DUP3 PUSH2 0x2676 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C84 PUSH2 0x2C7F DUP5 PUSH2 0x2C42 JUMP JUMPDEST PUSH2 0x284F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2CA0 JUMPI PUSH2 0x2C9F PUSH2 0x2A6B JUMP JUMPDEST JUMPDEST PUSH2 0x2CAB DUP5 DUP3 DUP6 PUSH2 0x2A9F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2CC7 JUMPI PUSH2 0x2CC6 PUSH2 0x2A67 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2CD7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2C72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x120 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2CF9 JUMPI PUSH2 0x2CF8 PUSH2 0x26E7 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D16 JUMPI PUSH2 0x2D15 PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x2D22 DUP8 DUP3 DUP9 ADD PUSH2 0x2CB3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D43 JUMPI PUSH2 0x2D42 PUSH2 0x26EB JUMP JUMPDEST JUMPDEST PUSH2 0x2D4F DUP8 DUP3 DUP9 ADD PUSH2 0x2CB3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2D60 DUP8 DUP3 DUP9 ADD PUSH2 0x2735 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2D71 DUP8 DUP3 DUP9 ADD PUSH2 0x2869 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D93 JUMPI PUSH2 0x2D92 PUSH2 0x26E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2DA0 DUP6 DUP3 DUP7 ADD PUSH2 0x2735 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DB1 DUP6 DUP3 DUP7 ADD PUSH2 0x2735 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2DFF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2E12 JUMPI PUSH2 0x2E11 PUSH2 0x2DBB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E21 DUP2 PUSH2 0x2749 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x2E3B PUSH0 DUP6 ADD DUP3 PUSH2 0x2E18 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2E4E PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2E18 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2E61 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2E18 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2E74 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2E18 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2E87 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2E18 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2E9A PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2E18 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2EB3 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2EF0 DUP3 PUSH2 0x2749 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EFB DUP4 PUSH2 0x2749 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2F13 JUMPI PUSH2 0x2F12 PUSH2 0x2EB9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F27 DUP2 PUSH2 0x2752 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F42 JUMPI PUSH2 0x2F41 PUSH2 0x27ED JUMP JUMPDEST JUMPDEST PUSH2 0x2F4C PUSH1 0x80 PUSH2 0x284F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2F5B DUP5 DUP3 DUP6 ADD PUSH2 0x2F19 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x2F6E DUP5 DUP3 DUP6 ADD PUSH2 0x2F19 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x2F82 DUP5 DUP3 DUP6 ADD PUSH2 0x2F19 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x2F96 DUP5 DUP3 DUP6 ADD PUSH2 0x2F19 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FB7 JUMPI PUSH2 0x2FB6 PUSH2 0x26E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2FC4 DUP5 DUP3 DUP6 ADD PUSH2 0x2F2D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2FD7 DUP3 PUSH2 0x2749 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FE2 DUP4 PUSH2 0x2749 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2FFA JUMPI PUSH2 0x2FF9 PUSH2 0x2EB9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3009 DUP2 PUSH2 0x2B75 JUMP JUMPDEST DUP2 EQ PUSH2 0x3013 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3024 DUP2 PUSH2 0x3000 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x303F JUMPI PUSH2 0x303E PUSH2 0x26E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x304C DUP5 DUP3 DUP6 ADD PUSH2 0x3016 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x30AA JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x3086 JUMPI PUSH2 0x3085 PUSH2 0x2EB9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x3095 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x30A3 DUP6 PUSH2 0x3055 JUMP JUMPDEST SWAP5 POP PUSH2 0x306A JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x30C2 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x317D JUMP JUMPDEST DUP2 PUSH2 0x30CF JUMPI PUSH0 SWAP1 POP PUSH2 0x317D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x30E5 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x30EF JUMPI PUSH2 0x311E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x317D JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3101 JUMPI PUSH2 0x3100 PUSH2 0x2EB9 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x3118 JUMPI PUSH2 0x3117 PUSH2 0x2EB9 JUMP JUMPDEST JUMPDEST POP PUSH2 0x317D JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x3153 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x314E JUMPI PUSH2 0x314D PUSH2 0x2EB9 JUMP JUMPDEST JUMPDEST PUSH2 0x317D JUMP JUMPDEST PUSH2 0x3160 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x3061 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x3177 JUMPI PUSH2 0x3176 PUSH2 0x2EB9 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x318E DUP3 PUSH2 0x2749 JUMP JUMPDEST SWAP2 POP PUSH2 0x3199 DUP4 PUSH2 0x29D4 JUMP JUMPDEST SWAP3 POP PUSH2 0x31C6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x30B3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31D8 DUP3 PUSH2 0x2749 JUMP JUMPDEST SWAP2 POP PUSH2 0x31E3 DUP4 PUSH2 0x2749 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x31F1 DUP2 PUSH2 0x2749 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3208 JUMPI PUSH2 0x3207 PUSH2 0x2EB9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3245 PUSH2 0x3240 PUSH2 0x323B DUP5 PUSH2 0x320F JUMP JUMPDEST PUSH2 0x2BA6 JUMP JUMPDEST PUSH2 0x3218 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3255 DUP2 PUSH2 0x322B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x326E PUSH0 DUP4 ADD DUP5 PUSH2 0x324C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3287 PUSH0 DUP4 ADD DUP7 PUSH2 0x2C1A JUMP JUMPDEST PUSH2 0x3294 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2931 JUMP JUMPDEST PUSH2 0x32A1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2931 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32DD PUSH1 0x10 DUP4 PUSH2 0x2658 JUMP JUMPDEST SWAP2 POP PUSH2 0x32E8 DUP3 PUSH2 0x32A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x330A DUP2 PUSH2 0x32D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3324 PUSH0 DUP4 ADD DUP7 PUSH2 0x2931 JUMP JUMPDEST PUSH2 0x3331 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2931 JUMP JUMPDEST PUSH2 0x333E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2931 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x337A PUSH1 0x14 DUP4 PUSH2 0x2658 JUMP JUMPDEST SWAP2 POP PUSH2 0x3385 DUP3 PUSH2 0x3346 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x33A7 DUP2 PUSH2 0x336E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x340A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0x3414 DUP7 DUP4 PUSH2 0x33CF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3446 PUSH2 0x3441 PUSH2 0x343C DUP5 PUSH2 0x2749 JUMP JUMPDEST PUSH2 0x2BA6 JUMP JUMPDEST PUSH2 0x2749 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x345F DUP4 PUSH2 0x342C JUMP JUMPDEST PUSH2 0x3473 PUSH2 0x346B DUP3 PUSH2 0x344D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x33DB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3487 PUSH2 0x347B JUMP JUMPDEST PUSH2 0x3492 DUP2 DUP5 DUP5 PUSH2 0x3456 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x34B5 JUMPI PUSH2 0x34AA PUSH0 DUP3 PUSH2 0x347F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3498 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x34FA JUMPI PUSH2 0x34CB DUP2 PUSH2 0x33AE JUMP JUMPDEST PUSH2 0x34D4 DUP5 PUSH2 0x33C0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x34E3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x34F7 PUSH2 0x34EF DUP6 PUSH2 0x33C0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3497 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x351A PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x34FF JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3532 DUP4 DUP4 PUSH2 0x350B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x354B DUP3 PUSH2 0x264E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3564 JUMPI PUSH2 0x3563 PUSH2 0x27F1 JUMP JUMPDEST JUMPDEST PUSH2 0x356E DUP3 SLOAD PUSH2 0x2DE8 JUMP JUMPDEST PUSH2 0x3579 DUP3 DUP3 DUP6 PUSH2 0x34B9 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x35AA JUMPI PUSH0 DUP5 ISZERO PUSH2 0x3598 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x35A2 DUP6 DUP3 PUSH2 0x3527 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3609 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x35B8 DUP7 PUSH2 0x33AE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x35DF JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x35BA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x35FC JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x35F8 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x350B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3648 DUP3 PUSH2 0x2749 JUMP JUMPDEST SWAP2 POP PUSH2 0x3653 DUP4 PUSH2 0x2749 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3663 JUMPI PUSH2 0x3662 PUSH2 0x3611 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x368C DUP3 PUSH2 0x366E JUMP JUMPDEST PUSH2 0x3696 DUP2 DUP6 PUSH2 0x3678 JUMP JUMPDEST SWAP4 POP PUSH2 0x36A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2668 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x36BD DUP3 DUP5 PUSH2 0x3682 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE MOD 0xAF 0xCF 0xBE CREATE 0xCC NUMBER DUP9 PUSH30 0x8E4BDCF1A33F1A2C81E6F089E3F0F05A18F9B7B0174B64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "763:6655:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5210:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7010:166:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3896:152:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6774:230:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5988:244:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3754:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1522:31:17;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;7249:65;;;;;;;;;;;;;:::i;:::-;;4161:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1879:84:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4106:171:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;925:40:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7182:61;;;;;;;;;;;;;:::i;:::-;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2973:148:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1590:34:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2915:992;;;;;;;;;;;;;:::i;:::-;;4472:178:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2299:574:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3913:596;;;;;;;;;;;;;:::i;:::-;;1630:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4708:195:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2716:144:4;2761:13;2786:22;2811:18;:16;:18::i;:::-;2786:43;;2846:1;:7;;2839:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144;:::o;5210:186::-;5283:4;5299:13;5315:12;:10;:12::i;:::-;5299:28;;5337:31;5346:5;5353:7;5362:5;5337:8;:31::i;:::-;5385:4;5378:11;;;5210:186;;;;:::o;7010:166:17:-;2334:13:0;:11;:13::i;:::-;7112:12:17::1;7100:9;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7139:30;7156:12;7139:30;;;;;;:::i;:::-;;;;;;;;7010:166:::0;:::o;3896:152:4:-;3948:7;3967:22;3992:18;:16;:18::i;:::-;3967:43;;4027:1;:14;;;4020:21;;;3896:152;:::o;6774:230:17:-;2334:13:0;:11;:13::i;:::-;6869:1:17::1;6848:23;;:9;:23;;::::0;6844:58:::1;;6880:22;;;;;;;;;;;;;;6844:58;6948:9;6912:12;;:46;;;;;;;;;;;;;;;;;;6987:9;6973:24;;;;;;;;;;;;6774:230:::0;:::o;5988:244:4:-;6075:4;6091:15;6109:12;:10;:12::i;:::-;6091:30;;6131:37;6147:4;6153:7;6162:5;6131:15;:37::i;:::-;6178:26;6188:4;6194:2;6198:5;6178:9;:26::i;:::-;6221:4;6214:11;;;5988:244;;;;;:::o;3754:82::-;3803:5;3827:2;3820:9;;3754:82;:::o;1522:31:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7249:65::-;2334:13:0;:11;:13::i;:::-;7297:10:17::1;:8;:10::i;:::-;7249:65::o:0;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;811:66:9::1;3803:32:2;;3796:39;;3708:134:::0;:::o;1879:84:3:-;1926:4;1949:7;;;;;;;;;;;1942:14;;1879:84;:::o;4106:171:4:-;4171:7;4190:22;4215:18;:16;:18::i;:::-;4190:43;;4250:1;:11;;:20;4262:7;4250:20;;;;;;;;;;;;;;;;4243:27;;;4106:171;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;925:40:17:-;;;;;;;;;;;;;:::o;7182:61::-;2334:13:0;:11;:13::i;:::-;7228:8:17::1;:6;:8::i;:::-;7182:61::o:0;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;2973:148:4:-;3020:13;3045:22;3070:18;:16;:18::i;:::-;3045:43;;3105:1;:9;;3098:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2973:148;:::o;1590:34:17:-;;;;:::o;2915:992::-;1503:19:3;:17;:19::i;:::-;3024:9:17::1;:24;;;3002:19;;:46;;;;:::i;:::-;2984:15;:64;2980:116;;;3070:26;;;;;;;;;;;;;;2980:116;3107:49;3159:12;;;;;;;;;;;:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3107:83;;3279:7;3259;:17;;;3241:15;:35;;;;:::i;:::-;:45;3237:96;;;3308:25;;;;;;;;;;;;;;3237:96;3368:9;:23;;;3347:7;:18;;;:44;3343:94;;;3413:24;;;;;;;;;;;;;;3343:94;3527:9;:27;;;3501:7;:22;;;:53;;:122;;;;;3596:9;:27;;;3570:7;:22;;;:53;;3501:122;3484:268;;;3648:31;3671:7;3648:22;:31::i;:::-;3484:268;;;3710:31;3733:7;3710:22;:31::i;:::-;3484:268;3784:15;3762:19;:37;;;;3865:12;;;;;;;;;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2970:937;2915:992::o:0;4472:178:4:-;4541:4;4557:13;4573:12;:10;:12::i;:::-;4557:28;;4595:27;4605:5;4612:2;4616:5;4595:9;:27::i;:::-;4639:4;4632:11;;;4472:178;;;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;2299:574:17:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;2485:26:17::1;2498:4;2504:6;2485:12;:26::i;:::-;2521;2536:10;2521:14;:26::i;:::-;2557:17;:15;:17::i;:::-;2584:24;:22;:24::i;:::-;2648:1;2623:27;;:13;:27;;::::0;2619:62:::1;;2659:22;;;;;;;;;;;;;;2619:62;2727:13;2691:12;;:50;;;;;;;;;;;;;;;;;;2763:10;2751:9;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2823:43;2829:10;2855;:8;:10::i;:::-;2851:2;:14;;;;:::i;:::-;2841:7;:24;;;;:::i;:::-;2823:5;:43::i;:::-;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;2299:574:17;;;;:::o;3913:596::-;1503:19:3;:17;:19::i;:::-;4021:9:17::1;:24;;;3991:15;:27;4007:10;3991:27;;;;;;;;;;;;;;;;:54;;;;:::i;:::-;3973:15;:72;3969:117;;;4066:20;;;;;;;;;;;;;;3969:117;4097:49;4149:12;;;;;;;;;;;:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4097:83;;4199:20;4222:133;4252:7;:22;;;4288:7;:22;;;4324:21;4334:10;4324:9;:21::i;:::-;4222:16;:133::i;:::-;4199:156;;4385:1;4370:12;:16;4366:137;;;4402:31;4408:10;4420:12;4402:5;:31::i;:::-;4477:15;4447;:27;4463:10;4447:27;;;;;;;;;;;;;;;:45;;;;4366:137;3959:550;;3913:596::o:0;1630:50::-;;;;;;;;;;;;;;;;;:::o;4708:195:4:-;4788:7;4807:22;4832:18;:16;:18::i;:::-;4807:43;;4867:1;:13;;:20;4881:5;4867:20;;;;;;;;;;;;;;;:29;4888:7;4867:29;;;;;;;;;;;;;;;;4860:36;;;4708:195;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1947:153:4:-;1997:22;2064:20;2054:30;;1947:153;:::o;887:96:5:-;940:7;966:10;959:17;;887:96;:::o;10001:128:4:-;10085:37;10094:5;10101:7;10110:5;10117:4;10085:8;:37::i;:::-;10001:128;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;11745:477:4:-;11844:24;11871:25;11881:5;11888:7;11871:9;:25::i;:::-;11844:52;;11930:17;11910:16;:37;11906:310;;11986:5;11967:16;:24;11963:130;;;12045:7;12054:16;12072:5;12018:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11963:130;12134:57;12143:5;12150:7;12178:5;12159:16;:24;12185:5;12134:8;:57::i;:::-;11906:310;11834:388;11745:477;;;:::o;6605:300::-;6704:1;6688:18;;:4;:18;;;6684:86;;6756:1;6729:30;;;;;;;;;;;:::i;:::-;;;;;;;;6684:86;6797:1;6783:16;;:2;:16;;;6779:86;;6851:1;6822:32;;;;;;;;;;;:::i;:::-;;;;;;;;6779:86;6874:24;6882:4;6888:2;6892:5;6874:7;:24::i;:::-;6605:300;;;:::o;2697:117:3:-;1750:16;:14;:16::i;:::-;2765:5:::1;2755:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2785:22;2794:12;:10;:12::i;:::-;2785:22;;;;;;:::i;:::-;;;;;;;;2697:117::o:0;4603:312:2:-;4692:6;4675:23;;4683:4;4675:23;;;:120;;;;4789:6;4753:42;;:32;:30;:32::i;:::-;:42;;;;4675:120;4658:251;;;4869:29;;;;;;;;;;;;;;4658:251;4603:312::o;7350:66:17:-;2334:13:0;:11;:13::i;:::-;7350:66:17;:::o;6057:538:2:-;6174:17;6156:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6152:437;;6560:17;6518:60;;;;;;;;;;;:::i;:::-;;;;;;;;6152:437;811:66:9;6258:32:2;;6250:4;:40;6246:120;;6346:4;6317:34;;;;;;;;;;;:::i;:::-;;;;;;;;6246:120;6379:54;6409:17;6428:4;6379:29;:54::i;:::-;6209:235;6057:538;;:::o;5032:213::-;5115:6;5098:23;;5106:4;5098:23;;;5094:145;;5199:29;;;;;;;;;;;;;;5094:145;5032:213::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;2450:115:3:-;1503:19;:17;:19::i;:::-;2519:4:::1;2509:7;::::0;:14:::1;;;;;;;;;;;;;;;;;;2538:20;2545:12;:10;:12::i;:::-;2538:20;;;;;;:::i;:::-;;;;;;;;2450:115::o:0;1192:159:0:-;1244:24;1313:22;1303:32;;1192:159;:::o;2031:106:3:-;2101:8;:6;:8::i;:::-;2100:9;2092:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2031:106::o;4541:446:17:-;4643:20;4666:125;4696:7;:22;;;4732:7;:22;;;4768:13;:11;:13::i;:::-;4666:16;:125::i;:::-;4643:148;;4821:1;4806:12;:16;4802:179;;;4838:34;4852:4;4859:12;4838:5;:34::i;:::-;4891:79;4909:12;4923:7;:22;;;4947:7;:22;;;4891:79;;;;;;;;:::i;:::-;;;;;;;;4802:179;4633:354;4541:446;:::o;4993:448::-;5095:21;5119:126;5150:7;:22;;;5186:7;:22;;;5222:13;:11;:13::i;:::-;5119:17;:126::i;:::-;5095:150;;5276:1;5260:13;:17;5256:179;;;5293:35;5307:4;5314:13;5293:5;:35::i;:::-;5347:77;5362:13;5377:7;:22;;;5401:7;:22;;;5347:77;;;;;;;;:::i;:::-;;;;;;;;5256:179;5085:356;4993:448;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;2282:147:4:-;6931:20:1;:18;:20::i;:::-;2384:38:4::1;2407:5;2414:7;2384:22;:38::i;:::-;2282:147:::0;;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;1084:97:3:-;6931:20:1;:18;:20::i;:::-;1147:27:3::1;:25;:27::i;:::-;1084:97::o:0;2970:67:2:-;6931:20:1;:18;:20::i;:::-;2970:67:2:o;8733:208:4:-;8822:1;8803:21;;:7;:21;;;8799:91;;8876:1;8847:32;;;;;;;;;;;:::i;:::-;;;;;;;;8799:91;8899:35;8915:1;8919:7;8928:5;8899:7;:35::i;:::-;8733:208;;:::o;5447:593:17:-;5594:7;5613:27;5643:47;5662:9;:27;;;5643:14;:18;;:47;;;;:::i;:::-;5613:77;;5700:28;5731:47;5750:9;:27;;;5731:14;:18;;:47;;;;:::i;:::-;5700:78;;5804:202;6002:3;5804:156;5954:5;5804:132;5925:10;5804:103;5886:20;5804:64;5848:19;5804:9;:26;;;:43;;:64;;;;:::i;:::-;:81;;:103;;;;:::i;:::-;:120;;:132;;;;:::i;:::-;:149;;:156;;;;:::i;:::-;:197;;:202;;;;:::i;:::-;5797:209;;;;5447:593;;;;;:::o;10976:487:4:-;11084:22;11109:18;:16;:18::i;:::-;11084:43;;11158:1;11141:19;;:5;:19;;;11137:89;;11212:1;11183:32;;;;;;;;;;;:::i;:::-;;;;;;;;11137:89;11258:1;11239:21;;:7;:21;;;11235:90;;11311:1;11283:31;;;;;;;;;;;:::i;:::-;;;;;;;;11235:90;11366:5;11334:1;:13;;:20;11348:5;11334:20;;;;;;;;;;;;;;;:29;11355:7;11334:29;;;;;;;;;;;;;;;:37;;;;11385:9;11381:76;;;11431:7;11415:31;;11424:5;11415:31;;;11440:5;11415:31;;;;;;:::i;:::-;;;;;;;;11381:76;11074:389;10976:487;;;;:::o;7220:1170::-;7305:22;7330:18;:16;:18::i;:::-;7305:43;;7378:1;7362:18;;:4;:18;;;7358:546;;7516:5;7498:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7358:546;;;7552:19;7574:1;:11;;:17;7586:4;7574:17;;;;;;;;;;;;;;;;7552:39;;7623:5;7609:11;:19;7605:115;;;7680:4;7686:11;7699:5;7655:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7605:115;7874:5;7860:11;:19;7840:1;:11;;:17;7852:4;7840:17;;;;;;;;;;;;;;;:39;;;;7538:366;7358:546;7932:1;7918:16;;:2;:16;;;7914:429;;8099:5;8081:1;:14;;;:23;;;;;;;;;;;7914:429;;;8313:5;8294:1;:11;;:15;8306:2;8294:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;7914:429;8373:2;8358:25;;8367:4;8358:25;;;8377:5;8358:25;;;;;;:::i;:::-;;;;;;;;7295:1095;7220:1170;;;:::o;2209:106:3:-;2275:8;:6;:8::i;:::-;2267:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2209:106::o;1441:138:9:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;9259:206:4:-;9348:1;9329:21;;:7;:21;;;9325:89;;9400:1;9373:30;;;;;;;;;;;:::i;:::-;;;;;;;;9325:89;9423:35;9431:7;9448:1;9452:5;9423:7;:35::i;:::-;9259:206;;:::o;6046:699:17:-;6194:7;6213:21;6267:14;6237:9;:27;;;:44;:111;;6347:1;6237:111;;;6297:47;6329:14;6297:9;:27;;;:31;;:47;;;;:::i;:::-;6237:111;6213:135;;6358:22;6413:14;6383:9;:27;;;:44;:111;;6493:1;6383:111;;;6443:47;6475:14;6443:9;:27;;;:31;;:47;;;;:::i;:::-;6383:111;6358:136;;6520:191;6707:3;6520:145;6659:5;6520:121;6630:10;6520:92;6597:14;6520:59;6565:13;6520:9;:27;;;:44;;:59;;;;:::i;:::-;:76;;:92;;;;:::i;:::-;:109;;:121;;;;:::i;:::-;:138;;:145;;;;:::i;:::-;:186;;:191;;;;:::i;:::-;6513:198;;;;6046:699;;;;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2435:216:4:-;6931:20:1;:18;:20::i;:::-;2547:22:4::1;2572:18;:16;:18::i;:::-;2547:43;;2610:5;2600:1;:7;;:15;;;;;;:::i;:::-;;2637:7;2625:1;:9;;:19;;;;;;:::i;:::-;;2537:114;2435:216:::0;;:::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;1187:95:3:-;6931:20:1;:18;:20::i;:::-;1270:5:3::1;1260:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;1187:95::o:0;3122:96:16:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;1899:163:15:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:9:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3900:253:13:-;3983:12;4008;4022:23;4049:6;:19;;4069:4;4049:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4007:67;;;;4091:55;4118:6;4126:7;4135:10;4091:26;:55::i;:::-;4084:62;;;;3900:253;;;;:::o;6113:122:9:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;4421:582:13:-;4565:12;4594:7;4589:408;;4617:19;4625:10;4617:7;:19::i;:::-;4589:408;;;4862:1;4841:10;:17;:22;:49;;;;;4889:1;4867:6;:18;;;:23;4841:49;4837:119;;;4934:6;4917:24;;;;;;;;;;;:::i;:::-;;;;;;;;4837:119;4976:10;4969:17;;;;4589:408;4421:582;;;;;;:::o;5543:487::-;5694:1;5674:10;:17;:21;5670:354;;;5871:10;5865:17;5927:15;5914:10;5910:2;5906:19;5899:44;5670:354;5994:19;;;;;;;;;;;;;;7:99:18;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:117::-;3448:1;3445;3438:12;3462:180;3510:77;3507:1;3500:88;3607:4;3604:1;3597:15;3631:4;3628:1;3621:15;3648:281;3731:27;3753:4;3731:27;:::i;:::-;3723:6;3719:40;3861:6;3849:10;3846:22;3825:18;3813:10;3810:34;3807:62;3804:88;;;3872:18;;:::i;:::-;3804:88;3912:10;3908:2;3901:22;3691:238;3648:281;;:::o;3935:129::-;3969:6;3996:20;;:::i;:::-;3986:30;;4025:33;4053:4;4045:6;4025:33;:::i;:::-;3935:129;;;:::o;4234:1297::-;4315:5;4359:4;4347:9;4342:3;4338:19;4334:30;4331:117;;;4367:79;;:::i;:::-;4331:117;4466:21;4482:4;4466:21;:::i;:::-;4457:30;;4559:1;4599:49;4644:3;4635:6;4624:9;4620:22;4599:49;:::i;:::-;4592:4;4585:5;4581:16;4574:75;4497:163;4732:2;4773:49;4818:3;4809:6;4798:9;4794:22;4773:49;:::i;:::-;4766:4;4759:5;4755:16;4748:75;4670:164;4902:2;4943:49;4988:3;4979:6;4968:9;4964:22;4943:49;:::i;:::-;4936:4;4929:5;4925:16;4918:75;4844:160;5075:2;5116:49;5161:3;5152:6;5141:9;5137:22;5116:49;:::i;:::-;5109:4;5102:5;5098:16;5091:75;5014:163;5249:3;5291:49;5336:3;5327:6;5316:9;5312:22;5291:49;:::i;:::-;5284:4;5277:5;5273:16;5266:75;5187:165;5421:3;5463:49;5508:3;5499:6;5488:9;5484:22;5463:49;:::i;:::-;5456:4;5449:5;5445:16;5438:75;5362:162;4234:1297;;;;:::o;5537:394::-;5628:6;5677:3;5665:9;5656:7;5652:23;5648:33;5645:120;;;5684:79;;:::i;:::-;5645:120;5804:1;5829:85;5906:7;5897:6;5886:9;5882:22;5829:85;:::i;:::-;5819:95;;5775:149;5537:394;;;;:::o;5937:118::-;6024:24;6042:5;6024:24;:::i;:::-;6019:3;6012:37;5937:118;;:::o;6061:222::-;6154:4;6192:2;6181:9;6177:18;6169:26;;6205:71;6273:1;6262:9;6258:17;6249:6;6205:71;:::i;:::-;6061:222;;;;:::o;6289:329::-;6348:6;6397:2;6385:9;6376:7;6372:23;6368:32;6365:119;;;6403:79;;:::i;:::-;6365:119;6523:1;6548:53;6593:7;6584:6;6573:9;6569:22;6548:53;:::i;:::-;6538:63;;6494:117;6289:329;;;;:::o;6624:619::-;6701:6;6709;6717;6766:2;6754:9;6745:7;6741:23;6737:32;6734:119;;;6772:79;;:::i;:::-;6734:119;6892:1;6917:53;6962:7;6953:6;6942:9;6938:22;6917:53;:::i;:::-;6907:63;;6863:117;7019:2;7045:53;7090:7;7081:6;7070:9;7066:22;7045:53;:::i;:::-;7035:63;;6990:118;7147:2;7173:53;7218:7;7209:6;7198:9;7194:22;7173:53;:::i;:::-;7163:63;;7118:118;6624:619;;;;;:::o;7249:86::-;7284:7;7324:4;7317:5;7313:16;7302:27;;7249:86;;;:::o;7341:112::-;7424:22;7440:5;7424:22;:::i;:::-;7419:3;7412:35;7341:112;;:::o;7459:214::-;7548:4;7586:2;7575:9;7571:18;7563:26;;7599:67;7663:1;7652:9;7648:17;7639:6;7599:67;:::i;:::-;7459:214;;;;:::o;7679:775::-;7912:4;7950:3;7939:9;7935:19;7927:27;;7964:71;8032:1;8021:9;8017:17;8008:6;7964:71;:::i;:::-;8045:72;8113:2;8102:9;8098:18;8089:6;8045:72;:::i;:::-;8127;8195:2;8184:9;8180:18;8171:6;8127:72;:::i;:::-;8209;8277:2;8266:9;8262:18;8253:6;8209:72;:::i;:::-;8291:73;8359:3;8348:9;8344:19;8335:6;8291:73;:::i;:::-;8374;8442:3;8431:9;8427:19;8418:6;8374:73;:::i;:::-;7679:775;;;;;;;;;:::o;8460:117::-;8569:1;8566;8559:12;8583:117;8692:1;8689;8682:12;8706:307;8767:4;8857:18;8849:6;8846:30;8843:56;;;8879:18;;:::i;:::-;8843:56;8917:29;8939:6;8917:29;:::i;:::-;8909:37;;9001:4;8995;8991:15;8983:23;;8706:307;;;:::o;9019:148::-;9117:6;9112:3;9107;9094:30;9158:1;9149:6;9144:3;9140:16;9133:27;9019:148;;;:::o;9173:423::-;9250:5;9275:65;9291:48;9332:6;9291:48;:::i;:::-;9275:65;:::i;:::-;9266:74;;9363:6;9356:5;9349:21;9401:4;9394:5;9390:16;9439:3;9430:6;9425:3;9421:16;9418:25;9415:112;;;9446:79;;:::i;:::-;9415:112;9536:54;9583:6;9578:3;9573;9536:54;:::i;:::-;9256:340;9173:423;;;;;:::o;9615:338::-;9670:5;9719:3;9712:4;9704:6;9700:17;9696:27;9686:122;;9727:79;;:::i;:::-;9686:122;9844:6;9831:20;9869:78;9943:3;9935:6;9928:4;9920:6;9916:17;9869:78;:::i;:::-;9860:87;;9676:277;9615:338;;;;:::o;9959:652::-;10036:6;10044;10093:2;10081:9;10072:7;10068:23;10064:32;10061:119;;;10099:79;;:::i;:::-;10061:119;10219:1;10244:53;10289:7;10280:6;10269:9;10265:22;10244:53;:::i;:::-;10234:63;;10190:117;10374:2;10363:9;10359:18;10346:32;10405:18;10397:6;10394:30;10391:117;;;10427:79;;:::i;:::-;10391:117;10532:62;10586:7;10577:6;10566:9;10562:22;10532:62;:::i;:::-;10522:72;;10317:287;9959:652;;;;;:::o;10617:77::-;10654:7;10683:5;10672:16;;10617:77;;;:::o;10700:118::-;10787:24;10805:5;10787:24;:::i;:::-;10782:3;10775:37;10700:118;;:::o;10824:222::-;10917:4;10955:2;10944:9;10940:18;10932:26;;10968:71;11036:1;11025:9;11021:17;11012:6;10968:71;:::i;:::-;10824:222;;;;:::o;11052:60::-;11080:3;11101:5;11094:12;;11052:60;;;:::o;11118:142::-;11168:9;11201:53;11219:34;11228:24;11246:5;11228:24;:::i;:::-;11219:34;:::i;:::-;11201:53;:::i;:::-;11188:66;;11118:142;;;:::o;11266:126::-;11316:9;11349:37;11380:5;11349:37;:::i;:::-;11336:50;;11266:126;;;:::o;11398:155::-;11477:9;11510:37;11541:5;11510:37;:::i;:::-;11497:50;;11398:155;;;:::o;11559:189::-;11675:66;11735:5;11675:66;:::i;:::-;11670:3;11663:79;11559:189;;:::o;11754:280::-;11876:4;11914:2;11903:9;11899:18;11891:26;;11927:100;12024:1;12013:9;12009:17;12000:6;11927:100;:::i;:::-;11754:280;;;;:::o;12040:118::-;12127:24;12145:5;12127:24;:::i;:::-;12122:3;12115:37;12040:118;;:::o;12164:222::-;12257:4;12295:2;12284:9;12280:18;12272:26;;12308:71;12376:1;12365:9;12361:17;12352:6;12308:71;:::i;:::-;12164:222;;;;:::o;12392:308::-;12454:4;12544:18;12536:6;12533:30;12530:56;;;12566:18;;:::i;:::-;12530:56;12604:29;12626:6;12604:29;:::i;:::-;12596:37;;12688:4;12682;12678:15;12670:23;;12392:308;;;:::o;12706:425::-;12784:5;12809:66;12825:49;12867:6;12825:49;:::i;:::-;12809:66;:::i;:::-;12800:75;;12898:6;12891:5;12884:21;12936:4;12929:5;12925:16;12974:3;12965:6;12960:3;12956:16;12953:25;12950:112;;;12981:79;;:::i;:::-;12950:112;13071:54;13118:6;13113:3;13108;13071:54;:::i;:::-;12790:341;12706:425;;;;;:::o;13151:340::-;13207:5;13256:3;13249:4;13241:6;13237:17;13233:27;13223:122;;13264:79;;:::i;:::-;13223:122;13381:6;13368:20;13406:79;13481:3;13473:6;13466:4;13458:6;13454:17;13406:79;:::i;:::-;13397:88;;13213:278;13151:340;;;;:::o;13497:1189::-;13635:6;13643;13651;13659;13708:3;13696:9;13687:7;13683:23;13679:33;13676:120;;;13715:79;;:::i;:::-;13676:120;13863:1;13852:9;13848:17;13835:31;13893:18;13885:6;13882:30;13879:117;;;13915:79;;:::i;:::-;13879:117;14020:63;14075:7;14066:6;14055:9;14051:22;14020:63;:::i;:::-;14010:73;;13806:287;14160:2;14149:9;14145:18;14132:32;14191:18;14183:6;14180:30;14177:117;;;14213:79;;:::i;:::-;14177:117;14318:63;14373:7;14364:6;14353:9;14349:22;14318:63;:::i;:::-;14308:73;;14103:288;14430:2;14456:53;14501:7;14492:6;14481:9;14477:22;14456:53;:::i;:::-;14446:63;;14401:118;14558:2;14584:85;14661:7;14652:6;14641:9;14637:22;14584:85;:::i;:::-;14574:95;;14529:150;13497:1189;;;;;;;:::o;14692:474::-;14760:6;14768;14817:2;14805:9;14796:7;14792:23;14788:32;14785:119;;;14823:79;;:::i;:::-;14785:119;14943:1;14968:53;15013:7;15004:6;14993:9;14989:22;14968:53;:::i;:::-;14958:63;;14914:117;15070:2;15096:53;15141:7;15132:6;15121:9;15117:22;15096:53;:::i;:::-;15086:63;;15041:118;14692:474;;;;;:::o;15172:180::-;15220:77;15217:1;15210:88;15317:4;15314:1;15307:15;15341:4;15338:1;15331:15;15358:320;15402:6;15439:1;15433:4;15429:12;15419:22;;15486:1;15480:4;15476:12;15507:18;15497:81;;15563:4;15555:6;15551:17;15541:27;;15497:81;15625:2;15617:6;15614:14;15594:18;15591:38;15588:84;;15644:18;;:::i;:::-;15588:84;15409:269;15358:320;;;:::o;15684:108::-;15761:24;15779:5;15761:24;:::i;:::-;15756:3;15749:37;15684:108;;:::o;15876:1287::-;16037:4;16032:3;16028:14;16137:4;16130:5;16126:16;16120:23;16156:63;16213:4;16208:3;16204:14;16190:12;16156:63;:::i;:::-;16052:177;16324:4;16317:5;16313:16;16307:23;16343:63;16400:4;16395:3;16391:14;16377:12;16343:63;:::i;:::-;16239:177;16507:4;16500:5;16496:16;16490:23;16526:63;16583:4;16578:3;16574:14;16560:12;16526:63;:::i;:::-;16426:173;16693:4;16686:5;16682:16;16676:23;16712:63;16769:4;16764:3;16760:14;16746:12;16712:63;:::i;:::-;16609:176;16880:4;16873:5;16869:16;16863:23;16899:63;16956:4;16951:3;16947:14;16933:12;16899:63;:::i;:::-;16795:177;17064:4;17057:5;17053:16;17047:23;17083:63;17140:4;17135:3;17131:14;17117:12;17083:63;:::i;:::-;16982:174;16006:1157;15876:1287;;:::o;17169:351::-;17326:4;17364:3;17353:9;17349:19;17341:27;;17378:135;17510:1;17499:9;17495:17;17486:6;17378:135;:::i;:::-;17169:351;;;;:::o;17526:180::-;17574:77;17571:1;17564:88;17671:4;17668:1;17661:15;17695:4;17692:1;17685:15;17712:191;17752:3;17771:20;17789:1;17771:20;:::i;:::-;17766:25;;17805:20;17823:1;17805:20;:::i;:::-;17800:25;;17848:1;17845;17841:9;17834:16;;17869:3;17866:1;17863:10;17860:36;;;17876:18;;:::i;:::-;17860:36;17712:191;;;;:::o;17909:143::-;17966:5;17997:6;17991:13;17982:22;;18013:33;18040:5;18013:33;:::i;:::-;17909:143;;;;:::o;18107:988::-;18198:5;18242:4;18230:9;18225:3;18221:19;18217:30;18214:117;;;18250:79;;:::i;:::-;18214:117;18349:21;18365:4;18349:21;:::i;:::-;18340:30;;18435:1;18475:60;18531:3;18522:6;18511:9;18507:22;18475:60;:::i;:::-;18468:4;18461:5;18457:16;18450:86;18380:167;18616:2;18657:60;18713:3;18704:6;18693:9;18689:22;18657:60;:::i;:::-;18650:4;18643:5;18639:16;18632:86;18557:172;18798:2;18839:60;18895:3;18886:6;18875:9;18871:22;18839:60;:::i;:::-;18832:4;18825:5;18821:16;18814:86;18739:172;18975:2;19016:60;19072:3;19063:6;19052:9;19048:22;19016:60;:::i;:::-;19009:4;19002:5;18998:16;18991:86;18921:167;18107:988;;;;:::o;19101:414::-;19202:6;19251:3;19239:9;19230:7;19226:23;19222:33;19219:120;;;19258:79;;:::i;:::-;19219:120;19378:1;19403:95;19490:7;19481:6;19470:9;19466:22;19403:95;:::i;:::-;19393:105;;19349:159;19101:414;;;;:::o;19521:194::-;19561:4;19581:20;19599:1;19581:20;:::i;:::-;19576:25;;19615:20;19633:1;19615:20;:::i;:::-;19610:25;;19659:1;19656;19652:9;19644:17;;19683:1;19677:4;19674:11;19671:37;;;19688:18;;:::i;:::-;19671:37;19521:194;;;;:::o;19721:122::-;19794:24;19812:5;19794:24;:::i;:::-;19787:5;19784:35;19774:63;;19833:1;19830;19823:12;19774:63;19721:122;:::o;19849:143::-;19906:5;19937:6;19931:13;19922:22;;19953:33;19980:5;19953:33;:::i;:::-;19849:143;;;;:::o;19998:351::-;20068:6;20117:2;20105:9;20096:7;20092:23;20088:32;20085:119;;;20123:79;;:::i;:::-;20085:119;20243:1;20268:64;20324:7;20315:6;20304:9;20300:22;20268:64;:::i;:::-;20258:74;;20214:128;19998:351;;;;:::o;20355:102::-;20397:8;20444:5;20441:1;20437:13;20416:34;;20355:102;;;:::o;20463:848::-;20524:5;20531:4;20555:6;20546:15;;20579:5;20570:14;;20593:712;20614:1;20604:8;20601:15;20593:712;;;20709:4;20704:3;20700:14;20694:4;20691:24;20688:50;;;20718:18;;:::i;:::-;20688:50;20768:1;20758:8;20754:16;20751:451;;;21183:4;21176:5;21172:16;21163:25;;20751:451;21233:4;21227;21223:15;21215:23;;21263:32;21286:8;21263:32;:::i;:::-;21251:44;;20593:712;;;20463:848;;;;;;;:::o;21317:1073::-;21371:5;21562:8;21552:40;;21583:1;21574:10;;21585:5;;21552:40;21611:4;21601:36;;21628:1;21619:10;;21630:5;;21601:36;21697:4;21745:1;21740:27;;;;21781:1;21776:191;;;;21690:277;;21740:27;21758:1;21749:10;;21760:5;;;21776:191;21821:3;21811:8;21808:17;21805:43;;;21828:18;;:::i;:::-;21805:43;21877:8;21874:1;21870:16;21861:25;;21912:3;21905:5;21902:14;21899:40;;;21919:18;;:::i;:::-;21899:40;21952:5;;;21690:277;;22076:2;22066:8;22063:16;22057:3;22051:4;22048:13;22044:36;22026:2;22016:8;22013:16;22008:2;22002:4;21999:12;21995:35;21979:111;21976:246;;;22132:8;22126:4;22122:19;22113:28;;22167:3;22160:5;22157:14;22154:40;;;22174:18;;:::i;:::-;22154:40;22207:5;;21976:246;22247:42;22285:3;22275:8;22269:4;22266:1;22247:42;:::i;:::-;22232:57;;;;22321:4;22316:3;22312:14;22305:5;22302:25;22299:51;;;22330:18;;:::i;:::-;22299:51;22379:4;22372:5;22368:16;22359:25;;21317:1073;;;;;;:::o;22396:281::-;22454:5;22478:23;22496:4;22478:23;:::i;:::-;22470:31;;22522:25;22538:8;22522:25;:::i;:::-;22510:37;;22566:104;22603:66;22593:8;22587:4;22566:104;:::i;:::-;22557:113;;22396:281;;;;:::o;22683:410::-;22723:7;22746:20;22764:1;22746:20;:::i;:::-;22741:25;;22780:20;22798:1;22780:20;:::i;:::-;22775:25;;22835:1;22832;22828:9;22857:30;22875:11;22857:30;:::i;:::-;22846:41;;23036:1;23027:7;23023:15;23020:1;23017:22;22997:1;22990:9;22970:83;22947:139;;23066:18;;:::i;:::-;22947:139;22731:362;22683:410;;;;:::o;23099:85::-;23144:7;23173:5;23162:16;;23099:85;;;:::o;23190:101::-;23226:7;23266:18;23259:5;23255:30;23244:41;;23190:101;;;:::o;23297:156::-;23354:9;23387:60;23404:42;23413:32;23439:5;23413:32;:::i;:::-;23404:42;:::i;:::-;23387:60;:::i;:::-;23374:73;;23297:156;;;:::o;23459:145::-;23553:44;23591:5;23553:44;:::i;:::-;23548:3;23541:57;23459:145;;:::o;23610:236::-;23710:4;23748:2;23737:9;23733:18;23725:26;;23761:78;23836:1;23825:9;23821:17;23812:6;23761:78;:::i;:::-;23610:236;;;;:::o;23852:442::-;24001:4;24039:2;24028:9;24024:18;24016:26;;24052:71;24120:1;24109:9;24105:17;24096:6;24052:71;:::i;:::-;24133:72;24201:2;24190:9;24186:18;24177:6;24133:72;:::i;:::-;24215;24283:2;24272:9;24268:18;24259:6;24215:72;:::i;:::-;23852:442;;;;;;:::o;24300:166::-;24440:18;24436:1;24428:6;24424:14;24417:42;24300:166;:::o;24472:366::-;24614:3;24635:67;24699:2;24694:3;24635:67;:::i;:::-;24628:74;;24711:93;24800:3;24711:93;:::i;:::-;24829:2;24824:3;24820:12;24813:19;;24472:366;;;:::o;24844:419::-;25010:4;25048:2;25037:9;25033:18;25025:26;;25097:9;25091:4;25087:20;25083:1;25072:9;25068:17;25061:47;25125:131;25251:4;25125:131;:::i;:::-;25117:139;;24844:419;;;:::o;25269:442::-;25418:4;25456:2;25445:9;25441:18;25433:26;;25469:71;25537:1;25526:9;25522:17;25513:6;25469:71;:::i;:::-;25550:72;25618:2;25607:9;25603:18;25594:6;25550:72;:::i;:::-;25632;25700:2;25689:9;25685:18;25676:6;25632:72;:::i;:::-;25269:442;;;;;;:::o;25717:170::-;25857:22;25853:1;25845:6;25841:14;25834:46;25717:170;:::o;25893:366::-;26035:3;26056:67;26120:2;26115:3;26056:67;:::i;:::-;26049:74;;26132:93;26221:3;26132:93;:::i;:::-;26250:2;26245:3;26241:12;26234:19;;25893:366;;;:::o;26265:419::-;26431:4;26469:2;26458:9;26454:18;26446:26;;26518:9;26512:4;26508:20;26504:1;26493:9;26489:17;26482:47;26546:131;26672:4;26546:131;:::i;:::-;26538:139;;26265:419;;;:::o;26690:141::-;26739:4;26762:3;26754:11;;26785:3;26782:1;26775:14;26819:4;26816:1;26806:18;26798:26;;26690:141;;;:::o;26837:93::-;26874:6;26921:2;26916;26909:5;26905:14;26901:23;26891:33;;26837:93;;;:::o;26936:107::-;26980:8;27030:5;27024:4;27020:16;26999:37;;26936:107;;;;:::o;27049:393::-;27118:6;27168:1;27156:10;27152:18;27191:97;27221:66;27210:9;27191:97;:::i;:::-;27309:39;27339:8;27328:9;27309:39;:::i;:::-;27297:51;;27381:4;27377:9;27370:5;27366:21;27357:30;;27430:4;27420:8;27416:19;27409:5;27406:30;27396:40;;27125:317;;27049:393;;;;;:::o;27448:142::-;27498:9;27531:53;27549:34;27558:24;27576:5;27558:24;:::i;:::-;27549:34;:::i;:::-;27531:53;:::i;:::-;27518:66;;27448:142;;;:::o;27596:75::-;27639:3;27660:5;27653:12;;27596:75;;;:::o;27677:269::-;27787:39;27818:7;27787:39;:::i;:::-;27848:91;27897:41;27921:16;27897:41;:::i;:::-;27889:6;27882:4;27876:11;27848:91;:::i;:::-;27842:4;27835:105;27753:193;27677:269;;;:::o;27952:73::-;27997:3;27952:73;:::o;28031:189::-;28108:32;;:::i;:::-;28149:65;28207:6;28199;28193:4;28149:65;:::i;:::-;28084:136;28031:189;;:::o;28226:186::-;28286:120;28303:3;28296:5;28293:14;28286:120;;;28357:39;28394:1;28387:5;28357:39;:::i;:::-;28330:1;28323:5;28319:13;28310:22;;28286:120;;;28226:186;;:::o;28418:543::-;28519:2;28514:3;28511:11;28508:446;;;28553:38;28585:5;28553:38;:::i;:::-;28637:29;28655:10;28637:29;:::i;:::-;28627:8;28623:44;28820:2;28808:10;28805:18;28802:49;;;28841:8;28826:23;;28802:49;28864:80;28920:22;28938:3;28920:22;:::i;:::-;28910:8;28906:37;28893:11;28864:80;:::i;:::-;28523:431;;28508:446;28418:543;;;:::o;28967:117::-;29021:8;29071:5;29065:4;29061:16;29040:37;;28967:117;;;;:::o;29090:169::-;29134:6;29167:51;29215:1;29211:6;29203:5;29200:1;29196:13;29167:51;:::i;:::-;29163:56;29248:4;29242;29238:15;29228:25;;29141:118;29090:169;;;;:::o;29264:295::-;29340:4;29486:29;29511:3;29505:4;29486:29;:::i;:::-;29478:37;;29548:3;29545:1;29541:11;29535:4;29532:21;29524:29;;29264:295;;;;:::o;29564:1395::-;29681:37;29714:3;29681:37;:::i;:::-;29783:18;29775:6;29772:30;29769:56;;;29805:18;;:::i;:::-;29769:56;29849:38;29881:4;29875:11;29849:38;:::i;:::-;29934:67;29994:6;29986;29980:4;29934:67;:::i;:::-;30028:1;30052:4;30039:17;;30084:2;30076:6;30073:14;30101:1;30096:618;;;;30758:1;30775:6;30772:77;;;30824:9;30819:3;30815:19;30809:26;30800:35;;30772:77;30875:67;30935:6;30928:5;30875:67;:::i;:::-;30869:4;30862:81;30731:222;30066:887;;30096:618;30148:4;30144:9;30136:6;30132:22;30182:37;30214:4;30182:37;:::i;:::-;30241:1;30255:208;30269:7;30266:1;30263:14;30255:208;;;30348:9;30343:3;30339:19;30333:26;30325:6;30318:42;30399:1;30391:6;30387:14;30377:24;;30446:2;30435:9;30431:18;30418:31;;30292:4;30289:1;30285:12;30280:17;;30255:208;;;30491:6;30482:7;30479:19;30476:179;;;30549:9;30544:3;30540:19;30534:26;30592:48;30634:4;30626:6;30622:17;30611:9;30592:48;:::i;:::-;30584:6;30577:64;30499:156;30476:179;30701:1;30697;30689:6;30685:14;30681:22;30675:4;30668:36;30103:611;;;30066:887;;29656:1303;;;29564:1395;;:::o;30965:180::-;31013:77;31010:1;31003:88;31110:4;31107:1;31100:15;31134:4;31131:1;31124:15;31151:185;31191:1;31208:20;31226:1;31208:20;:::i;:::-;31203:25;;31242:20;31260:1;31242:20;:::i;:::-;31237:25;;31281:1;31271:35;;31286:18;;:::i;:::-;31271:35;31328:1;31325;31321:9;31316:14;;31151:185;;;;:::o;31342:98::-;31393:6;31427:5;31421:12;31411:22;;31342:98;;;:::o;31446:147::-;31547:11;31584:3;31569:18;;31446:147;;;;:::o;31599:386::-;31703:3;31731:38;31763:5;31731:38;:::i;:::-;31785:88;31866:6;31861:3;31785:88;:::i;:::-;31778:95;;31882:65;31940:6;31935:3;31928:4;31921:5;31917:16;31882:65;:::i;:::-;31972:6;31967:3;31963:16;31956:23;;31707:278;31599:386;;;;:::o;31991:271::-;32121:3;32143:93;32232:3;32223:6;32143:93;:::i;:::-;32136:100;;32253:3;32246:10;;31991:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2815600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2992",
								"claimReward()": "infinite",
								"decimals()": "384",
								"initialize(string,string,address,(uint256,uint256,uint256,uint256,uint256,uint256))": "infinite",
								"lastMechanicsUpdate()": "2514",
								"lastRewardClaim(address)": "2868",
								"mechanics()": "infinite",
								"name()": "infinite",
								"owner()": "2612",
								"pause()": "infinite",
								"paused()": "2562",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"socialOracle()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2575",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"updateBasedOnMetrics()": "infinite",
								"updateMechanics((uint256,uint256,uint256,uint256,uint256,uint256))": "infinite",
								"updateOracle(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite",
								"_calculatePenalty(uint256,uint256,uint256)": "infinite",
								"_calculateReward(uint256,uint256,uint256)": "infinite",
								"_handleNegativeMetrics(struct ISocialMetricsOracle.SocialMetrics memory)": "infinite",
								"_handlePositiveMetrics(struct ISocialMetricsOracle.SocialMetrics memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 763,
									"end": 7418,
									"name": "PUSH",
									"source": 17,
									"value": "A0"
								},
								{
									"begin": 763,
									"end": 7418,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 763,
									"end": 7418,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2240,
									"end": 2293,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 2240,
									"end": 2293,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2240,
									"end": 2293,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2240,
									"end": 2293,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2240,
									"end": 2293,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2240,
									"end": 2293,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2240,
									"end": 2293,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2240,
									"end": 2293,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 2240,
									"end": 2293,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2240,
									"end": 2293,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2240,
									"end": 2293,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2264,
									"end": 2286,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 2264,
									"end": 2284,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 2264,
									"end": 2284,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2264,
									"end": 2284,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 2264,
									"end": 2286,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2264,
									"end": 2286,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 2264,
									"end": 2286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2264,
									"end": 2286,
									"name": "tag",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 2264,
									"end": 2286,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 763,
									"end": 7418,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "6"
								},
								{
									"begin": 763,
									"end": 7418,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7856,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7901,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8003,
									"end": 8019,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7986,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8052,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8036,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8099,
									"end": 8115,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 8087,
									"end": 8116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "LOG1",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7760,
									"end": 8133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7711,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8795,
									"end": 8825,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8870,
									"end": 8891,
									"name": "PUSH",
									"source": 1,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 8860,
									"end": 8891,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8860,
									"end": 8891,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 108,
									"name": "tag",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 108,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 43,
									"end": 50,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 101,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 76,
									"end": 81,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 72,
									"end": 102,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 61,
									"end": 102,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 61,
									"end": 102,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 7,
									"end": 108,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7,
									"end": 108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 114,
									"end": 229,
									"name": "tag",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 114,
									"end": 229,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 216,
									"end": 221,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 199,
									"end": 222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 199,
									"end": 222,
									"name": "tag",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 199,
									"end": 222,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 194,
									"end": 197,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 187,
									"end": 223,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 114,
									"end": 229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 235,
									"end": 453,
									"name": "tag",
									"source": 18,
									"value": "13"
								},
								{
									"begin": 235,
									"end": 453,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 326,
									"end": 330,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 366,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 353,
									"end": 362,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 349,
									"end": 367,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 341,
									"end": 367,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 341,
									"end": 367,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 441,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 428,
									"end": 445,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 419,
									"end": 425,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 377,
									"end": 446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 377,
									"end": 446,
									"name": "tag",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 377,
									"end": 446,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 235,
									"end": 453,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 763,
									"end": 7418,
									"name": "tag",
									"source": 17,
									"value": "6"
								},
								{
									"begin": 763,
									"end": 7418,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 763,
									"end": 7418,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 763,
									"end": 7418,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 763,
									"end": 7418,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 763,
									"end": 7418,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 763,
									"end": 7418,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 7418,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 763,
									"end": 7418,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 7418,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "468"
								},
								{
									"begin": 763,
									"end": 7418,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 763,
									"end": 7418,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 7418,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203406afcfbef0cc43887d8e4bdcf1a33f1a2c81e6f089e3f0f05a18f9b7b0174b64736f6c634300081a0033",
									".code": [
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "715018A6"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "A9059CBB"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "B88A802F"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "B88A802F"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "D8AD5231"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "DD62ED3E"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "F2FDE38B"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "tag",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "A9059CBB"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "AD3CB1CC"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "AF9DCC2C"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "8DA5CB5B"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "8DA5CB5B"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "95D89B41"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "9E24F236"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "A7892C11"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "tag",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "715018A6"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "78F3C4B6"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "8456CB59"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "tag",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "313CE567"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "4F1EF286"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "4F1EF286"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "52D1902D"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "5C975ABB"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "tag",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "313CE567"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "38B42785"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "3F4BA83A"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "tag",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "6FDDE03"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "95EA7B3"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "B594036"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "18160DDD"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "1CB44DFC"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 763,
											"end": 7418,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "tag",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "tag",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 7010,
											"end": 7176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "tag",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 7010,
											"end": 7176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "tag",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "tag",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "tag",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "58"
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 6774,
											"end": 7004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "tag",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 6774,
											"end": 7004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "tag",
											"source": 17,
											"value": "58"
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "tag",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "tag",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 1522,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "tag",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 1522,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "tag",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "tag",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "78"
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "tag",
											"source": 17,
											"value": "78"
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "79"
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 7249,
											"end": 7314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "tag",
											"source": 17,
											"value": "79"
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 925,
											"end": 965,
											"name": "tag",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 925,
											"end": 965,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 925,
											"end": 965,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 965,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "tag",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 925,
											"end": 965,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 925,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 925,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "tag",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 925,
											"end": 965,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 925,
											"end": 965,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "105"
										},
										{
											"begin": 925,
											"end": 965,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "106"
										},
										{
											"begin": 925,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "tag",
											"source": 17,
											"value": "105"
										},
										{
											"begin": 925,
											"end": 965,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 925,
											"end": 965,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "tag",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "tag",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "108"
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "109"
										},
										{
											"begin": 7182,
											"end": 7243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "tag",
											"source": 17,
											"value": "108"
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "tag",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "121"
										},
										{
											"begin": 1590,
											"end": 1624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "tag",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "122"
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 1590,
											"end": 1624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "tag",
											"source": 17,
											"value": "122"
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "tag",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "tag",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "125"
										},
										{
											"begin": 2915,
											"end": 3907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "tag",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "tag",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "135"
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "tag",
											"source": 17,
											"value": "135"
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "136"
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "137"
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "138"
										},
										{
											"begin": 2299,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "tag",
											"source": 17,
											"value": "137"
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "139"
										},
										{
											"begin": 2299,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "tag",
											"source": 17,
											"value": "136"
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "tag",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "tag",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "141"
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 3913,
											"end": 4509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "tag",
											"source": 17,
											"value": "141"
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "tag",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "143"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "tag",
											"source": 17,
											"value": "143"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1630,
											"end": 1680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "tag",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 1630,
											"end": 1680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "tag",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 1630,
											"end": 1680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "tag",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2774,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2786,
											"end": 2808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2811,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2811,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2839,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2839,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5283,
											"end": 5287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5299,
											"end": 5312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 5315,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 5315,
											"end": 5327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5353,
											"end": 5360,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5367,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 5337,
											"end": 5368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5385,
											"end": 5389,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "tag",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7112,
											"end": 7124,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7100,
											"end": 7124,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7139,
											"end": 7169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "367B6B00685AE263E44E2231E399D2E112EAC1979516A9E0E1069D7CD4AC3A2D"
										},
										{
											"begin": 7156,
											"end": 7168,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7139,
											"end": 7169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7139,
											"end": 7169,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7139,
											"end": 7169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 7139,
											"end": 7169,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7139,
											"end": 7169,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7139,
											"end": 7169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "177"
										},
										{
											"begin": 7139,
											"end": 7169,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7139,
											"end": 7169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 7139,
											"end": 7169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7139,
											"end": 7169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7139,
											"end": 7169,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7139,
											"end": 7169,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7139,
											"end": 7169,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7139,
											"end": 7169,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7139,
											"end": 7169,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7139,
											"end": 7169,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7010,
											"end": 7176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3955,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3989,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3992,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3992,
											"end": 4010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3967,
											"end": 4010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3967,
											"end": 4010,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "tag",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6869,
											"end": 6870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6848,
											"end": 6871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6848,
											"end": 6871,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6848,
											"end": 6857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6848,
											"end": 6871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6848,
											"end": 6871,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6848,
											"end": 6871,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6844,
											"end": 6902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 6844,
											"end": 6902,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6880,
											"end": 6902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6880,
											"end": 6902,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6880,
											"end": 6902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "5521068100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6880,
											"end": 6902,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6880,
											"end": 6902,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6880,
											"end": 6902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6880,
											"end": 6902,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6880,
											"end": 6902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6880,
											"end": 6902,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6880,
											"end": 6902,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6880,
											"end": 6902,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6880,
											"end": 6902,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6880,
											"end": 6902,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6880,
											"end": 6902,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6844,
											"end": 6902,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 6844,
											"end": 6902,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6948,
											"end": 6957,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 6924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 6912,
											"end": 6924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6912,
											"end": 6958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 6912,
											"end": 6958,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 6958,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 6958,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 6958,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 6958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6912,
											"end": 6958,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 6958,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 6958,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 6958,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 6958,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 6958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6912,
											"end": 6958,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 6958,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 6958,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 6958,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 6958,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 6958,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6987,
											"end": 6996,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6973,
											"end": 6997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6973,
											"end": 6997,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6973,
											"end": 6997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "3DF77BEB5DB05FCDD70A30FC8ADF3F83F9501B68579455ADBD100B8180940394"
										},
										{
											"begin": 6973,
											"end": 6997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 6997,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6973,
											"end": 6997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 6997,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6973,
											"end": 6997,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6973,
											"end": 6997,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6973,
											"end": 6997,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6973,
											"end": 6997,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6973,
											"end": 6997,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 7004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6075,
											"end": 6079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6109,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 6109,
											"end": 6121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6091,
											"end": 6121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6091,
											"end": 6121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 6147,
											"end": 6151,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6160,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6162,
											"end": 6167,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6131,
											"end": 6168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6188,
											"end": 6192,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6194,
											"end": 6196,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6198,
											"end": 6203,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6178,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "tag",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "tag",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 7249,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7307,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 7297,
											"end": 7305,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 7297,
											"end": 7307,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7297,
											"end": 7307,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 7297,
											"end": 7307,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7249,
											"end": 7314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4212,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 4215,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 4215,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4233,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4233,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 925,
											"end": 965,
											"name": "tag",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 925,
											"end": 965,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 925,
											"end": 965,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 965,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 925,
											"end": 965,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 925,
											"end": 965,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 925,
											"end": 965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "tag",
											"source": 17,
											"value": "109"
										},
										{
											"begin": 7182,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "219"
										},
										{
											"begin": 7228,
											"end": 7234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 7228,
											"end": 7236,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7228,
											"end": 7236,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "219"
										},
										{
											"begin": 7228,
											"end": 7236,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7182,
											"end": 7243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3045,
											"end": 3067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 3070,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3070,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3098,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3098,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "tag",
											"source": 17,
											"value": "121"
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "PUSH",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1590,
											"end": 1624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "tag",
											"source": 17,
											"value": "125"
										},
										{
											"begin": 2915,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 3024,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 3024,
											"end": 3048,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3024,
											"end": 3048,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3002,
											"end": 3021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 3002,
											"end": 3021,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3002,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "235"
										},
										{
											"begin": 3002,
											"end": 3048,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3002,
											"end": 3048,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3002,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 3002,
											"end": 3048,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3002,
											"end": 3048,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "235"
										},
										{
											"begin": 3002,
											"end": 3048,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2984,
											"end": 2999,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 2984,
											"end": 3048,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2980,
											"end": 3096,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2980,
											"end": 3096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 2980,
											"end": 3096,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3070,
											"end": 3096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3070,
											"end": 3096,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3070,
											"end": 3096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4A448F3700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3070,
											"end": 3096,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3070,
											"end": 3096,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3070,
											"end": 3096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3070,
											"end": 3096,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3070,
											"end": 3096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3070,
											"end": 3096,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3070,
											"end": 3096,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3070,
											"end": 3096,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3070,
											"end": 3096,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3070,
											"end": 3096,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3070,
											"end": 3096,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2980,
											"end": 3096,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 2980,
											"end": 3096,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3107,
											"end": 3156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 3159,
											"end": 3171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3171,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3171,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3171,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3159,
											"end": 3171,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3159,
											"end": 3188,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "395924DC"
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "239"
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3190,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "239"
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "240"
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "241"
										},
										{
											"begin": 3159,
											"end": 3190,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "240"
										},
										{
											"begin": 3159,
											"end": 3190,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3107,
											"end": 3190,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3107,
											"end": 3190,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3279,
											"end": 3286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "E10"
										},
										{
											"begin": 3259,
											"end": 3266,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3259,
											"end": 3276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3259,
											"end": 3276,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3259,
											"end": 3276,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3241,
											"end": 3256,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 3241,
											"end": 3276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "242"
										},
										{
											"begin": 3241,
											"end": 3276,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3241,
											"end": 3276,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3241,
											"end": 3276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 3241,
											"end": 3276,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3241,
											"end": 3276,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "242"
										},
										{
											"begin": 3241,
											"end": 3276,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3241,
											"end": 3286,
											"modifierDepth": 1,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3237,
											"end": 3333,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3237,
											"end": 3333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "244"
										},
										{
											"begin": 3237,
											"end": 3333,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3308,
											"end": 3333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3308,
											"end": 3333,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3308,
											"end": 3333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "7428474C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3308,
											"end": 3333,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3308,
											"end": 3333,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3308,
											"end": 3333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3308,
											"end": 3333,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3308,
											"end": 3333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3308,
											"end": 3333,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3308,
											"end": 3333,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3308,
											"end": 3333,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3308,
											"end": 3333,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3308,
											"end": 3333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3308,
											"end": 3333,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3237,
											"end": 3333,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "244"
										},
										{
											"begin": 3237,
											"end": 3333,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3368,
											"end": 3377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 3368,
											"end": 3391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 3368,
											"end": 3391,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3368,
											"end": 3391,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3347,
											"end": 3354,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3347,
											"end": 3365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3365,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3347,
											"end": 3365,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3347,
											"end": 3391,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3343,
											"end": 3437,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3343,
											"end": 3437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "245"
										},
										{
											"begin": 3343,
											"end": 3437,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3413,
											"end": 3437,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "DA2029D100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3413,
											"end": 3437,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3413,
											"end": 3437,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3413,
											"end": 3437,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3413,
											"end": 3437,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3343,
											"end": 3437,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "245"
										},
										{
											"begin": 3343,
											"end": 3437,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3527,
											"end": 3536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 3527,
											"end": 3554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3554,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3527,
											"end": 3554,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3501,
											"end": 3508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3501,
											"end": 3523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3501,
											"end": 3523,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3501,
											"end": 3523,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3501,
											"end": 3554,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3501,
											"end": 3554,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3501,
											"end": 3623,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3501,
											"end": 3623,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3501,
											"end": 3623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 3501,
											"end": 3623,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3501,
											"end": 3623,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3596,
											"end": 3605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 3596,
											"end": 3623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3596,
											"end": 3623,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3596,
											"end": 3623,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3570,
											"end": 3577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3570,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3570,
											"end": 3592,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3570,
											"end": 3592,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3570,
											"end": 3623,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3570,
											"end": 3623,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3501,
											"end": 3623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "246"
										},
										{
											"begin": 3501,
											"end": 3623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3484,
											"end": 3752,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3484,
											"end": 3752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 3484,
											"end": 3752,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3648,
											"end": 3679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "248"
										},
										{
											"begin": 3671,
											"end": 3678,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3648,
											"end": 3670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 3648,
											"end": 3679,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3648,
											"end": 3679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "248"
										},
										{
											"begin": 3648,
											"end": 3679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3484,
											"end": 3752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 3484,
											"end": 3752,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3484,
											"end": 3752,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 3484,
											"end": 3752,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3710,
											"end": 3741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 3733,
											"end": 3740,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3710,
											"end": 3732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 3710,
											"end": 3741,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3710,
											"end": 3741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 3710,
											"end": 3741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3484,
											"end": 3752,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 3484,
											"end": 3752,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3784,
											"end": 3799,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 3762,
											"end": 3781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 3762,
											"end": 3799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3762,
											"end": 3799,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3762,
											"end": 3799,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3762,
											"end": 3799,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 3865,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3877,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 3865,
											"end": 3877,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3877,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3865,
											"end": 3877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3865,
											"end": 3898,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "9C22C5D"
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "254"
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3900,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "254"
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "256"
										},
										{
											"begin": 3865,
											"end": 3900,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3865,
											"end": 3900,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2970,
											"end": 3907,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 3907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4570,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 4573,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 4573,
											"end": 4585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 4605,
											"end": 4610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4614,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4595,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4643,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "352E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "tag",
											"source": 17,
											"value": "139"
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 2498,
											"end": 2502,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 2504,
											"end": 2510,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 2485,
											"end": 2497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "270"
										},
										{
											"begin": 2485,
											"end": 2511,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2485,
											"end": 2511,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 2485,
											"end": 2511,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2521,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "271"
										},
										{
											"begin": 2536,
											"end": 2546,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2521,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 2521,
											"end": 2547,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2521,
											"end": 2547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "271"
										},
										{
											"begin": 2521,
											"end": 2547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2557,
											"end": 2574,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 2557,
											"end": 2572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "274"
										},
										{
											"begin": 2557,
											"end": 2574,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2557,
											"end": 2574,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 2557,
											"end": 2574,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2584,
											"end": 2608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "275"
										},
										{
											"begin": 2584,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "276"
										},
										{
											"begin": 2584,
											"end": 2608,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2584,
											"end": 2608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "275"
										},
										{
											"begin": 2584,
											"end": 2608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2648,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2623,
											"end": 2650,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2623,
											"end": 2636,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2623,
											"end": 2650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2623,
											"end": 2650,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2623,
											"end": 2650,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2619,
											"end": 2681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "277"
										},
										{
											"begin": 2619,
											"end": 2681,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2659,
											"end": 2681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2659,
											"end": 2681,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2659,
											"end": 2681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "5521068100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2659,
											"end": 2681,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2659,
											"end": 2681,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2659,
											"end": 2681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2659,
											"end": 2681,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2659,
											"end": 2681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2659,
											"end": 2681,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2659,
											"end": 2681,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2659,
											"end": 2681,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2659,
											"end": 2681,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2659,
											"end": 2681,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2659,
											"end": 2681,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2619,
											"end": 2681,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "277"
										},
										{
											"begin": 2619,
											"end": 2681,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2727,
											"end": 2740,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2691,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 2691,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2691,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2691,
											"end": 2741,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 2691,
											"end": 2741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2691,
											"end": 2741,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2691,
											"end": 2741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2691,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2691,
											"end": 2741,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 2691,
											"end": 2741,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 2691,
											"end": 2741,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2691,
											"end": 2741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2691,
											"end": 2741,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2691,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2691,
											"end": 2741,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2691,
											"end": 2741,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 2691,
											"end": 2741,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 2691,
											"end": 2741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2691,
											"end": 2741,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2691,
											"end": 2741,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2763,
											"end": 2773,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2823,
											"end": 2866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 2829,
											"end": 2839,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2855,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 2855,
											"end": 2863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "70"
										},
										{
											"begin": 2855,
											"end": 2865,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2855,
											"end": 2865,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 2855,
											"end": 2865,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2851,
											"end": 2853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 2851,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 2851,
											"end": 2865,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2851,
											"end": 2865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2851,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 2851,
											"end": 2865,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2851,
											"end": 2865,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 2851,
											"end": 2865,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2841,
											"end": 2848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "F4240"
										},
										{
											"begin": 2841,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 2841,
											"end": 2865,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2841,
											"end": 2865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2841,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 2841,
											"end": 2865,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2841,
											"end": 2865,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 2841,
											"end": 2865,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2823,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 2823,
											"end": 2866,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2823,
											"end": 2866,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 2823,
											"end": 2866,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2299,
											"end": 2873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "tag",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 3913,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4021,
											"end": 4030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 4021,
											"end": 4045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 4021,
											"end": 4045,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4021,
											"end": 4045,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "3A"
										},
										{
											"begin": 3991,
											"end": 4018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4017,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3991,
											"end": 4018,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3991,
											"end": 4018,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4018,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4018,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3991,
											"end": 4018,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4018,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4018,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4018,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3991,
											"end": 4018,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4018,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4018,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4045,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 3991,
											"end": 4045,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4045,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4045,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 3991,
											"end": 4045,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3991,
											"end": 4045,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 3991,
											"end": 4045,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3973,
											"end": 3988,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 3973,
											"end": 4045,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3969,
											"end": 4086,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3969,
											"end": 4086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "292"
										},
										{
											"begin": 3969,
											"end": 4086,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4066,
											"end": 4086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4086,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4066,
											"end": 4086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "2BC08A7300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4066,
											"end": 4086,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4066,
											"end": 4086,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4066,
											"end": 4086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4066,
											"end": 4086,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4066,
											"end": 4086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4086,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4066,
											"end": 4086,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4066,
											"end": 4086,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4066,
											"end": 4086,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4066,
											"end": 4086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4066,
											"end": 4086,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3969,
											"end": 4086,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "292"
										},
										{
											"begin": 3969,
											"end": 4086,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4097,
											"end": 4146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4149,
											"end": 4161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 4149,
											"end": 4161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4149,
											"end": 4161,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4161,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4161,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 4149,
											"end": 4161,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4161,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4161,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4149,
											"end": 4161,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4149,
											"end": 4178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "395924DC"
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4149,
											"end": 4180,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "295"
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "241"
										},
										{
											"begin": 4149,
											"end": 4180,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "295"
										},
										{
											"begin": 4149,
											"end": 4180,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4097,
											"end": 4180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4097,
											"end": 4180,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4199,
											"end": 4219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "296"
										},
										{
											"begin": 4252,
											"end": 4259,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4252,
											"end": 4274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4252,
											"end": 4274,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4252,
											"end": 4274,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4288,
											"end": 4295,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4288,
											"end": 4310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4310,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4288,
											"end": 4310,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4324,
											"end": 4345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 4334,
											"end": 4344,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4324,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 4324,
											"end": 4345,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4324,
											"end": 4345,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 4324,
											"end": 4345,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4222,
											"end": 4238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 4222,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4222,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "296"
										},
										{
											"begin": 4222,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4199,
											"end": 4355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4199,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4385,
											"end": 4386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4370,
											"end": 4382,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4370,
											"end": 4386,
											"modifierDepth": 1,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4366,
											"end": 4503,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4366,
											"end": 4503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "299"
										},
										{
											"begin": 4366,
											"end": 4503,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4402,
											"end": 4433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 4408,
											"end": 4418,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4420,
											"end": 4432,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4402,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 4402,
											"end": 4433,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4402,
											"end": 4433,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 4402,
											"end": 4433,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4477,
											"end": 4492,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 4447,
											"end": 4462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "3A"
										},
										{
											"begin": 4447,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4473,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4447,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4447,
											"end": 4474,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4447,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4447,
											"end": 4474,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4447,
											"end": 4474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4447,
											"end": 4474,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4447,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4447,
											"end": 4474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4447,
											"end": 4474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4447,
											"end": 4474,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4447,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4447,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4474,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4447,
											"end": 4492,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4447,
											"end": 4492,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4447,
											"end": 4492,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4447,
											"end": 4492,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4366,
											"end": 4503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "299"
										},
										{
											"begin": 4366,
											"end": 4503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3959,
											"end": 4509,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3959,
											"end": 4509,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3913,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "tag",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "PUSH",
											"source": 17,
											"value": "3A"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1630,
											"end": 1680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4788,
											"end": 4795,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 4832,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 4832,
											"end": 4850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4807,
											"end": 4850,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4807,
											"end": 4850,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4886,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4888,
											"end": 4895,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 2100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10117,
											"end": 10121,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10085,
											"end": 10093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 10085,
											"end": 10122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11844,
											"end": 11868,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 11881,
											"end": 11886,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11888,
											"end": 11895,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11871,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 11871,
											"end": 11896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11844,
											"end": 11896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11844,
											"end": 11896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11930,
											"end": 11947,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11910,
											"end": 11926,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11910,
											"end": 11947,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11986,
											"end": 11991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11967,
											"end": 11983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11967,
											"end": 11991,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12045,
											"end": 12052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12072,
											"end": 12077,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 12018,
											"end": 12078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 12143,
											"end": 12148,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12150,
											"end": 12157,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12178,
											"end": 12183,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12159,
											"end": 12183,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12185,
											"end": 12190,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12134,
											"end": 12142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 12134,
											"end": 12191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11834,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6704,
											"end": 6705,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6688,
											"end": 6692,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6756,
											"end": 6757,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 6729,
											"end": 6759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6797,
											"end": 6798,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6851,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 6822,
											"end": 6854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 6882,
											"end": 6886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6888,
											"end": 6890,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 6897,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 6874,
											"end": 6898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 1750,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 1750,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 2794,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2794,
											"end": 2806,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2785,
											"end": 2807,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4692,
											"end": 4698,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4687,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 4753,
											"end": 4783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 4753,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7350,
											"end": 7416,
											"name": "tag",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 7350,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7350,
											"end": 7416,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7350,
											"end": 7416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6174,
											"end": 6191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 6156,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6560,
											"end": 6577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 6518,
											"end": 6578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 9,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 6258,
											"end": 6290,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6258,
											"end": 6290,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6346,
											"end": 6350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "AA1D49A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 6317,
											"end": 6351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 6409,
											"end": 6426,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6432,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 6379,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6209,
											"end": 6444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5106,
											"end": 5110,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 2545,
											"end": 2555,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2545,
											"end": 2557,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2538,
											"end": 2558,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2101,
											"end": 2109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2109,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 2092,
											"end": 2130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2031,
											"end": 2137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4541,
											"end": 4987,
											"name": "tag",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 4541,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4643,
											"end": 4663,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 4696,
											"end": 4703,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4696,
											"end": 4718,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4696,
											"end": 4718,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4696,
											"end": 4718,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4732,
											"end": 4739,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4732,
											"end": 4754,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4732,
											"end": 4754,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4732,
											"end": 4754,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4768,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "378"
										},
										{
											"begin": 4768,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 4768,
											"end": 4781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4768,
											"end": 4781,
											"name": "tag",
											"source": 17,
											"value": "378"
										},
										{
											"begin": 4768,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4666,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 4666,
											"end": 4791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4666,
											"end": 4791,
											"name": "tag",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 4666,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4643,
											"end": 4791,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4643,
											"end": 4791,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4821,
											"end": 4822,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4806,
											"end": 4818,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4806,
											"end": 4822,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4802,
											"end": 4981,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4802,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "379"
										},
										{
											"begin": 4802,
											"end": 4981,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4838,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "380"
										},
										{
											"begin": 4852,
											"end": 4856,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 4859,
											"end": 4871,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4838,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 4838,
											"end": 4872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4838,
											"end": 4872,
											"name": "tag",
											"source": 17,
											"value": "380"
										},
										{
											"begin": 4838,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4891,
											"end": 4970,
											"name": "PUSH",
											"source": 17,
											"value": "DA04004D58812F3E164F58E498158ACCA1B0054D975FCE0E3BAFDF56F2E254BA"
										},
										{
											"begin": 4909,
											"end": 4921,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4923,
											"end": 4930,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4923,
											"end": 4945,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4923,
											"end": 4945,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4923,
											"end": 4945,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4947,
											"end": 4954,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4947,
											"end": 4969,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4947,
											"end": 4969,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4947,
											"end": 4969,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4891,
											"end": 4970,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4891,
											"end": 4970,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4891,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "382"
										},
										{
											"begin": 4891,
											"end": 4970,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4891,
											"end": 4970,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4891,
											"end": 4970,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4891,
											"end": 4970,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4891,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "383"
										},
										{
											"begin": 4891,
											"end": 4970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4891,
											"end": 4970,
											"name": "tag",
											"source": 17,
											"value": "382"
										},
										{
											"begin": 4891,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4891,
											"end": 4970,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4891,
											"end": 4970,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4891,
											"end": 4970,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4891,
											"end": 4970,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4891,
											"end": 4970,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4891,
											"end": 4970,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4891,
											"end": 4970,
											"name": "LOG1",
											"source": 17
										},
										{
											"begin": 4802,
											"end": 4981,
											"name": "tag",
											"source": 17,
											"value": "379"
										},
										{
											"begin": 4802,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4633,
											"end": 4987,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4541,
											"end": 4987,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4541,
											"end": 4987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4993,
											"end": 5441,
											"name": "tag",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 4993,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5116,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5119,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "385"
										},
										{
											"begin": 5150,
											"end": 5157,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5150,
											"end": 5172,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5150,
											"end": 5172,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5150,
											"end": 5172,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5186,
											"end": 5193,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5186,
											"end": 5208,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5186,
											"end": 5208,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5186,
											"end": 5208,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5222,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "386"
										},
										{
											"begin": 5222,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 5222,
											"end": 5235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5222,
											"end": 5235,
											"name": "tag",
											"source": 17,
											"value": "386"
										},
										{
											"begin": 5222,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5119,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "387"
										},
										{
											"begin": 5119,
											"end": 5245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5119,
											"end": 5245,
											"name": "tag",
											"source": 17,
											"value": "385"
										},
										{
											"begin": 5119,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5245,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5245,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5276,
											"end": 5277,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5260,
											"end": 5273,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5260,
											"end": 5277,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 5256,
											"end": 5435,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5256,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "388"
										},
										{
											"begin": 5256,
											"end": 5435,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5293,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "389"
										},
										{
											"begin": 5307,
											"end": 5311,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5293,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 5293,
											"end": 5328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5293,
											"end": 5328,
											"name": "tag",
											"source": 17,
											"value": "389"
										},
										{
											"begin": 5293,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5347,
											"end": 5424,
											"name": "PUSH",
											"source": 17,
											"value": "958E73D0165CD8413C567DDCFECFBDFB06498A561DE5CD56849C2B463F66CDF"
										},
										{
											"begin": 5362,
											"end": 5375,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5377,
											"end": 5399,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5377,
											"end": 5399,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5377,
											"end": 5399,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5401,
											"end": 5408,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5401,
											"end": 5423,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5401,
											"end": 5423,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5401,
											"end": 5423,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5347,
											"end": 5424,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5347,
											"end": 5424,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5347,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "390"
										},
										{
											"begin": 5347,
											"end": 5424,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5347,
											"end": 5424,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5347,
											"end": 5424,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5347,
											"end": 5424,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5347,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "383"
										},
										{
											"begin": 5347,
											"end": 5424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5347,
											"end": 5424,
											"name": "tag",
											"source": 17,
											"value": "390"
										},
										{
											"begin": 5347,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5347,
											"end": 5424,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5347,
											"end": 5424,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5347,
											"end": 5424,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5347,
											"end": 5424,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5347,
											"end": 5424,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5347,
											"end": 5424,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5347,
											"end": 5424,
											"name": "LOG1",
											"source": 17
										},
										{
											"begin": 5256,
											"end": 5435,
											"name": "tag",
											"source": 17,
											"value": "388"
										},
										{
											"begin": 5256,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5085,
											"end": 5441,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4993,
											"end": 5441,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4993,
											"end": 5441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 2407,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2421,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 2384,
											"end": 2422,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 1147,
											"end": 1172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 1147,
											"end": 1174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8822,
											"end": 8823,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8810,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8876,
											"end": 8877,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 8847,
											"end": 8879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "tag",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "tag",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "414"
										},
										{
											"begin": 8915,
											"end": 8916,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8919,
											"end": 8926,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8928,
											"end": 8933,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 8899,
											"end": 8934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "tag",
											"source": 4,
											"value": "414"
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5447,
											"end": 6040,
											"name": "tag",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 5447,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5594,
											"end": 5601,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5613,
											"end": 5640,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5643,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "416"
										},
										{
											"begin": 5662,
											"end": 5671,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 5662,
											"end": 5689,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5662,
											"end": 5689,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5662,
											"end": 5689,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5643,
											"end": 5657,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "417"
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5643,
											"end": 5690,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5643,
											"end": 5690,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5643,
											"end": 5690,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5643,
											"end": 5690,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5643,
											"end": 5690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5643,
											"end": 5690,
											"name": "tag",
											"source": 17,
											"value": "416"
										},
										{
											"begin": 5643,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5613,
											"end": 5690,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5613,
											"end": 5690,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5700,
											"end": 5728,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5731,
											"end": 5778,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 5750,
											"end": 5759,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 5750,
											"end": 5777,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 5750,
											"end": 5777,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5750,
											"end": 5777,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5731,
											"end": 5745,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5731,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "417"
										},
										{
											"begin": 5731,
											"end": 5749,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5731,
											"end": 5778,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5731,
											"end": 5778,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5731,
											"end": 5778,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5731,
											"end": 5778,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5731,
											"end": 5778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5731,
											"end": 5778,
											"name": "tag",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 5731,
											"end": 5778,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5700,
											"end": 5778,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5700,
											"end": 5778,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "419"
										},
										{
											"begin": 6002,
											"end": 6005,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 5804,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "420"
										},
										{
											"begin": 5954,
											"end": 5959,
											"name": "PUSH",
											"source": 17,
											"value": "2710"
										},
										{
											"begin": 5804,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "421"
										},
										{
											"begin": 5925,
											"end": 5935,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 5886,
											"end": 5906,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 5848,
											"end": 5867,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5813,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 5804,
											"end": 5830,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 5804,
											"end": 5830,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5830,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 5804,
											"end": 5847,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5868,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5868,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5868,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5804,
											"end": 5868,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5868,
											"name": "tag",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 5804,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5885,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 5804,
											"end": 5885,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5907,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5907,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5907,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5804,
											"end": 5907,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5907,
											"name": "tag",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 5804,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 5804,
											"end": 5924,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5936,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5936,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5936,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5804,
											"end": 5936,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5936,
											"name": "tag",
											"source": 17,
											"value": "421"
										},
										{
											"begin": 5804,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 5804,
											"end": 5953,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5960,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5960,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5960,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5804,
											"end": 5960,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5960,
											"name": "tag",
											"source": 17,
											"value": "420"
										},
										{
											"begin": 5804,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 5804,
											"end": 6001,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 6006,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 6006,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 6006,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5804,
											"end": 6006,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 6006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 6006,
											"name": "tag",
											"source": 17,
											"value": "419"
										},
										{
											"begin": 5804,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5797,
											"end": 6006,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5797,
											"end": 6006,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5797,
											"end": 6006,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5797,
											"end": 6006,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5447,
											"end": 6040,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5447,
											"end": 6040,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5447,
											"end": 6040,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5447,
											"end": 6040,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5447,
											"end": 6040,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5447,
											"end": 6040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 11109,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 11109,
											"end": 11127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "tag",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11158,
											"end": 11159,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11141,
											"end": 11146,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11212,
											"end": 11213,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 11183,
											"end": 11215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "tag",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "tag",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11259,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11239,
											"end": 11246,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11311,
											"end": 11312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 11283,
											"end": 11314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "tag",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "tag",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11366,
											"end": 11371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11347,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11334,
											"end": 11347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11348,
											"end": 11353,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11355,
											"end": 11362,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11385,
											"end": 11394,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11438,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11429,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11440,
											"end": 11445,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 11415,
											"end": 11446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "tag",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "tag",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11074,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 7330,
											"end": 7346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 7330,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "tag",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7378,
											"end": 7379,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7366,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7516,
											"end": 7521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7499,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 7498,
											"end": 7521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "tag",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "tag",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7571,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7590,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7623,
											"end": 7628,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7620,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7628,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7680,
											"end": 7684,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7697,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7699,
											"end": 7704,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 7655,
											"end": 7705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "tag",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "tag",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7874,
											"end": 7879,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7860,
											"end": 7871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7860,
											"end": 7879,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7841,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7851,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7851,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7538,
											"end": 7904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "tag",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7932,
											"end": 7933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7920,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8099,
											"end": 8104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8082,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "tag",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8305,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "tag",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8373,
											"end": 8375,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8367,
											"end": 8371,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8377,
											"end": 8382,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 8358,
											"end": 8383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "tag",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7295,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "445"
										},
										{
											"begin": 2275,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2275,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "tag",
											"source": 3,
											"value": "445"
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "446"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "447"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "448"
										},
										{
											"begin": 2267,
											"end": 2308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "tag",
											"source": 3,
											"value": "447"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "tag",
											"source": 3,
											"value": "446"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1493,
											"end": 1500,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 9,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 1519,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1441,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2425,
											"end": 2442,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 9,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2473,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2462,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9259,
											"end": 9465,
											"name": "tag",
											"source": 4,
											"value": "381"
										},
										{
											"begin": 9259,
											"end": 9465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9348,
											"end": 9349,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9329,
											"end": 9350,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9329,
											"end": 9350,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9336,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9350,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9329,
											"end": 9350,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9329,
											"end": 9350,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9325,
											"end": 9414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 9325,
											"end": 9414,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9400,
											"end": 9401,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 9373,
											"end": 9403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "tag",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9325,
											"end": 9414,
											"name": "tag",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 9325,
											"end": 9414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 9431,
											"end": 9438,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9452,
											"end": 9457,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 9423,
											"end": 9458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9458,
											"name": "tag",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 9423,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9259,
											"end": 9465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9259,
											"end": 9465,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9259,
											"end": 9465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6046,
											"end": 6745,
											"name": "tag",
											"source": 17,
											"value": "387"
										},
										{
											"begin": 6046,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6194,
											"end": 6201,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6234,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6267,
											"end": 6281,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6237,
											"end": 6246,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 6237,
											"end": 6264,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6237,
											"end": 6264,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6237,
											"end": 6264,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6237,
											"end": 6281,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6237,
											"end": 6348,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 6237,
											"end": 6348,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6347,
											"end": 6348,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6237,
											"end": 6348,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 6237,
											"end": 6348,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6237,
											"end": 6348,
											"name": "tag",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 6237,
											"end": 6348,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 6329,
											"end": 6343,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6306,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 6297,
											"end": 6324,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6297,
											"end": 6324,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6324,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "417"
										},
										{
											"begin": 6297,
											"end": 6328,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6344,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6344,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6344,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6297,
											"end": 6344,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6297,
											"end": 6344,
											"name": "tag",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 6297,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6237,
											"end": 6348,
											"name": "tag",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 6237,
											"end": 6348,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6213,
											"end": 6348,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6213,
											"end": 6348,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6358,
											"end": 6380,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6413,
											"end": 6427,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6383,
											"end": 6392,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 6383,
											"end": 6410,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6383,
											"end": 6410,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6383,
											"end": 6410,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6383,
											"end": 6427,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6383,
											"end": 6494,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 6383,
											"end": 6494,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6494,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6383,
											"end": 6494,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 6383,
											"end": 6494,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6383,
											"end": 6494,
											"name": "tag",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 6383,
											"end": 6494,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6443,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 6475,
											"end": 6489,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6443,
											"end": 6452,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 6443,
											"end": 6470,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6443,
											"end": 6470,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6443,
											"end": 6470,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6443,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "417"
										},
										{
											"begin": 6443,
											"end": 6474,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6443,
											"end": 6490,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6443,
											"end": 6490,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6443,
											"end": 6490,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6443,
											"end": 6490,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6443,
											"end": 6490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6443,
											"end": 6490,
											"name": "tag",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 6443,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6383,
											"end": 6494,
											"name": "tag",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 6383,
											"end": 6494,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6358,
											"end": 6494,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6358,
											"end": 6494,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 6707,
											"end": 6710,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 6520,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 6659,
											"end": 6664,
											"name": "PUSH",
											"source": 17,
											"value": "2710"
										},
										{
											"begin": 6520,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "474"
										},
										{
											"begin": 6630,
											"end": 6640,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 6597,
											"end": 6611,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "476"
										},
										{
											"begin": 6565,
											"end": 6578,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6529,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 6520,
											"end": 6547,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6520,
											"end": 6547,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6547,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 6520,
											"end": 6564,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6579,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6579,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6579,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6520,
											"end": 6579,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6579,
											"name": "tag",
											"source": 17,
											"value": "476"
										},
										{
											"begin": 6520,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 6520,
											"end": 6596,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6612,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6612,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6520,
											"end": 6612,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6612,
											"name": "tag",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 6520,
											"end": 6612,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 6520,
											"end": 6629,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6641,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6641,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6641,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6520,
											"end": 6641,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6641,
											"name": "tag",
											"source": 17,
											"value": "474"
										},
										{
											"begin": 6520,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 6520,
											"end": 6658,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6665,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6665,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6665,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6520,
											"end": 6665,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6665,
											"name": "tag",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 6520,
											"end": 6665,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6706,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 6520,
											"end": 6706,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6711,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6711,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6711,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6520,
											"end": 6711,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6520,
											"end": 6711,
											"name": "tag",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 6520,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6513,
											"end": 6711,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6513,
											"end": 6711,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6513,
											"end": 6711,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6513,
											"end": 6711,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6046,
											"end": 6745,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 6046,
											"end": 6745,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6046,
											"end": 6745,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6046,
											"end": 6745,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6046,
											"end": 6745,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6046,
											"end": 6745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "tag",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "484"
										},
										{
											"begin": 2572,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2572,
											"end": 2590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "484"
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "485"
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "486"
										},
										{
											"begin": 2600,
											"end": 2615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "485"
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2637,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2626,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2625,
											"end": 2634,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "487"
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "486"
										},
										{
											"begin": 2625,
											"end": 2644,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "487"
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "tag",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1267,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 16,
											"value": "417"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "283"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 16,
											"value": "425"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "tag",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 2062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1851,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 9,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1805,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 9,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 1872,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4045,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4055,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4068,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4049,
											"end": 4068,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 4049,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DELEGATECALL",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 4118,
											"end": 4124,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4126,
											"end": 4133,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 4091,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3900,
											"end": 4153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6175,
											"end": 6176,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 9,
											"value": "B398979F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6113,
											"end": 6235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4565,
											"end": 4577,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4594,
											"end": 4601,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 4625,
											"end": 4635,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4617,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 4617,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4862,
											"end": 4863,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4841,
											"end": 4851,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4858,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4863,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4889,
											"end": 4890,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4873,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 4867,
											"end": 4890,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4934,
											"end": 4940,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 13,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 4917,
											"end": 4941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4976,
											"end": 4986,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 5003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5543,
											"end": 6030,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 5543,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5694,
											"end": 5695,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5684,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5674,
											"end": 5691,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5674,
											"end": 5695,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5871,
											"end": 5881,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5865,
											"end": 5882,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5942,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5924,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5912,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5925,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5899,
											"end": 5943,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 13,
											"value": "D6BDA27500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 18
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "618"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 18,
											"value": "618"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "620"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 18,
											"value": "620"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "621"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 18,
											"value": "621"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 18,
											"value": "39"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "623"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 18,
											"value": "623"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "629"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 18,
											"value": "629"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "634"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 18,
											"value": "634"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "637"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 18,
											"value": "637"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "638"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 18,
											"value": "638"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "640"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 18,
											"value": "640"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "642"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "643"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 18,
											"value": "643"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 18,
											"value": "642"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "644"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 18,
											"value": "644"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "648"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 18,
											"value": "648"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3339,
											"end": 3456,
											"name": "tag",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 3339,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3448,
											"end": 3449,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3462,
											"end": 3642,
											"name": "tag",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 3462,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3510,
											"end": 3587,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3507,
											"end": 3508,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3500,
											"end": 3588,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 3604,
											"end": 3605,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3612,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3631,
											"end": 3635,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 3628,
											"end": 3629,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3621,
											"end": 3636,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3648,
											"end": 3929,
											"name": "tag",
											"source": 18,
											"value": "551"
										},
										{
											"begin": 3648,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "654"
										},
										{
											"begin": 3753,
											"end": 3757,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 3731,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "tag",
											"source": 18,
											"value": "654"
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3723,
											"end": 3729,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3719,
											"end": 3759,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3861,
											"end": 3867,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3846,
											"end": 3868,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 3825,
											"end": 3843,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3813,
											"end": 3823,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3810,
											"end": 3844,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3807,
											"end": 3869,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 3804,
											"end": 3892,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3804,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "655"
										},
										{
											"begin": 3804,
											"end": 3892,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "656"
										},
										{
											"begin": 3872,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 3872,
											"end": 3890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3890,
											"name": "tag",
											"source": 18,
											"value": "656"
										},
										{
											"begin": 3872,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3804,
											"end": 3892,
											"name": "tag",
											"source": 18,
											"value": "655"
										},
										{
											"begin": 3804,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3912,
											"end": 3922,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3908,
											"end": 3910,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3691,
											"end": 3929,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3648,
											"end": 3929,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3648,
											"end": 3929,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3648,
											"end": 3929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3935,
											"end": 4064,
											"name": "tag",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 3935,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3969,
											"end": 3975,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3996,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "658"
										},
										{
											"begin": 3996,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 3996,
											"end": 4016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3996,
											"end": 4016,
											"name": "tag",
											"source": 18,
											"value": "658"
										},
										{
											"begin": 3996,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3986,
											"end": 4016,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3986,
											"end": 4016,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4025,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "659"
										},
										{
											"begin": 4053,
											"end": 4057,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4045,
											"end": 4051,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4025,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "551"
										},
										{
											"begin": 4025,
											"end": 4058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4025,
											"end": 4058,
											"name": "tag",
											"source": 18,
											"value": "659"
										},
										{
											"begin": 4025,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3935,
											"end": 4064,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3935,
											"end": 4064,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3935,
											"end": 4064,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3935,
											"end": 4064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4234,
											"end": 5531,
											"name": "tag",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 4234,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4315,
											"end": 4320,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 4347,
											"end": 4356,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4342,
											"end": 4345,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4338,
											"end": 4357,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4334,
											"end": 4364,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 4331,
											"end": 4448,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4331,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "662"
										},
										{
											"begin": 4331,
											"end": 4448,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "663"
										},
										{
											"begin": 4367,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 4367,
											"end": 4446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4446,
											"name": "tag",
											"source": 18,
											"value": "663"
										},
										{
											"begin": 4367,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4331,
											"end": 4448,
											"name": "tag",
											"source": 18,
											"value": "662"
										},
										{
											"begin": 4331,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "664"
										},
										{
											"begin": 4482,
											"end": 4486,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 4466,
											"end": 4487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "tag",
											"source": 18,
											"value": "664"
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4457,
											"end": 4487,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4457,
											"end": 4487,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4559,
											"end": 4560,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4599,
											"end": 4648,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 4644,
											"end": 4647,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4635,
											"end": 4641,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4624,
											"end": 4633,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4620,
											"end": 4642,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4599,
											"end": 4648,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 4599,
											"end": 4648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4599,
											"end": 4648,
											"name": "tag",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 4599,
											"end": 4648,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4592,
											"end": 4596,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4590,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4581,
											"end": 4597,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4574,
											"end": 4649,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4497,
											"end": 4660,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4732,
											"end": 4734,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4773,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "666"
										},
										{
											"begin": 4818,
											"end": 4821,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4809,
											"end": 4815,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4798,
											"end": 4807,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4794,
											"end": 4816,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4773,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 4773,
											"end": 4822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4773,
											"end": 4822,
											"name": "tag",
											"source": 18,
											"value": "666"
										},
										{
											"begin": 4773,
											"end": 4822,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4766,
											"end": 4770,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4764,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4755,
											"end": 4771,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4748,
											"end": 4823,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4670,
											"end": 4834,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4902,
											"end": 4904,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4943,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "667"
										},
										{
											"begin": 4988,
											"end": 4991,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4979,
											"end": 4985,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4968,
											"end": 4977,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4964,
											"end": 4986,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4943,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 4943,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4943,
											"end": 4992,
											"name": "tag",
											"source": 18,
											"value": "667"
										},
										{
											"begin": 4943,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4936,
											"end": 4940,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4929,
											"end": 4934,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4925,
											"end": 4941,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4918,
											"end": 4993,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4844,
											"end": 5004,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5075,
											"end": 5077,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 5116,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "668"
										},
										{
											"begin": 5161,
											"end": 5164,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5152,
											"end": 5158,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5141,
											"end": 5150,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5137,
											"end": 5159,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5116,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 5116,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5116,
											"end": 5165,
											"name": "tag",
											"source": 18,
											"value": "668"
										},
										{
											"begin": 5116,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5109,
											"end": 5113,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 5102,
											"end": 5107,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5098,
											"end": 5114,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5091,
											"end": 5166,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5014,
											"end": 5177,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5249,
											"end": 5252,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 5291,
											"end": 5340,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "669"
										},
										{
											"begin": 5336,
											"end": 5339,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5316,
											"end": 5325,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5312,
											"end": 5334,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5291,
											"end": 5340,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 5291,
											"end": 5340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5291,
											"end": 5340,
											"name": "tag",
											"source": 18,
											"value": "669"
										},
										{
											"begin": 5291,
											"end": 5340,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5284,
											"end": 5288,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 5277,
											"end": 5282,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5273,
											"end": 5289,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5266,
											"end": 5341,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5187,
											"end": 5352,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5421,
											"end": 5424,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 5463,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "670"
										},
										{
											"begin": 5508,
											"end": 5511,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5499,
											"end": 5505,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5497,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5484,
											"end": 5506,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5463,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 5463,
											"end": 5512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5463,
											"end": 5512,
											"name": "tag",
											"source": 18,
											"value": "670"
										},
										{
											"begin": 5463,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5456,
											"end": 5460,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 5449,
											"end": 5454,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5445,
											"end": 5461,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5438,
											"end": 5513,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5362,
											"end": 5524,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4234,
											"end": 5531,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4234,
											"end": 5531,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4234,
											"end": 5531,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4234,
											"end": 5531,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4234,
											"end": 5531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5537,
											"end": 5931,
											"name": "tag",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 5537,
											"end": 5931,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5677,
											"end": 5680,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 5665,
											"end": 5674,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5656,
											"end": 5663,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5652,
											"end": 5675,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5648,
											"end": 5681,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5645,
											"end": 5765,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5645,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "672"
										},
										{
											"begin": 5645,
											"end": 5765,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5684,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "673"
										},
										{
											"begin": 5684,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 5684,
											"end": 5763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5684,
											"end": 5763,
											"name": "tag",
											"source": 18,
											"value": "673"
										},
										{
											"begin": 5684,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5645,
											"end": 5765,
											"name": "tag",
											"source": 18,
											"value": "672"
										},
										{
											"begin": 5645,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5804,
											"end": 5805,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "674"
										},
										{
											"begin": 5906,
											"end": 5913,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5897,
											"end": 5903,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5886,
											"end": 5895,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5882,
											"end": 5904,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5829,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 5829,
											"end": 5914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5829,
											"end": 5914,
											"name": "tag",
											"source": 18,
											"value": "674"
										},
										{
											"begin": 5829,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5819,
											"end": 5914,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5819,
											"end": 5914,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5775,
											"end": 5924,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5537,
											"end": 5931,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5537,
											"end": 5931,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5537,
											"end": 5931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5537,
											"end": 5931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5537,
											"end": 5931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5937,
											"end": 6055,
											"name": "tag",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 5937,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "676"
										},
										{
											"begin": 6042,
											"end": 6047,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 6024,
											"end": 6048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "tag",
											"source": 18,
											"value": "676"
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6019,
											"end": 6022,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6012,
											"end": 6049,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5937,
											"end": 6055,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5937,
											"end": 6055,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5937,
											"end": 6055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6061,
											"end": 6283,
											"name": "tag",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 6061,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6154,
											"end": 6158,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6192,
											"end": 6194,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6181,
											"end": 6190,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6169,
											"end": 6195,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6169,
											"end": 6195,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6205,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "678"
										},
										{
											"begin": 6273,
											"end": 6274,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6262,
											"end": 6271,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6258,
											"end": 6275,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6249,
											"end": 6255,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6205,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 6205,
											"end": 6276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6205,
											"end": 6276,
											"name": "tag",
											"source": 18,
											"value": "678"
										},
										{
											"begin": 6205,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6061,
											"end": 6283,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6061,
											"end": 6283,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6061,
											"end": 6283,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6061,
											"end": 6283,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6061,
											"end": 6283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6289,
											"end": 6618,
											"name": "tag",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 6289,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6348,
											"end": 6354,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6399,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6385,
											"end": 6394,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6376,
											"end": 6383,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6372,
											"end": 6395,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6368,
											"end": 6400,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 6365,
											"end": 6484,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6365,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "680"
										},
										{
											"begin": 6365,
											"end": 6484,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6403,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "681"
										},
										{
											"begin": 6403,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 6403,
											"end": 6482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6403,
											"end": 6482,
											"name": "tag",
											"source": 18,
											"value": "681"
										},
										{
											"begin": 6403,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6365,
											"end": 6484,
											"name": "tag",
											"source": 18,
											"value": "680"
										},
										{
											"begin": 6365,
											"end": 6484,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6523,
											"end": 6524,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "682"
										},
										{
											"begin": 6593,
											"end": 6600,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6569,
											"end": 6591,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6548,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 6548,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6548,
											"end": 6601,
											"name": "tag",
											"source": 18,
											"value": "682"
										},
										{
											"begin": 6548,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6538,
											"end": 6601,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6538,
											"end": 6601,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6494,
											"end": 6611,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6289,
											"end": 6618,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6289,
											"end": 6618,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6289,
											"end": 6618,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6289,
											"end": 6618,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6289,
											"end": 6618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6624,
											"end": 7243,
											"name": "tag",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 6624,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6701,
											"end": 6707,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6709,
											"end": 6715,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6717,
											"end": 6723,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6766,
											"end": 6768,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 6754,
											"end": 6763,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6745,
											"end": 6752,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6741,
											"end": 6764,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6737,
											"end": 6769,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 6734,
											"end": 6853,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6734,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "684"
										},
										{
											"begin": 6734,
											"end": 6853,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6772,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "685"
										},
										{
											"begin": 6772,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 6772,
											"end": 6851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6772,
											"end": 6851,
											"name": "tag",
											"source": 18,
											"value": "685"
										},
										{
											"begin": 6772,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6734,
											"end": 6853,
											"name": "tag",
											"source": 18,
											"value": "684"
										},
										{
											"begin": 6734,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6892,
											"end": 6893,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6917,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "686"
										},
										{
											"begin": 6962,
											"end": 6969,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6953,
											"end": 6959,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6942,
											"end": 6951,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 6938,
											"end": 6960,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6917,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 6917,
											"end": 6970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6917,
											"end": 6970,
											"name": "tag",
											"source": 18,
											"value": "686"
										},
										{
											"begin": 6917,
											"end": 6970,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6907,
											"end": 6970,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 6907,
											"end": 6970,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6863,
											"end": 6980,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7019,
											"end": 7021,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7045,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "687"
										},
										{
											"begin": 7090,
											"end": 7097,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 7081,
											"end": 7087,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7070,
											"end": 7079,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 7066,
											"end": 7088,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7045,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 7045,
											"end": 7098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7045,
											"end": 7098,
											"name": "tag",
											"source": 18,
											"value": "687"
										},
										{
											"begin": 7045,
											"end": 7098,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7035,
											"end": 7098,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7035,
											"end": 7098,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6990,
											"end": 7108,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7147,
											"end": 7149,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7173,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "688"
										},
										{
											"begin": 7218,
											"end": 7225,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 7209,
											"end": 7215,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7198,
											"end": 7207,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 7194,
											"end": 7216,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7173,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 7173,
											"end": 7226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7173,
											"end": 7226,
											"name": "tag",
											"source": 18,
											"value": "688"
										},
										{
											"begin": 7173,
											"end": 7226,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7163,
											"end": 7226,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7163,
											"end": 7226,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7118,
											"end": 7236,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6624,
											"end": 7243,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6624,
											"end": 7243,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6624,
											"end": 7243,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6624,
											"end": 7243,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6624,
											"end": 7243,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6624,
											"end": 7243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7249,
											"end": 7335,
											"name": "tag",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 7249,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7284,
											"end": 7291,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7324,
											"end": 7328,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 7317,
											"end": 7322,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7313,
											"end": 7329,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7302,
											"end": 7329,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7302,
											"end": 7329,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7249,
											"end": 7335,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7249,
											"end": 7335,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7249,
											"end": 7335,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7249,
											"end": 7335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7341,
											"end": 7453,
											"name": "tag",
											"source": 18,
											"value": "557"
										},
										{
											"begin": 7341,
											"end": 7453,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7424,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "691"
										},
										{
											"begin": 7440,
											"end": 7445,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7424,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 7424,
											"end": 7446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7424,
											"end": 7446,
											"name": "tag",
											"source": 18,
											"value": "691"
										},
										{
											"begin": 7424,
											"end": 7446,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7419,
											"end": 7422,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7412,
											"end": 7447,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7341,
											"end": 7453,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7341,
											"end": 7453,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7341,
											"end": 7453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7459,
											"end": 7673,
											"name": "tag",
											"source": 18,
											"value": "72"
										},
										{
											"begin": 7459,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7548,
											"end": 7552,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7588,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7575,
											"end": 7584,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7571,
											"end": 7589,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7599,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "693"
										},
										{
											"begin": 7663,
											"end": 7664,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7652,
											"end": 7661,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7648,
											"end": 7665,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7639,
											"end": 7645,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7599,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "557"
										},
										{
											"begin": 7599,
											"end": 7666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7599,
											"end": 7666,
											"name": "tag",
											"source": 18,
											"value": "693"
										},
										{
											"begin": 7599,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7459,
											"end": 7673,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7459,
											"end": 7673,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7459,
											"end": 7673,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7459,
											"end": 7673,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7459,
											"end": 7673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7679,
											"end": 8454,
											"name": "tag",
											"source": 18,
											"value": "77"
										},
										{
											"begin": 7679,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7912,
											"end": 7916,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7950,
											"end": 7953,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 7939,
											"end": 7948,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7935,
											"end": 7954,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7927,
											"end": 7954,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7927,
											"end": 7954,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7964,
											"end": 8035,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "695"
										},
										{
											"begin": 8032,
											"end": 8033,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8021,
											"end": 8030,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8017,
											"end": 8034,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8008,
											"end": 8014,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 7964,
											"end": 8035,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 7964,
											"end": 8035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7964,
											"end": 8035,
											"name": "tag",
											"source": 18,
											"value": "695"
										},
										{
											"begin": 7964,
											"end": 8035,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8045,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "696"
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8102,
											"end": 8111,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8098,
											"end": 8116,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8089,
											"end": 8095,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 8045,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 8045,
											"end": 8117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8045,
											"end": 8117,
											"name": "tag",
											"source": 18,
											"value": "696"
										},
										{
											"begin": 8045,
											"end": 8117,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8127,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "697"
										},
										{
											"begin": 8195,
											"end": 8197,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8184,
											"end": 8193,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8180,
											"end": 8198,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8171,
											"end": 8177,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 8127,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 8127,
											"end": 8199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8127,
											"end": 8199,
											"name": "tag",
											"source": 18,
											"value": "697"
										},
										{
											"begin": 8127,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8209,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "698"
										},
										{
											"begin": 8277,
											"end": 8279,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 8266,
											"end": 8275,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8262,
											"end": 8280,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8253,
											"end": 8259,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8209,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 8209,
											"end": 8281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8209,
											"end": 8281,
											"name": "tag",
											"source": 18,
											"value": "698"
										},
										{
											"begin": 8209,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8291,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "699"
										},
										{
											"begin": 8359,
											"end": 8362,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 8348,
											"end": 8357,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8344,
											"end": 8363,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8335,
											"end": 8341,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8291,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 8291,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8291,
											"end": 8364,
											"name": "tag",
											"source": 18,
											"value": "699"
										},
										{
											"begin": 8291,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8374,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "700"
										},
										{
											"begin": 8442,
											"end": 8445,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 8431,
											"end": 8440,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8427,
											"end": 8446,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8418,
											"end": 8424,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8374,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 8374,
											"end": 8447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8374,
											"end": 8447,
											"name": "tag",
											"source": 18,
											"value": "700"
										},
										{
											"begin": 8374,
											"end": 8447,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7679,
											"end": 8454,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 7679,
											"end": 8454,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 7679,
											"end": 8454,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7679,
											"end": 8454,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7679,
											"end": 8454,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7679,
											"end": 8454,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7679,
											"end": 8454,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7679,
											"end": 8454,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7679,
											"end": 8454,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7679,
											"end": 8454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8460,
											"end": 8577,
											"name": "tag",
											"source": 18,
											"value": "558"
										},
										{
											"begin": 8460,
											"end": 8577,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8569,
											"end": 8570,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8566,
											"end": 8567,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8559,
											"end": 8571,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8583,
											"end": 8700,
											"name": "tag",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 8583,
											"end": 8700,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8692,
											"end": 8693,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8689,
											"end": 8690,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8682,
											"end": 8694,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8706,
											"end": 9013,
											"name": "tag",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 8706,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8767,
											"end": 8771,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8857,
											"end": 8875,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8849,
											"end": 8855,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8846,
											"end": 8876,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8899,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8899,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "704"
										},
										{
											"begin": 8843,
											"end": 8899,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8879,
											"end": 8897,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "705"
										},
										{
											"begin": 8879,
											"end": 8897,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 8879,
											"end": 8897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8879,
											"end": 8897,
											"name": "tag",
											"source": 18,
											"value": "705"
										},
										{
											"begin": 8879,
											"end": 8897,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8843,
											"end": 8899,
											"name": "tag",
											"source": 18,
											"value": "704"
										},
										{
											"begin": 8843,
											"end": 8899,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8917,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "706"
										},
										{
											"begin": 8939,
											"end": 8945,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8917,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 8917,
											"end": 8946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8917,
											"end": 8946,
											"name": "tag",
											"source": 18,
											"value": "706"
										},
										{
											"begin": 8917,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8909,
											"end": 8946,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8909,
											"end": 8946,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9001,
											"end": 9005,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8995,
											"end": 8999,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8991,
											"end": 9006,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8983,
											"end": 9006,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8983,
											"end": 9006,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8706,
											"end": 9013,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8706,
											"end": 9013,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8706,
											"end": 9013,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8706,
											"end": 9013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9019,
											"end": 9167,
											"name": "tag",
											"source": 18,
											"value": "561"
										},
										{
											"begin": 9019,
											"end": 9167,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9117,
											"end": 9123,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9112,
											"end": 9115,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9107,
											"end": 9110,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9094,
											"end": 9124,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 9158,
											"end": 9159,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9149,
											"end": 9155,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9144,
											"end": 9147,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9140,
											"end": 9156,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9133,
											"end": 9160,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9019,
											"end": 9167,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9019,
											"end": 9167,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9019,
											"end": 9167,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9019,
											"end": 9167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9173,
											"end": 9596,
											"name": "tag",
											"source": 18,
											"value": "562"
										},
										{
											"begin": 9173,
											"end": 9596,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9250,
											"end": 9255,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9275,
											"end": 9340,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "709"
										},
										{
											"begin": 9291,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "710"
										},
										{
											"begin": 9332,
											"end": 9338,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9291,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 9291,
											"end": 9339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9291,
											"end": 9339,
											"name": "tag",
											"source": 18,
											"value": "710"
										},
										{
											"begin": 9291,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9275,
											"end": 9340,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 9275,
											"end": 9340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9275,
											"end": 9340,
											"name": "tag",
											"source": 18,
											"value": "709"
										},
										{
											"begin": 9275,
											"end": 9340,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9266,
											"end": 9340,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9266,
											"end": 9340,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9363,
											"end": 9369,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9356,
											"end": 9361,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9349,
											"end": 9370,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9401,
											"end": 9405,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9394,
											"end": 9399,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9390,
											"end": 9406,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9439,
											"end": 9442,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9430,
											"end": 9436,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9425,
											"end": 9428,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9421,
											"end": 9437,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9418,
											"end": 9443,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9415,
											"end": 9527,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9415,
											"end": 9527,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "711"
										},
										{
											"begin": 9415,
											"end": 9527,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9446,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "712"
										},
										{
											"begin": 9446,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 9446,
											"end": 9525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9446,
											"end": 9525,
											"name": "tag",
											"source": 18,
											"value": "712"
										},
										{
											"begin": 9446,
											"end": 9525,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9415,
											"end": 9527,
											"name": "tag",
											"source": 18,
											"value": "711"
										},
										{
											"begin": 9415,
											"end": 9527,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9536,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "713"
										},
										{
											"begin": 9583,
											"end": 9589,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9578,
											"end": 9581,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9573,
											"end": 9576,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9536,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "561"
										},
										{
											"begin": 9536,
											"end": 9590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9536,
											"end": 9590,
											"name": "tag",
											"source": 18,
											"value": "713"
										},
										{
											"begin": 9536,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9256,
											"end": 9596,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9173,
											"end": 9596,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 9173,
											"end": 9596,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9173,
											"end": 9596,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9173,
											"end": 9596,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9173,
											"end": 9596,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9173,
											"end": 9596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9615,
											"end": 9953,
											"name": "tag",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 9615,
											"end": 9953,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9670,
											"end": 9675,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9719,
											"end": 9722,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9712,
											"end": 9716,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 9704,
											"end": 9710,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9700,
											"end": 9717,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9696,
											"end": 9723,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 9686,
											"end": 9808,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "715"
										},
										{
											"begin": 9686,
											"end": 9808,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9727,
											"end": 9806,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "716"
										},
										{
											"begin": 9727,
											"end": 9806,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "558"
										},
										{
											"begin": 9727,
											"end": 9806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9727,
											"end": 9806,
											"name": "tag",
											"source": 18,
											"value": "716"
										},
										{
											"begin": 9727,
											"end": 9806,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9686,
											"end": 9808,
											"name": "tag",
											"source": 18,
											"value": "715"
										},
										{
											"begin": 9686,
											"end": 9808,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9844,
											"end": 9850,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9831,
											"end": 9851,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 9869,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "717"
										},
										{
											"begin": 9943,
											"end": 9946,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9935,
											"end": 9941,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9928,
											"end": 9932,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9920,
											"end": 9926,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 9916,
											"end": 9933,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9869,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "562"
										},
										{
											"begin": 9869,
											"end": 9947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9869,
											"end": 9947,
											"name": "tag",
											"source": 18,
											"value": "717"
										},
										{
											"begin": 9869,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9860,
											"end": 9947,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9860,
											"end": 9947,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9676,
											"end": 9953,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9615,
											"end": 9953,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9615,
											"end": 9953,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9615,
											"end": 9953,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9615,
											"end": 9953,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9615,
											"end": 9953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9959,
											"end": 10611,
											"name": "tag",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 9959,
											"end": 10611,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10036,
											"end": 10042,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10044,
											"end": 10050,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10093,
											"end": 10095,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 10081,
											"end": 10090,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10072,
											"end": 10079,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10068,
											"end": 10091,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 10064,
											"end": 10096,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 10061,
											"end": 10180,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10061,
											"end": 10180,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "719"
										},
										{
											"begin": 10061,
											"end": 10180,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10099,
											"end": 10178,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "720"
										},
										{
											"begin": 10099,
											"end": 10178,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 10099,
											"end": 10178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10099,
											"end": 10178,
											"name": "tag",
											"source": 18,
											"value": "720"
										},
										{
											"begin": 10099,
											"end": 10178,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10061,
											"end": 10180,
											"name": "tag",
											"source": 18,
											"value": "719"
										},
										{
											"begin": 10061,
											"end": 10180,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10219,
											"end": 10220,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10244,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "721"
										},
										{
											"begin": 10289,
											"end": 10296,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10280,
											"end": 10286,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10269,
											"end": 10278,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 10265,
											"end": 10287,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10244,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 10244,
											"end": 10297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10244,
											"end": 10297,
											"name": "tag",
											"source": 18,
											"value": "721"
										},
										{
											"begin": 10244,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10234,
											"end": 10297,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10234,
											"end": 10297,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10190,
											"end": 10307,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10374,
											"end": 10376,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10363,
											"end": 10372,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10359,
											"end": 10377,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10346,
											"end": 10378,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 10405,
											"end": 10423,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10397,
											"end": 10403,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10394,
											"end": 10424,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10391,
											"end": 10508,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10391,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "722"
										},
										{
											"begin": 10391,
											"end": 10508,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10427,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "723"
										},
										{
											"begin": 10427,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 10427,
											"end": 10506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10427,
											"end": 10506,
											"name": "tag",
											"source": 18,
											"value": "723"
										},
										{
											"begin": 10427,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10391,
											"end": 10508,
											"name": "tag",
											"source": 18,
											"value": "722"
										},
										{
											"begin": 10391,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "724"
										},
										{
											"begin": 10586,
											"end": 10593,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10577,
											"end": 10583,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10566,
											"end": 10575,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 10562,
											"end": 10584,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 10532,
											"end": 10594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "tag",
											"source": 18,
											"value": "724"
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10522,
											"end": 10594,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10522,
											"end": 10594,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10317,
											"end": 10604,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9959,
											"end": 10611,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9959,
											"end": 10611,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9959,
											"end": 10611,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9959,
											"end": 10611,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9959,
											"end": 10611,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9959,
											"end": 10611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10617,
											"end": 10694,
											"name": "tag",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 10617,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10654,
											"end": 10661,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10683,
											"end": 10688,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10672,
											"end": 10688,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10672,
											"end": 10688,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10617,
											"end": 10694,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10617,
											"end": 10694,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10617,
											"end": 10694,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10617,
											"end": 10694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10700,
											"end": 10818,
											"name": "tag",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 10700,
											"end": 10818,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10787,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "727"
										},
										{
											"begin": 10805,
											"end": 10810,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10787,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 10787,
											"end": 10811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10787,
											"end": 10811,
											"name": "tag",
											"source": 18,
											"value": "727"
										},
										{
											"begin": 10787,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10782,
											"end": 10785,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10775,
											"end": 10812,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10700,
											"end": 10818,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10700,
											"end": 10818,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10700,
											"end": 10818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10824,
											"end": 11046,
											"name": "tag",
											"source": 18,
											"value": "89"
										},
										{
											"begin": 10824,
											"end": 11046,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10917,
											"end": 10921,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10955,
											"end": 10957,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10944,
											"end": 10953,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10940,
											"end": 10958,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10932,
											"end": 10958,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10932,
											"end": 10958,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10968,
											"end": 11039,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "729"
										},
										{
											"begin": 11036,
											"end": 11037,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11025,
											"end": 11034,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11021,
											"end": 11038,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11012,
											"end": 11018,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10968,
											"end": 11039,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 10968,
											"end": 11039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10968,
											"end": 11039,
											"name": "tag",
											"source": 18,
											"value": "729"
										},
										{
											"begin": 10968,
											"end": 11039,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10824,
											"end": 11046,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10824,
											"end": 11046,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10824,
											"end": 11046,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10824,
											"end": 11046,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10824,
											"end": 11046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11052,
											"end": 11112,
											"name": "tag",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 11052,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11080,
											"end": 11083,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11101,
											"end": 11106,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11094,
											"end": 11106,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11094,
											"end": 11106,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11052,
											"end": 11112,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11052,
											"end": 11112,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11052,
											"end": 11112,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11052,
											"end": 11112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11118,
											"end": 11260,
											"name": "tag",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 11118,
											"end": 11260,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11168,
											"end": 11177,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11201,
											"end": 11254,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "732"
										},
										{
											"begin": 11219,
											"end": 11253,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "733"
										},
										{
											"begin": 11228,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "734"
										},
										{
											"begin": 11246,
											"end": 11251,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11228,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 11228,
											"end": 11252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11228,
											"end": 11252,
											"name": "tag",
											"source": 18,
											"value": "734"
										},
										{
											"begin": 11228,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11219,
											"end": 11253,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 11219,
											"end": 11253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11219,
											"end": 11253,
											"name": "tag",
											"source": 18,
											"value": "733"
										},
										{
											"begin": 11219,
											"end": 11253,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11201,
											"end": 11254,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 11201,
											"end": 11254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11201,
											"end": 11254,
											"name": "tag",
											"source": 18,
											"value": "732"
										},
										{
											"begin": 11201,
											"end": 11254,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11188,
											"end": 11254,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11188,
											"end": 11254,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11118,
											"end": 11260,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11118,
											"end": 11260,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11118,
											"end": 11260,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11118,
											"end": 11260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11266,
											"end": 11392,
											"name": "tag",
											"source": 18,
											"value": "568"
										},
										{
											"begin": 11266,
											"end": 11392,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11316,
											"end": 11325,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "736"
										},
										{
											"begin": 11380,
											"end": 11385,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 11349,
											"end": 11386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "tag",
											"source": 18,
											"value": "736"
										},
										{
											"begin": 11349,
											"end": 11386,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11336,
											"end": 11386,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11336,
											"end": 11386,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11266,
											"end": 11392,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11266,
											"end": 11392,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11266,
											"end": 11392,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11266,
											"end": 11392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11398,
											"end": 11553,
											"name": "tag",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 11398,
											"end": 11553,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11477,
											"end": 11486,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11510,
											"end": 11547,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "738"
										},
										{
											"begin": 11541,
											"end": 11546,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11510,
											"end": 11547,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "568"
										},
										{
											"begin": 11510,
											"end": 11547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11510,
											"end": 11547,
											"name": "tag",
											"source": 18,
											"value": "738"
										},
										{
											"begin": 11510,
											"end": 11547,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11497,
											"end": 11547,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11497,
											"end": 11547,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11398,
											"end": 11553,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11398,
											"end": 11553,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11398,
											"end": 11553,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11398,
											"end": 11553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11559,
											"end": 11748,
											"name": "tag",
											"source": 18,
											"value": "570"
										},
										{
											"begin": 11559,
											"end": 11748,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11675,
											"end": 11741,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "740"
										},
										{
											"begin": 11735,
											"end": 11740,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11675,
											"end": 11741,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 11675,
											"end": 11741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11675,
											"end": 11741,
											"name": "tag",
											"source": 18,
											"value": "740"
										},
										{
											"begin": 11675,
											"end": 11741,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11670,
											"end": 11673,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11663,
											"end": 11742,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11559,
											"end": 11748,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11559,
											"end": 11748,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11559,
											"end": 11748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11754,
											"end": 12034,
											"name": "tag",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 11754,
											"end": 12034,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11876,
											"end": 11880,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11914,
											"end": 11916,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11903,
											"end": 11912,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11899,
											"end": 11917,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11891,
											"end": 11917,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11891,
											"end": 11917,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11927,
											"end": 12027,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "742"
										},
										{
											"begin": 12024,
											"end": 12025,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12013,
											"end": 12022,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12009,
											"end": 12026,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12000,
											"end": 12006,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11927,
											"end": 12027,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "570"
										},
										{
											"begin": 11927,
											"end": 12027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11927,
											"end": 12027,
											"name": "tag",
											"source": 18,
											"value": "742"
										},
										{
											"begin": 11927,
											"end": 12027,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11754,
											"end": 12034,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11754,
											"end": 12034,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11754,
											"end": 12034,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11754,
											"end": 12034,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11754,
											"end": 12034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12040,
											"end": 12158,
											"name": "tag",
											"source": 18,
											"value": "571"
										},
										{
											"begin": 12040,
											"end": 12158,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12127,
											"end": 12151,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "744"
										},
										{
											"begin": 12145,
											"end": 12150,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12127,
											"end": 12151,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 12127,
											"end": 12151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12127,
											"end": 12151,
											"name": "tag",
											"source": 18,
											"value": "744"
										},
										{
											"begin": 12127,
											"end": 12151,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12122,
											"end": 12125,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12115,
											"end": 12152,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12040,
											"end": 12158,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12040,
											"end": 12158,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12040,
											"end": 12158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12164,
											"end": 12386,
											"name": "tag",
											"source": 18,
											"value": "114"
										},
										{
											"begin": 12164,
											"end": 12386,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12257,
											"end": 12261,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12295,
											"end": 12297,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12284,
											"end": 12293,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12280,
											"end": 12298,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12272,
											"end": 12298,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12272,
											"end": 12298,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12308,
											"end": 12379,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "746"
										},
										{
											"begin": 12376,
											"end": 12377,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12365,
											"end": 12374,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12361,
											"end": 12378,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12352,
											"end": 12358,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12308,
											"end": 12379,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "571"
										},
										{
											"begin": 12308,
											"end": 12379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12308,
											"end": 12379,
											"name": "tag",
											"source": 18,
											"value": "746"
										},
										{
											"begin": 12308,
											"end": 12379,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12164,
											"end": 12386,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12164,
											"end": 12386,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12164,
											"end": 12386,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12164,
											"end": 12386,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12164,
											"end": 12386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12392,
											"end": 12700,
											"name": "tag",
											"source": 18,
											"value": "572"
										},
										{
											"begin": 12392,
											"end": 12700,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12454,
											"end": 12458,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12544,
											"end": 12562,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12536,
											"end": 12542,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12533,
											"end": 12563,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 12530,
											"end": 12586,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12530,
											"end": 12586,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "748"
										},
										{
											"begin": 12530,
											"end": 12586,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12566,
											"end": 12584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "749"
										},
										{
											"begin": 12566,
											"end": 12584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 12566,
											"end": 12584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12566,
											"end": 12584,
											"name": "tag",
											"source": 18,
											"value": "749"
										},
										{
											"begin": 12566,
											"end": 12584,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12530,
											"end": 12586,
											"name": "tag",
											"source": 18,
											"value": "748"
										},
										{
											"begin": 12530,
											"end": 12586,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12604,
											"end": 12633,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "750"
										},
										{
											"begin": 12626,
											"end": 12632,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12604,
											"end": 12633,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 12604,
											"end": 12633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12604,
											"end": 12633,
											"name": "tag",
											"source": 18,
											"value": "750"
										},
										{
											"begin": 12604,
											"end": 12633,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12596,
											"end": 12633,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12596,
											"end": 12633,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12688,
											"end": 12692,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12682,
											"end": 12686,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12678,
											"end": 12693,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12670,
											"end": 12693,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12670,
											"end": 12693,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12392,
											"end": 12700,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12392,
											"end": 12700,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12392,
											"end": 12700,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12392,
											"end": 12700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12706,
											"end": 13131,
											"name": "tag",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 12706,
											"end": 13131,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12784,
											"end": 12789,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12809,
											"end": 12875,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "752"
										},
										{
											"begin": 12825,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "753"
										},
										{
											"begin": 12867,
											"end": 12873,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12825,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "572"
										},
										{
											"begin": 12825,
											"end": 12874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12825,
											"end": 12874,
											"name": "tag",
											"source": 18,
											"value": "753"
										},
										{
											"begin": 12825,
											"end": 12874,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12809,
											"end": 12875,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 12809,
											"end": 12875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12809,
											"end": 12875,
											"name": "tag",
											"source": 18,
											"value": "752"
										},
										{
											"begin": 12809,
											"end": 12875,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12800,
											"end": 12875,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12800,
											"end": 12875,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12898,
											"end": 12904,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12891,
											"end": 12896,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12884,
											"end": 12905,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12936,
											"end": 12940,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12929,
											"end": 12934,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12925,
											"end": 12941,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12974,
											"end": 12977,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12965,
											"end": 12971,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12960,
											"end": 12963,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12956,
											"end": 12972,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12953,
											"end": 12978,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 12950,
											"end": 13062,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12950,
											"end": 13062,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "754"
										},
										{
											"begin": 12950,
											"end": 13062,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12981,
											"end": 13060,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "755"
										},
										{
											"begin": 12981,
											"end": 13060,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 12981,
											"end": 13060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12981,
											"end": 13060,
											"name": "tag",
											"source": 18,
											"value": "755"
										},
										{
											"begin": 12981,
											"end": 13060,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12950,
											"end": 13062,
											"name": "tag",
											"source": 18,
											"value": "754"
										},
										{
											"begin": 12950,
											"end": 13062,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13071,
											"end": 13125,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "756"
										},
										{
											"begin": 13118,
											"end": 13124,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13113,
											"end": 13116,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13108,
											"end": 13111,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13071,
											"end": 13125,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "561"
										},
										{
											"begin": 13071,
											"end": 13125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13071,
											"end": 13125,
											"name": "tag",
											"source": 18,
											"value": "756"
										},
										{
											"begin": 13071,
											"end": 13125,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12790,
											"end": 13131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12706,
											"end": 13131,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 12706,
											"end": 13131,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12706,
											"end": 13131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12706,
											"end": 13131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12706,
											"end": 13131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12706,
											"end": 13131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13151,
											"end": 13491,
											"name": "tag",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 13151,
											"end": 13491,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13207,
											"end": 13212,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13256,
											"end": 13259,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13249,
											"end": 13253,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 13241,
											"end": 13247,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13237,
											"end": 13254,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13233,
											"end": 13260,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 13223,
											"end": 13345,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "758"
										},
										{
											"begin": 13223,
											"end": 13345,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13264,
											"end": 13343,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "759"
										},
										{
											"begin": 13264,
											"end": 13343,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "558"
										},
										{
											"begin": 13264,
											"end": 13343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13264,
											"end": 13343,
											"name": "tag",
											"source": 18,
											"value": "759"
										},
										{
											"begin": 13264,
											"end": 13343,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13223,
											"end": 13345,
											"name": "tag",
											"source": 18,
											"value": "758"
										},
										{
											"begin": 13223,
											"end": 13345,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13381,
											"end": 13387,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13368,
											"end": 13388,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 13406,
											"end": 13485,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "760"
										},
										{
											"begin": 13481,
											"end": 13484,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13473,
											"end": 13479,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13466,
											"end": 13470,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13458,
											"end": 13464,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 13454,
											"end": 13471,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13406,
											"end": 13485,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 13406,
											"end": 13485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13406,
											"end": 13485,
											"name": "tag",
											"source": 18,
											"value": "760"
										},
										{
											"begin": 13406,
											"end": 13485,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13397,
											"end": 13485,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13397,
											"end": 13485,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13213,
											"end": 13491,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13151,
											"end": 13491,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13151,
											"end": 13491,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13151,
											"end": 13491,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13151,
											"end": 13491,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13151,
											"end": 13491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13497,
											"end": 14686,
											"name": "tag",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 13497,
											"end": 14686,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13635,
											"end": 13641,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13643,
											"end": 13649,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 13651,
											"end": 13657,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13659,
											"end": 13665,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 13708,
											"end": 13711,
											"name": "PUSH",
											"source": 18,
											"value": "120"
										},
										{
											"begin": 13696,
											"end": 13705,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13687,
											"end": 13694,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 13683,
											"end": 13706,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 13679,
											"end": 13712,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 13676,
											"end": 13796,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13676,
											"end": 13796,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "762"
										},
										{
											"begin": 13676,
											"end": 13796,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13715,
											"end": 13794,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "763"
										},
										{
											"begin": 13715,
											"end": 13794,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 13715,
											"end": 13794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13715,
											"end": 13794,
											"name": "tag",
											"source": 18,
											"value": "763"
										},
										{
											"begin": 13715,
											"end": 13794,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13676,
											"end": 13796,
											"name": "tag",
											"source": 18,
											"value": "762"
										},
										{
											"begin": 13676,
											"end": 13796,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13863,
											"end": 13864,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13852,
											"end": 13861,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13848,
											"end": 13865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13835,
											"end": 13866,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 13893,
											"end": 13911,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13885,
											"end": 13891,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13882,
											"end": 13912,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 13879,
											"end": 13996,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13879,
											"end": 13996,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "764"
										},
										{
											"begin": 13879,
											"end": 13996,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13915,
											"end": 13994,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "765"
										},
										{
											"begin": 13915,
											"end": 13994,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 13915,
											"end": 13994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13915,
											"end": 13994,
											"name": "tag",
											"source": 18,
											"value": "765"
										},
										{
											"begin": 13915,
											"end": 13994,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13879,
											"end": 13996,
											"name": "tag",
											"source": 18,
											"value": "764"
										},
										{
											"begin": 13879,
											"end": 13996,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14020,
											"end": 14083,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "766"
										},
										{
											"begin": 14075,
											"end": 14082,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 14066,
											"end": 14072,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14055,
											"end": 14064,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 14051,
											"end": 14073,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14020,
											"end": 14083,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 14020,
											"end": 14083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14020,
											"end": 14083,
											"name": "tag",
											"source": 18,
											"value": "766"
										},
										{
											"begin": 14020,
											"end": 14083,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14010,
											"end": 14083,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 14010,
											"end": 14083,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13806,
											"end": 14093,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14160,
											"end": 14162,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14149,
											"end": 14158,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14145,
											"end": 14163,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14132,
											"end": 14164,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 14191,
											"end": 14209,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14183,
											"end": 14189,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14180,
											"end": 14210,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 14177,
											"end": 14294,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 14177,
											"end": 14294,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "767"
										},
										{
											"begin": 14177,
											"end": 14294,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14213,
											"end": 14292,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "768"
										},
										{
											"begin": 14213,
											"end": 14292,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 14213,
											"end": 14292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14213,
											"end": 14292,
											"name": "tag",
											"source": 18,
											"value": "768"
										},
										{
											"begin": 14213,
											"end": 14292,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14177,
											"end": 14294,
											"name": "tag",
											"source": 18,
											"value": "767"
										},
										{
											"begin": 14177,
											"end": 14294,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14318,
											"end": 14381,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "769"
										},
										{
											"begin": 14373,
											"end": 14380,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 14364,
											"end": 14370,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14353,
											"end": 14362,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 14349,
											"end": 14371,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14318,
											"end": 14381,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 14318,
											"end": 14381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14318,
											"end": 14381,
											"name": "tag",
											"source": 18,
											"value": "769"
										},
										{
											"begin": 14318,
											"end": 14381,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14308,
											"end": 14381,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 14308,
											"end": 14381,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14103,
											"end": 14391,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14430,
											"end": 14432,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 14456,
											"end": 14509,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "770"
										},
										{
											"begin": 14501,
											"end": 14508,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 14492,
											"end": 14498,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14481,
											"end": 14490,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 14477,
											"end": 14499,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14456,
											"end": 14509,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 14456,
											"end": 14509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14456,
											"end": 14509,
											"name": "tag",
											"source": 18,
											"value": "770"
										},
										{
											"begin": 14456,
											"end": 14509,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14446,
											"end": 14509,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14446,
											"end": 14509,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14401,
											"end": 14519,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14558,
											"end": 14560,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 14584,
											"end": 14669,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "771"
										},
										{
											"begin": 14661,
											"end": 14668,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 14652,
											"end": 14658,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14641,
											"end": 14650,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 14637,
											"end": 14659,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14584,
											"end": 14669,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 14584,
											"end": 14669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14584,
											"end": 14669,
											"name": "tag",
											"source": 18,
											"value": "771"
										},
										{
											"begin": 14584,
											"end": 14669,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14574,
											"end": 14669,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14574,
											"end": 14669,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14529,
											"end": 14679,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13497,
											"end": 14686,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13497,
											"end": 14686,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 13497,
											"end": 14686,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13497,
											"end": 14686,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 13497,
											"end": 14686,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13497,
											"end": 14686,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13497,
											"end": 14686,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13497,
											"end": 14686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14692,
											"end": 15166,
											"name": "tag",
											"source": 18,
											"value": "151"
										},
										{
											"begin": 14692,
											"end": 15166,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14760,
											"end": 14766,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14768,
											"end": 14774,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 14817,
											"end": 14819,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 14805,
											"end": 14814,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14796,
											"end": 14803,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14792,
											"end": 14815,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 14788,
											"end": 14820,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 14785,
											"end": 14904,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 14785,
											"end": 14904,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "773"
										},
										{
											"begin": 14785,
											"end": 14904,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14823,
											"end": 14902,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "774"
										},
										{
											"begin": 14823,
											"end": 14902,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 14823,
											"end": 14902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14823,
											"end": 14902,
											"name": "tag",
											"source": 18,
											"value": "774"
										},
										{
											"begin": 14823,
											"end": 14902,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14785,
											"end": 14904,
											"name": "tag",
											"source": 18,
											"value": "773"
										},
										{
											"begin": 14785,
											"end": 14904,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14943,
											"end": 14944,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14968,
											"end": 15021,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "775"
										},
										{
											"begin": 15013,
											"end": 15020,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 15004,
											"end": 15010,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14993,
											"end": 15002,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14989,
											"end": 15011,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14968,
											"end": 15021,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 14968,
											"end": 15021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14968,
											"end": 15021,
											"name": "tag",
											"source": 18,
											"value": "775"
										},
										{
											"begin": 14968,
											"end": 15021,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14958,
											"end": 15021,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14958,
											"end": 15021,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14914,
											"end": 15031,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15070,
											"end": 15072,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15096,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "776"
										},
										{
											"begin": 15141,
											"end": 15148,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 15132,
											"end": 15138,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15121,
											"end": 15130,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 15117,
											"end": 15139,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15096,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 15096,
											"end": 15149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15096,
											"end": 15149,
											"name": "tag",
											"source": 18,
											"value": "776"
										},
										{
											"begin": 15096,
											"end": 15149,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15086,
											"end": 15149,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15086,
											"end": 15149,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15041,
											"end": 15159,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14692,
											"end": 15166,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14692,
											"end": 15166,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14692,
											"end": 15166,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14692,
											"end": 15166,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14692,
											"end": 15166,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14692,
											"end": 15166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15172,
											"end": 15352,
											"name": "tag",
											"source": 18,
											"value": "575"
										},
										{
											"begin": 15172,
											"end": 15352,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15220,
											"end": 15297,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15217,
											"end": 15218,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15210,
											"end": 15298,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15317,
											"end": 15321,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 15314,
											"end": 15315,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 15307,
											"end": 15322,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15341,
											"end": 15345,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 15338,
											"end": 15339,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15331,
											"end": 15346,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 15358,
											"end": 15678,
											"name": "tag",
											"source": 18,
											"value": "162"
										},
										{
											"begin": 15358,
											"end": 15678,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15402,
											"end": 15408,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15439,
											"end": 15440,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 15433,
											"end": 15437,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15429,
											"end": 15441,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 15419,
											"end": 15441,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15419,
											"end": 15441,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15486,
											"end": 15487,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 15480,
											"end": 15484,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15476,
											"end": 15488,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 15507,
											"end": 15525,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 15497,
											"end": 15578,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "779"
										},
										{
											"begin": 15497,
											"end": 15578,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 15563,
											"end": 15567,
											"name": "PUSH",
											"source": 18,
											"value": "7F"
										},
										{
											"begin": 15555,
											"end": 15561,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15551,
											"end": 15568,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 15541,
											"end": 15568,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15541,
											"end": 15568,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15497,
											"end": 15578,
											"name": "tag",
											"source": 18,
											"value": "779"
										},
										{
											"begin": 15497,
											"end": 15578,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15625,
											"end": 15627,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15617,
											"end": 15623,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15614,
											"end": 15628,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 15594,
											"end": 15612,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15591,
											"end": 15629,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 15588,
											"end": 15672,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "780"
										},
										{
											"begin": 15588,
											"end": 15672,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 15644,
											"end": 15662,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "781"
										},
										{
											"begin": 15644,
											"end": 15662,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "575"
										},
										{
											"begin": 15644,
											"end": 15662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15644,
											"end": 15662,
											"name": "tag",
											"source": 18,
											"value": "781"
										},
										{
											"begin": 15644,
											"end": 15662,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15588,
											"end": 15672,
											"name": "tag",
											"source": 18,
											"value": "780"
										},
										{
											"begin": 15588,
											"end": 15672,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15409,
											"end": 15678,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15358,
											"end": 15678,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15358,
											"end": 15678,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15358,
											"end": 15678,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15358,
											"end": 15678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15684,
											"end": 15792,
											"name": "tag",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 15684,
											"end": 15792,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15761,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "783"
										},
										{
											"begin": 15779,
											"end": 15784,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15761,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 15761,
											"end": 15785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15761,
											"end": 15785,
											"name": "tag",
											"source": 18,
											"value": "783"
										},
										{
											"begin": 15761,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15756,
											"end": 15759,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15749,
											"end": 15786,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15684,
											"end": 15792,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15684,
											"end": 15792,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15684,
											"end": 15792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15876,
											"end": 17163,
											"name": "tag",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 15876,
											"end": 17163,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16037,
											"end": 16041,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 16032,
											"end": 16035,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16028,
											"end": 16042,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16137,
											"end": 16141,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16130,
											"end": 16135,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16126,
											"end": 16142,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16120,
											"end": 16143,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 16156,
											"end": 16219,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "785"
										},
										{
											"begin": 16213,
											"end": 16217,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16208,
											"end": 16211,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 16204,
											"end": 16218,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16190,
											"end": 16202,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16156,
											"end": 16219,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 16156,
											"end": 16219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16156,
											"end": 16219,
											"name": "tag",
											"source": 18,
											"value": "785"
										},
										{
											"begin": 16156,
											"end": 16219,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16052,
											"end": 16229,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16324,
											"end": 16328,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16317,
											"end": 16322,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16313,
											"end": 16329,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16307,
											"end": 16330,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 16343,
											"end": 16406,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "786"
										},
										{
											"begin": 16400,
											"end": 16404,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16395,
											"end": 16398,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 16391,
											"end": 16405,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16377,
											"end": 16389,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16343,
											"end": 16406,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 16343,
											"end": 16406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16343,
											"end": 16406,
											"name": "tag",
											"source": 18,
											"value": "786"
										},
										{
											"begin": 16343,
											"end": 16406,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16239,
											"end": 16416,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16507,
											"end": 16511,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 16500,
											"end": 16505,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16496,
											"end": 16512,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16490,
											"end": 16513,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 16526,
											"end": 16589,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "787"
										},
										{
											"begin": 16583,
											"end": 16587,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 16578,
											"end": 16581,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 16574,
											"end": 16588,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16560,
											"end": 16572,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16526,
											"end": 16589,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 16526,
											"end": 16589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16526,
											"end": 16589,
											"name": "tag",
											"source": 18,
											"value": "787"
										},
										{
											"begin": 16526,
											"end": 16589,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16426,
											"end": 16599,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16693,
											"end": 16697,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 16686,
											"end": 16691,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16682,
											"end": 16698,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16676,
											"end": 16699,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 16712,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "788"
										},
										{
											"begin": 16769,
											"end": 16773,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 16764,
											"end": 16767,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 16760,
											"end": 16774,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16746,
											"end": 16758,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16712,
											"end": 16775,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 16712,
											"end": 16775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16712,
											"end": 16775,
											"name": "tag",
											"source": 18,
											"value": "788"
										},
										{
											"begin": 16712,
											"end": 16775,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16609,
											"end": 16785,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16880,
											"end": 16884,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 16873,
											"end": 16878,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16869,
											"end": 16885,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16863,
											"end": 16886,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 16899,
											"end": 16962,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "789"
										},
										{
											"begin": 16956,
											"end": 16960,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 16951,
											"end": 16954,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 16947,
											"end": 16961,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16933,
											"end": 16945,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16899,
											"end": 16962,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 16899,
											"end": 16962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16899,
											"end": 16962,
											"name": "tag",
											"source": 18,
											"value": "789"
										},
										{
											"begin": 16899,
											"end": 16962,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16795,
											"end": 16972,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17064,
											"end": 17068,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 17057,
											"end": 17062,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17053,
											"end": 17069,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17047,
											"end": 17070,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 17083,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "790"
										},
										{
											"begin": 17140,
											"end": 17144,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 17135,
											"end": 17138,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 17131,
											"end": 17145,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17117,
											"end": 17129,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17083,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 17083,
											"end": 17146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17083,
											"end": 17146,
											"name": "tag",
											"source": 18,
											"value": "790"
										},
										{
											"begin": 17083,
											"end": 17146,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16982,
											"end": 17156,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16006,
											"end": 17163,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15876,
											"end": 17163,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15876,
											"end": 17163,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15876,
											"end": 17163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17169,
											"end": 17520,
											"name": "tag",
											"source": 18,
											"value": "177"
										},
										{
											"begin": 17169,
											"end": 17520,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17326,
											"end": 17330,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17364,
											"end": 17367,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 17353,
											"end": 17362,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17349,
											"end": 17368,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17341,
											"end": 17368,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17341,
											"end": 17368,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17378,
											"end": 17513,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "792"
										},
										{
											"begin": 17510,
											"end": 17511,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17499,
											"end": 17508,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 17495,
											"end": 17512,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17486,
											"end": 17492,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 17378,
											"end": 17513,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 17378,
											"end": 17513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17378,
											"end": 17513,
											"name": "tag",
											"source": 18,
											"value": "792"
										},
										{
											"begin": 17378,
											"end": 17513,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17169,
											"end": 17520,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17169,
											"end": 17520,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17169,
											"end": 17520,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17169,
											"end": 17520,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17169,
											"end": 17520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17526,
											"end": 17706,
											"name": "tag",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 17526,
											"end": 17706,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17574,
											"end": 17651,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17571,
											"end": 17572,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17564,
											"end": 17652,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 17671,
											"end": 17675,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 17668,
											"end": 17669,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 17661,
											"end": 17676,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 17695,
											"end": 17699,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 17692,
											"end": 17693,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17685,
											"end": 17700,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 17712,
											"end": 17903,
											"name": "tag",
											"source": 18,
											"value": "236"
										},
										{
											"begin": 17712,
											"end": 17903,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17752,
											"end": 17755,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17771,
											"end": 17791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "795"
										},
										{
											"begin": 17789,
											"end": 17790,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17771,
											"end": 17791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 17771,
											"end": 17791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17771,
											"end": 17791,
											"name": "tag",
											"source": 18,
											"value": "795"
										},
										{
											"begin": 17771,
											"end": 17791,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17766,
											"end": 17791,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17766,
											"end": 17791,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17805,
											"end": 17825,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "796"
										},
										{
											"begin": 17823,
											"end": 17824,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 17805,
											"end": 17825,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 17805,
											"end": 17825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17805,
											"end": 17825,
											"name": "tag",
											"source": 18,
											"value": "796"
										},
										{
											"begin": 17805,
											"end": 17825,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17800,
											"end": 17825,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17800,
											"end": 17825,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17848,
											"end": 17849,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17845,
											"end": 17846,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17841,
											"end": 17850,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17834,
											"end": 17850,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17834,
											"end": 17850,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17869,
											"end": 17872,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 17866,
											"end": 17867,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17863,
											"end": 17873,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 17860,
											"end": 17896,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 17860,
											"end": 17896,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "797"
										},
										{
											"begin": 17860,
											"end": 17896,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 17876,
											"end": 17894,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "798"
										},
										{
											"begin": 17876,
											"end": 17894,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 17876,
											"end": 17894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17876,
											"end": 17894,
											"name": "tag",
											"source": 18,
											"value": "798"
										},
										{
											"begin": 17876,
											"end": 17894,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17860,
											"end": 17896,
											"name": "tag",
											"source": 18,
											"value": "797"
										},
										{
											"begin": 17860,
											"end": 17896,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17712,
											"end": 17903,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17712,
											"end": 17903,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17712,
											"end": 17903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17712,
											"end": 17903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17712,
											"end": 17903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17909,
											"end": 18052,
											"name": "tag",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 17909,
											"end": 18052,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17966,
											"end": 17971,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17997,
											"end": 18003,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17991,
											"end": 18004,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 17982,
											"end": 18004,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17982,
											"end": 18004,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18013,
											"end": 18046,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "800"
										},
										{
											"begin": 18040,
											"end": 18045,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18013,
											"end": 18046,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 18013,
											"end": 18046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18013,
											"end": 18046,
											"name": "tag",
											"source": 18,
											"value": "800"
										},
										{
											"begin": 18013,
											"end": 18046,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17909,
											"end": 18052,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17909,
											"end": 18052,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17909,
											"end": 18052,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17909,
											"end": 18052,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17909,
											"end": 18052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18107,
											"end": 19095,
											"name": "tag",
											"source": 18,
											"value": "580"
										},
										{
											"begin": 18107,
											"end": 19095,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18198,
											"end": 18203,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18242,
											"end": 18246,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 18230,
											"end": 18239,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18225,
											"end": 18228,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 18221,
											"end": 18240,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 18217,
											"end": 18247,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 18214,
											"end": 18331,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 18214,
											"end": 18331,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "802"
										},
										{
											"begin": 18214,
											"end": 18331,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 18250,
											"end": 18329,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "803"
										},
										{
											"begin": 18250,
											"end": 18329,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 18250,
											"end": 18329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18250,
											"end": 18329,
											"name": "tag",
											"source": 18,
											"value": "803"
										},
										{
											"begin": 18250,
											"end": 18329,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18214,
											"end": 18331,
											"name": "tag",
											"source": 18,
											"value": "802"
										},
										{
											"begin": 18214,
											"end": 18331,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18349,
											"end": 18370,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "804"
										},
										{
											"begin": 18365,
											"end": 18369,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 18349,
											"end": 18370,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 18349,
											"end": 18370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18349,
											"end": 18370,
											"name": "tag",
											"source": 18,
											"value": "804"
										},
										{
											"begin": 18349,
											"end": 18370,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18340,
											"end": 18370,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18340,
											"end": 18370,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18435,
											"end": 18436,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18475,
											"end": 18535,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "805"
										},
										{
											"begin": 18531,
											"end": 18534,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 18522,
											"end": 18528,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18511,
											"end": 18520,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 18507,
											"end": 18529,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18475,
											"end": 18535,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 18475,
											"end": 18535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18475,
											"end": 18535,
											"name": "tag",
											"source": 18,
											"value": "805"
										},
										{
											"begin": 18475,
											"end": 18535,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18468,
											"end": 18472,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18461,
											"end": 18466,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18457,
											"end": 18473,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18450,
											"end": 18536,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18380,
											"end": 18547,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18616,
											"end": 18618,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18657,
											"end": 18717,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "806"
										},
										{
											"begin": 18713,
											"end": 18716,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 18704,
											"end": 18710,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18693,
											"end": 18702,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 18689,
											"end": 18711,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18657,
											"end": 18717,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 18657,
											"end": 18717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18657,
											"end": 18717,
											"name": "tag",
											"source": 18,
											"value": "806"
										},
										{
											"begin": 18657,
											"end": 18717,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18650,
											"end": 18654,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18643,
											"end": 18648,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18639,
											"end": 18655,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18632,
											"end": 18718,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18557,
											"end": 18729,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18798,
											"end": 18800,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 18839,
											"end": 18899,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "807"
										},
										{
											"begin": 18895,
											"end": 18898,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 18886,
											"end": 18892,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18875,
											"end": 18884,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 18871,
											"end": 18893,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18839,
											"end": 18899,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 18839,
											"end": 18899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18839,
											"end": 18899,
											"name": "tag",
											"source": 18,
											"value": "807"
										},
										{
											"begin": 18839,
											"end": 18899,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18832,
											"end": 18836,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 18825,
											"end": 18830,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18821,
											"end": 18837,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18814,
											"end": 18900,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18739,
											"end": 18911,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18975,
											"end": 18977,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 19016,
											"end": 19076,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "808"
										},
										{
											"begin": 19072,
											"end": 19075,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19063,
											"end": 19069,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19052,
											"end": 19061,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 19048,
											"end": 19070,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19016,
											"end": 19076,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 19016,
											"end": 19076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19016,
											"end": 19076,
											"name": "tag",
											"source": 18,
											"value": "808"
										},
										{
											"begin": 19016,
											"end": 19076,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19009,
											"end": 19013,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 19002,
											"end": 19007,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18998,
											"end": 19014,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18991,
											"end": 19077,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18921,
											"end": 19088,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18107,
											"end": 19095,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 18107,
											"end": 19095,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18107,
											"end": 19095,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18107,
											"end": 19095,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18107,
											"end": 19095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19101,
											"end": 19515,
											"name": "tag",
											"source": 18,
											"value": "241"
										},
										{
											"begin": 19101,
											"end": 19515,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19202,
											"end": 19208,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19251,
											"end": 19254,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 19239,
											"end": 19248,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19230,
											"end": 19237,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19226,
											"end": 19249,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 19222,
											"end": 19255,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 19219,
											"end": 19339,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 19219,
											"end": 19339,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "810"
										},
										{
											"begin": 19219,
											"end": 19339,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 19258,
											"end": 19337,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "811"
										},
										{
											"begin": 19258,
											"end": 19337,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 19258,
											"end": 19337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19258,
											"end": 19337,
											"name": "tag",
											"source": 18,
											"value": "811"
										},
										{
											"begin": 19258,
											"end": 19337,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19219,
											"end": 19339,
											"name": "tag",
											"source": 18,
											"value": "810"
										},
										{
											"begin": 19219,
											"end": 19339,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19378,
											"end": 19379,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19403,
											"end": 19498,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "812"
										},
										{
											"begin": 19490,
											"end": 19497,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19481,
											"end": 19487,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19470,
											"end": 19479,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 19466,
											"end": 19488,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19403,
											"end": 19498,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "580"
										},
										{
											"begin": 19403,
											"end": 19498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19403,
											"end": 19498,
											"name": "tag",
											"source": 18,
											"value": "812"
										},
										{
											"begin": 19403,
											"end": 19498,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19393,
											"end": 19498,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19393,
											"end": 19498,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19349,
											"end": 19508,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19101,
											"end": 19515,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 19101,
											"end": 19515,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19101,
											"end": 19515,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19101,
											"end": 19515,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19101,
											"end": 19515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19521,
											"end": 19715,
											"name": "tag",
											"source": 18,
											"value": "243"
										},
										{
											"begin": 19521,
											"end": 19715,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19561,
											"end": 19565,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19581,
											"end": 19601,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "814"
										},
										{
											"begin": 19599,
											"end": 19600,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19581,
											"end": 19601,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 19581,
											"end": 19601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19581,
											"end": 19601,
											"name": "tag",
											"source": 18,
											"value": "814"
										},
										{
											"begin": 19581,
											"end": 19601,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19576,
											"end": 19601,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19576,
											"end": 19601,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19615,
											"end": 19635,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "815"
										},
										{
											"begin": 19633,
											"end": 19634,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19615,
											"end": 19635,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 19615,
											"end": 19635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19615,
											"end": 19635,
											"name": "tag",
											"source": 18,
											"value": "815"
										},
										{
											"begin": 19615,
											"end": 19635,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19610,
											"end": 19635,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 19610,
											"end": 19635,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19659,
											"end": 19660,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19656,
											"end": 19657,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19652,
											"end": 19661,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 19644,
											"end": 19661,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19644,
											"end": 19661,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19683,
											"end": 19684,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19677,
											"end": 19681,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19674,
											"end": 19685,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 19671,
											"end": 19708,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 19671,
											"end": 19708,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "816"
										},
										{
											"begin": 19671,
											"end": 19708,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 19688,
											"end": 19706,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "817"
										},
										{
											"begin": 19688,
											"end": 19706,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 19688,
											"end": 19706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19688,
											"end": 19706,
											"name": "tag",
											"source": 18,
											"value": "817"
										},
										{
											"begin": 19688,
											"end": 19706,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19671,
											"end": 19708,
											"name": "tag",
											"source": 18,
											"value": "816"
										},
										{
											"begin": 19671,
											"end": 19708,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19521,
											"end": 19715,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 19521,
											"end": 19715,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19521,
											"end": 19715,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19521,
											"end": 19715,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19521,
											"end": 19715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19721,
											"end": 19843,
											"name": "tag",
											"source": 18,
											"value": "581"
										},
										{
											"begin": 19721,
											"end": 19843,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19794,
											"end": 19818,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "819"
										},
										{
											"begin": 19812,
											"end": 19817,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19794,
											"end": 19818,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 19794,
											"end": 19818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19794,
											"end": 19818,
											"name": "tag",
											"source": 18,
											"value": "819"
										},
										{
											"begin": 19794,
											"end": 19818,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19787,
											"end": 19792,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19784,
											"end": 19819,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 19774,
											"end": 19837,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "820"
										},
										{
											"begin": 19774,
											"end": 19837,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 19833,
											"end": 19834,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19830,
											"end": 19831,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 19823,
											"end": 19835,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 19774,
											"end": 19837,
											"name": "tag",
											"source": 18,
											"value": "820"
										},
										{
											"begin": 19774,
											"end": 19837,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19721,
											"end": 19843,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19721,
											"end": 19843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19849,
											"end": 19992,
											"name": "tag",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 19849,
											"end": 19992,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19906,
											"end": 19911,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19937,
											"end": 19943,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19931,
											"end": 19944,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 19922,
											"end": 19944,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19922,
											"end": 19944,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19953,
											"end": 19986,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "822"
										},
										{
											"begin": 19980,
											"end": 19985,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19953,
											"end": 19986,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "581"
										},
										{
											"begin": 19953,
											"end": 19986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19953,
											"end": 19986,
											"name": "tag",
											"source": 18,
											"value": "822"
										},
										{
											"begin": 19953,
											"end": 19986,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19849,
											"end": 19992,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 19849,
											"end": 19992,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19849,
											"end": 19992,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19849,
											"end": 19992,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19849,
											"end": 19992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19998,
											"end": 20349,
											"name": "tag",
											"source": 18,
											"value": "256"
										},
										{
											"begin": 19998,
											"end": 20349,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20068,
											"end": 20074,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20117,
											"end": 20119,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 20105,
											"end": 20114,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20096,
											"end": 20103,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 20092,
											"end": 20115,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 20088,
											"end": 20120,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 20085,
											"end": 20204,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 20085,
											"end": 20204,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "824"
										},
										{
											"begin": 20085,
											"end": 20204,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 20123,
											"end": 20202,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "825"
										},
										{
											"begin": 20123,
											"end": 20202,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 20123,
											"end": 20202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20123,
											"end": 20202,
											"name": "tag",
											"source": 18,
											"value": "825"
										},
										{
											"begin": 20123,
											"end": 20202,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20085,
											"end": 20204,
											"name": "tag",
											"source": 18,
											"value": "824"
										},
										{
											"begin": 20085,
											"end": 20204,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20243,
											"end": 20244,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20268,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "826"
										},
										{
											"begin": 20324,
											"end": 20331,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 20315,
											"end": 20321,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20304,
											"end": 20313,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 20300,
											"end": 20322,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20268,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 20268,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20268,
											"end": 20332,
											"name": "tag",
											"source": 18,
											"value": "826"
										},
										{
											"begin": 20268,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20258,
											"end": 20332,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20258,
											"end": 20332,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20214,
											"end": 20342,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19998,
											"end": 20349,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 19998,
											"end": 20349,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19998,
											"end": 20349,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19998,
											"end": 20349,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19998,
											"end": 20349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20355,
											"end": 20457,
											"name": "tag",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 20355,
											"end": 20457,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20397,
											"end": 20405,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20444,
											"end": 20449,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20441,
											"end": 20442,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 20437,
											"end": 20450,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 20416,
											"end": 20450,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20416,
											"end": 20450,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20355,
											"end": 20457,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20355,
											"end": 20457,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20355,
											"end": 20457,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20355,
											"end": 20457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20463,
											"end": 21311,
											"name": "tag",
											"source": 18,
											"value": "584"
										},
										{
											"begin": 20463,
											"end": 21311,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20524,
											"end": 20529,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20531,
											"end": 20535,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 20555,
											"end": 20561,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20546,
											"end": 20561,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20546,
											"end": 20561,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20579,
											"end": 20584,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20570,
											"end": 20584,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20570,
											"end": 20584,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20593,
											"end": 21305,
											"name": "tag",
											"source": 18,
											"value": "829"
										},
										{
											"begin": 20593,
											"end": 21305,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20614,
											"end": 20615,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 20604,
											"end": 20612,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 20601,
											"end": 20616,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 20593,
											"end": 21305,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 20593,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "831"
										},
										{
											"begin": 20593,
											"end": 21305,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 20709,
											"end": 20713,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 20704,
											"end": 20707,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 20700,
											"end": 20714,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 20694,
											"end": 20698,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20691,
											"end": 20715,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 20688,
											"end": 20738,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 20688,
											"end": 20738,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "832"
										},
										{
											"begin": 20688,
											"end": 20738,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 20718,
											"end": 20736,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "833"
										},
										{
											"begin": 20718,
											"end": 20736,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 20718,
											"end": 20736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20718,
											"end": 20736,
											"name": "tag",
											"source": 18,
											"value": "833"
										},
										{
											"begin": 20718,
											"end": 20736,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20688,
											"end": 20738,
											"name": "tag",
											"source": 18,
											"value": "832"
										},
										{
											"begin": 20688,
											"end": 20738,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20768,
											"end": 20769,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 20758,
											"end": 20766,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 20754,
											"end": 20770,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 20751,
											"end": 21202,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 20751,
											"end": 21202,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "834"
										},
										{
											"begin": 20751,
											"end": 21202,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 21183,
											"end": 21187,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 21176,
											"end": 21181,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21172,
											"end": 21188,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 21163,
											"end": 21188,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21163,
											"end": 21188,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20751,
											"end": 21202,
											"name": "tag",
											"source": 18,
											"value": "834"
										},
										{
											"begin": 20751,
											"end": 21202,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21233,
											"end": 21237,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 21227,
											"end": 21231,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21223,
											"end": 21238,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 21215,
											"end": 21238,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21215,
											"end": 21238,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21263,
											"end": 21295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "835"
										},
										{
											"begin": 21286,
											"end": 21294,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 21263,
											"end": 21295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 21263,
											"end": 21295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21263,
											"end": 21295,
											"name": "tag",
											"source": 18,
											"value": "835"
										},
										{
											"begin": 21263,
											"end": 21295,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21251,
											"end": 21295,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 21251,
											"end": 21295,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20593,
											"end": 21305,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "829"
										},
										{
											"begin": 20593,
											"end": 21305,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20593,
											"end": 21305,
											"name": "tag",
											"source": 18,
											"value": "831"
										},
										{
											"begin": 20593,
											"end": 21305,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20463,
											"end": 21311,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 20463,
											"end": 21311,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20463,
											"end": 21311,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 20463,
											"end": 21311,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 20463,
											"end": 21311,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20463,
											"end": 21311,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20463,
											"end": 21311,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20463,
											"end": 21311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21317,
											"end": 22390,
											"name": "tag",
											"source": 18,
											"value": "585"
										},
										{
											"begin": 21317,
											"end": 22390,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21371,
											"end": 21376,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21562,
											"end": 21570,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21552,
											"end": 21592,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "837"
										},
										{
											"begin": 21552,
											"end": 21592,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 21583,
											"end": 21584,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 21574,
											"end": 21584,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21574,
											"end": 21584,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21585,
											"end": 21590,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "836"
										},
										{
											"begin": 21585,
											"end": 21590,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21552,
											"end": 21592,
											"name": "tag",
											"source": 18,
											"value": "837"
										},
										{
											"begin": 21552,
											"end": 21592,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21611,
											"end": 21615,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21601,
											"end": 21637,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "838"
										},
										{
											"begin": 21601,
											"end": 21637,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 21628,
											"end": 21629,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21619,
											"end": 21629,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21619,
											"end": 21629,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21630,
											"end": 21635,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "836"
										},
										{
											"begin": 21630,
											"end": 21635,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21601,
											"end": 21637,
											"name": "tag",
											"source": 18,
											"value": "838"
										},
										{
											"begin": 21601,
											"end": 21637,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21697,
											"end": 21701,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21745,
											"end": 21746,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 21740,
											"end": 21767,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21740,
											"end": 21767,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 21740,
											"end": 21767,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "840"
										},
										{
											"begin": 21740,
											"end": 21767,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 21781,
											"end": 21782,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 21776,
											"end": 21967,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21776,
											"end": 21967,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 21776,
											"end": 21967,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "841"
										},
										{
											"begin": 21776,
											"end": 21967,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 21690,
											"end": 21967,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "839"
										},
										{
											"begin": 21690,
											"end": 21967,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21740,
											"end": 21767,
											"name": "tag",
											"source": 18,
											"value": "840"
										},
										{
											"begin": 21740,
											"end": 21767,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21758,
											"end": 21759,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 21749,
											"end": 21759,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21749,
											"end": 21759,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21760,
											"end": 21765,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21760,
											"end": 21765,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "836"
										},
										{
											"begin": 21760,
											"end": 21765,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21776,
											"end": 21967,
											"name": "tag",
											"source": 18,
											"value": "841"
										},
										{
											"begin": 21776,
											"end": 21967,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21821,
											"end": 21824,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 21811,
											"end": 21819,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 21808,
											"end": 21825,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 21805,
											"end": 21848,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 21805,
											"end": 21848,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "842"
										},
										{
											"begin": 21805,
											"end": 21848,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 21828,
											"end": 21846,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "843"
										},
										{
											"begin": 21828,
											"end": 21846,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 21828,
											"end": 21846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21828,
											"end": 21846,
											"name": "tag",
											"source": 18,
											"value": "843"
										},
										{
											"begin": 21828,
											"end": 21846,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21805,
											"end": 21848,
											"name": "tag",
											"source": 18,
											"value": "842"
										},
										{
											"begin": 21805,
											"end": 21848,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21877,
											"end": 21885,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21874,
											"end": 21875,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 21870,
											"end": 21886,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 21861,
											"end": 21886,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21861,
											"end": 21886,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21912,
											"end": 21915,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 21905,
											"end": 21910,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21902,
											"end": 21916,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 21899,
											"end": 21939,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 21899,
											"end": 21939,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "844"
										},
										{
											"begin": 21899,
											"end": 21939,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 21919,
											"end": 21937,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "845"
										},
										{
											"begin": 21919,
											"end": 21937,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 21919,
											"end": 21937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21919,
											"end": 21937,
											"name": "tag",
											"source": 18,
											"value": "845"
										},
										{
											"begin": 21919,
											"end": 21937,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21899,
											"end": 21939,
											"name": "tag",
											"source": 18,
											"value": "844"
										},
										{
											"begin": 21899,
											"end": 21939,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21952,
											"end": 21957,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21952,
											"end": 21957,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "836"
										},
										{
											"begin": 21952,
											"end": 21957,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21690,
											"end": 21967,
											"name": "tag",
											"source": 18,
											"value": "839"
										},
										{
											"begin": 21690,
											"end": 21967,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21690,
											"end": 21967,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22076,
											"end": 22078,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 22066,
											"end": 22074,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22063,
											"end": 22079,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 22057,
											"end": 22060,
											"name": "PUSH",
											"source": 18,
											"value": "133"
										},
										{
											"begin": 22051,
											"end": 22055,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22048,
											"end": 22061,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 22044,
											"end": 22080,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 22026,
											"end": 22028,
											"name": "PUSH",
											"source": 18,
											"value": "4E"
										},
										{
											"begin": 22016,
											"end": 22024,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22013,
											"end": 22029,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 22008,
											"end": 22010,
											"name": "PUSH",
											"source": 18,
											"value": "B"
										},
										{
											"begin": 22002,
											"end": 22006,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 21999,
											"end": 22011,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 21995,
											"end": 22030,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 21979,
											"end": 22090,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 21976,
											"end": 22222,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 21976,
											"end": 22222,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "846"
										},
										{
											"begin": 21976,
											"end": 22222,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 22132,
											"end": 22140,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22126,
											"end": 22130,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22122,
											"end": 22141,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 22113,
											"end": 22141,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22113,
											"end": 22141,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22167,
											"end": 22170,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22160,
											"end": 22165,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22157,
											"end": 22171,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 22154,
											"end": 22194,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 22154,
											"end": 22194,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "847"
										},
										{
											"begin": 22154,
											"end": 22194,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 22174,
											"end": 22192,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "848"
										},
										{
											"begin": 22174,
											"end": 22192,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 22174,
											"end": 22192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22174,
											"end": 22192,
											"name": "tag",
											"source": 18,
											"value": "848"
										},
										{
											"begin": 22174,
											"end": 22192,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22154,
											"end": 22194,
											"name": "tag",
											"source": 18,
											"value": "847"
										},
										{
											"begin": 22154,
											"end": 22194,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22207,
											"end": 22212,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "836"
										},
										{
											"begin": 22207,
											"end": 22212,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21976,
											"end": 22222,
											"name": "tag",
											"source": 18,
											"value": "846"
										},
										{
											"begin": 21976,
											"end": 22222,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22247,
											"end": 22289,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "849"
										},
										{
											"begin": 22285,
											"end": 22288,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22275,
											"end": 22283,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22269,
											"end": 22273,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22266,
											"end": 22267,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 22247,
											"end": 22289,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "584"
										},
										{
											"begin": 22247,
											"end": 22289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22247,
											"end": 22289,
											"name": "tag",
											"source": 18,
											"value": "849"
										},
										{
											"begin": 22247,
											"end": 22289,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22232,
											"end": 22289,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 22232,
											"end": 22289,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22232,
											"end": 22289,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22232,
											"end": 22289,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22321,
											"end": 22325,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22316,
											"end": 22319,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22312,
											"end": 22326,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 22305,
											"end": 22310,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22302,
											"end": 22327,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 22299,
											"end": 22350,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 22299,
											"end": 22350,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "850"
										},
										{
											"begin": 22299,
											"end": 22350,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 22330,
											"end": 22348,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "851"
										},
										{
											"begin": 22330,
											"end": 22348,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 22330,
											"end": 22348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22330,
											"end": 22348,
											"name": "tag",
											"source": 18,
											"value": "851"
										},
										{
											"begin": 22330,
											"end": 22348,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22299,
											"end": 22350,
											"name": "tag",
											"source": 18,
											"value": "850"
										},
										{
											"begin": 22299,
											"end": 22350,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22379,
											"end": 22383,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22372,
											"end": 22377,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22368,
											"end": 22384,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 22359,
											"end": 22384,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22359,
											"end": 22384,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21317,
											"end": 22390,
											"name": "tag",
											"source": 18,
											"value": "836"
										},
										{
											"begin": 21317,
											"end": 22390,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21317,
											"end": 22390,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 21317,
											"end": 22390,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 21317,
											"end": 22390,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21317,
											"end": 22390,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21317,
											"end": 22390,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21317,
											"end": 22390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22396,
											"end": 22677,
											"name": "tag",
											"source": 18,
											"value": "281"
										},
										{
											"begin": 22396,
											"end": 22677,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22454,
											"end": 22459,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22478,
											"end": 22501,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "853"
										},
										{
											"begin": 22496,
											"end": 22500,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22478,
											"end": 22501,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 22478,
											"end": 22501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22478,
											"end": 22501,
											"name": "tag",
											"source": 18,
											"value": "853"
										},
										{
											"begin": 22478,
											"end": 22501,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22470,
											"end": 22501,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22470,
											"end": 22501,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22522,
											"end": 22547,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "854"
										},
										{
											"begin": 22538,
											"end": 22546,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22522,
											"end": 22547,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 22522,
											"end": 22547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22522,
											"end": 22547,
											"name": "tag",
											"source": 18,
											"value": "854"
										},
										{
											"begin": 22522,
											"end": 22547,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22510,
											"end": 22547,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 22510,
											"end": 22547,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22566,
											"end": 22670,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "855"
										},
										{
											"begin": 22603,
											"end": 22669,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22593,
											"end": 22601,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22587,
											"end": 22591,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22566,
											"end": 22670,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "585"
										},
										{
											"begin": 22566,
											"end": 22670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22566,
											"end": 22670,
											"name": "tag",
											"source": 18,
											"value": "855"
										},
										{
											"begin": 22566,
											"end": 22670,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22557,
											"end": 22670,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22557,
											"end": 22670,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22396,
											"end": 22677,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 22396,
											"end": 22677,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22396,
											"end": 22677,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22396,
											"end": 22677,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22396,
											"end": 22677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22683,
											"end": 23093,
											"name": "tag",
											"source": 18,
											"value": "283"
										},
										{
											"begin": 22683,
											"end": 23093,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22723,
											"end": 22730,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22746,
											"end": 22766,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "857"
										},
										{
											"begin": 22764,
											"end": 22765,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22746,
											"end": 22766,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 22746,
											"end": 22766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22746,
											"end": 22766,
											"name": "tag",
											"source": 18,
											"value": "857"
										},
										{
											"begin": 22746,
											"end": 22766,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22741,
											"end": 22766,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22741,
											"end": 22766,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22780,
											"end": 22800,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "858"
										},
										{
											"begin": 22798,
											"end": 22799,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22780,
											"end": 22800,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 22780,
											"end": 22800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22780,
											"end": 22800,
											"name": "tag",
											"source": 18,
											"value": "858"
										},
										{
											"begin": 22780,
											"end": 22800,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22775,
											"end": 22800,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 22775,
											"end": 22800,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22835,
											"end": 22836,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22832,
											"end": 22833,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22828,
											"end": 22837,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 22857,
											"end": 22887,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "859"
										},
										{
											"begin": 22875,
											"end": 22886,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22857,
											"end": 22887,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 22857,
											"end": 22887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22857,
											"end": 22887,
											"name": "tag",
											"source": 18,
											"value": "859"
										},
										{
											"begin": 22857,
											"end": 22887,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22846,
											"end": 22887,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22846,
											"end": 22887,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23036,
											"end": 23037,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23027,
											"end": 23034,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23023,
											"end": 23038,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 23020,
											"end": 23021,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 23017,
											"end": 23039,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 22997,
											"end": 22998,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22990,
											"end": 22999,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 22970,
											"end": 23053,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 22947,
											"end": 23086,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "860"
										},
										{
											"begin": 22947,
											"end": 23086,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 23066,
											"end": 23084,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "861"
										},
										{
											"begin": 23066,
											"end": 23084,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 23066,
											"end": 23084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23066,
											"end": 23084,
											"name": "tag",
											"source": 18,
											"value": "861"
										},
										{
											"begin": 23066,
											"end": 23084,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22947,
											"end": 23086,
											"name": "tag",
											"source": 18,
											"value": "860"
										},
										{
											"begin": 22947,
											"end": 23086,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22731,
											"end": 23093,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22683,
											"end": 23093,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 22683,
											"end": 23093,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22683,
											"end": 23093,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22683,
											"end": 23093,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22683,
											"end": 23093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23099,
											"end": 23184,
											"name": "tag",
											"source": 18,
											"value": "586"
										},
										{
											"begin": 23099,
											"end": 23184,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23144,
											"end": 23151,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23173,
											"end": 23178,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23162,
											"end": 23178,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23162,
											"end": 23178,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23099,
											"end": 23184,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23099,
											"end": 23184,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23099,
											"end": 23184,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23099,
											"end": 23184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23190,
											"end": 23291,
											"name": "tag",
											"source": 18,
											"value": "587"
										},
										{
											"begin": 23190,
											"end": 23291,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23226,
											"end": 23233,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23266,
											"end": 23284,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23259,
											"end": 23264,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23255,
											"end": 23285,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 23244,
											"end": 23285,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23244,
											"end": 23285,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23190,
											"end": 23291,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23190,
											"end": 23291,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23190,
											"end": 23291,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23190,
											"end": 23291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23297,
											"end": 23453,
											"name": "tag",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 23297,
											"end": 23453,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23354,
											"end": 23363,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23387,
											"end": 23447,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "865"
										},
										{
											"begin": 23404,
											"end": 23446,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "866"
										},
										{
											"begin": 23413,
											"end": 23445,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "867"
										},
										{
											"begin": 23439,
											"end": 23444,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 23413,
											"end": 23445,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "586"
										},
										{
											"begin": 23413,
											"end": 23445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23413,
											"end": 23445,
											"name": "tag",
											"source": 18,
											"value": "867"
										},
										{
											"begin": 23413,
											"end": 23445,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23404,
											"end": 23446,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 23404,
											"end": 23446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23404,
											"end": 23446,
											"name": "tag",
											"source": 18,
											"value": "866"
										},
										{
											"begin": 23404,
											"end": 23446,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23387,
											"end": 23447,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "587"
										},
										{
											"begin": 23387,
											"end": 23447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23387,
											"end": 23447,
											"name": "tag",
											"source": 18,
											"value": "865"
										},
										{
											"begin": 23387,
											"end": 23447,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23374,
											"end": 23447,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23374,
											"end": 23447,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23297,
											"end": 23453,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23297,
											"end": 23453,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23297,
											"end": 23453,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23297,
											"end": 23453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23459,
											"end": 23604,
											"name": "tag",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 23459,
											"end": 23604,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23553,
											"end": 23597,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "869"
										},
										{
											"begin": 23591,
											"end": 23596,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23553,
											"end": 23597,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 23553,
											"end": 23597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23553,
											"end": 23597,
											"name": "tag",
											"source": 18,
											"value": "869"
										},
										{
											"begin": 23553,
											"end": 23597,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23548,
											"end": 23551,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23541,
											"end": 23598,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 23459,
											"end": 23604,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23459,
											"end": 23604,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23459,
											"end": 23604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23610,
											"end": 23846,
											"name": "tag",
											"source": 18,
											"value": "287"
										},
										{
											"begin": 23610,
											"end": 23846,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23710,
											"end": 23714,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23748,
											"end": 23750,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 23737,
											"end": 23746,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23733,
											"end": 23751,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23725,
											"end": 23751,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23725,
											"end": 23751,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23761,
											"end": 23839,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "871"
										},
										{
											"begin": 23836,
											"end": 23837,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23825,
											"end": 23834,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23821,
											"end": 23838,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23812,
											"end": 23818,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 23761,
											"end": 23839,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 23761,
											"end": 23839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23761,
											"end": 23839,
											"name": "tag",
											"source": 18,
											"value": "871"
										},
										{
											"begin": 23761,
											"end": 23839,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23610,
											"end": 23846,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 23610,
											"end": 23846,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23610,
											"end": 23846,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23610,
											"end": 23846,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23610,
											"end": 23846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23852,
											"end": 24294,
											"name": "tag",
											"source": 18,
											"value": "325"
										},
										{
											"begin": 23852,
											"end": 24294,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24001,
											"end": 24005,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24039,
											"end": 24041,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 24028,
											"end": 24037,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24024,
											"end": 24042,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24016,
											"end": 24042,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24016,
											"end": 24042,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24052,
											"end": 24123,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "873"
										},
										{
											"begin": 24120,
											"end": 24121,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24109,
											"end": 24118,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 24105,
											"end": 24122,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24096,
											"end": 24102,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 24052,
											"end": 24123,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "571"
										},
										{
											"begin": 24052,
											"end": 24123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24052,
											"end": 24123,
											"name": "tag",
											"source": 18,
											"value": "873"
										},
										{
											"begin": 24052,
											"end": 24123,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24133,
											"end": 24205,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "874"
										},
										{
											"begin": 24201,
											"end": 24203,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 24190,
											"end": 24199,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 24186,
											"end": 24204,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24177,
											"end": 24183,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 24133,
											"end": 24205,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 24133,
											"end": 24205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24133,
											"end": 24205,
											"name": "tag",
											"source": 18,
											"value": "874"
										},
										{
											"begin": 24133,
											"end": 24205,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24215,
											"end": 24287,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "875"
										},
										{
											"begin": 24283,
											"end": 24285,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 24272,
											"end": 24281,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 24268,
											"end": 24286,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24259,
											"end": 24265,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 24215,
											"end": 24287,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 24215,
											"end": 24287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24215,
											"end": 24287,
											"name": "tag",
											"source": 18,
											"value": "875"
										},
										{
											"begin": 24215,
											"end": 24287,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23852,
											"end": 24294,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 23852,
											"end": 24294,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 23852,
											"end": 24294,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23852,
											"end": 24294,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23852,
											"end": 24294,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23852,
											"end": 24294,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23852,
											"end": 24294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24300,
											"end": 24466,
											"name": "tag",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 24300,
											"end": 24466,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24440,
											"end": 24458,
											"name": "PUSH",
											"source": 18,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 24436,
											"end": 24437,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24428,
											"end": 24434,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24424,
											"end": 24438,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24417,
											"end": 24459,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 24300,
											"end": 24466,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24300,
											"end": 24466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24472,
											"end": 24838,
											"name": "tag",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 24472,
											"end": 24838,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24614,
											"end": 24617,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24635,
											"end": 24702,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "878"
										},
										{
											"begin": 24699,
											"end": 24701,
											"name": "PUSH",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 24694,
											"end": 24697,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 24635,
											"end": 24702,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 24635,
											"end": 24702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24635,
											"end": 24702,
											"name": "tag",
											"source": 18,
											"value": "878"
										},
										{
											"begin": 24635,
											"end": 24702,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24628,
											"end": 24702,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24628,
											"end": 24702,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24711,
											"end": 24804,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "879"
										},
										{
											"begin": 24800,
											"end": 24803,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24711,
											"end": 24804,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 24711,
											"end": 24804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24711,
											"end": 24804,
											"name": "tag",
											"source": 18,
											"value": "879"
										},
										{
											"begin": 24711,
											"end": 24804,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24829,
											"end": 24831,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 24824,
											"end": 24827,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24820,
											"end": 24832,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24813,
											"end": 24832,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24813,
											"end": 24832,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24472,
											"end": 24838,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24472,
											"end": 24838,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24472,
											"end": 24838,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24472,
											"end": 24838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24844,
											"end": 25263,
											"name": "tag",
											"source": 18,
											"value": "375"
										},
										{
											"begin": 24844,
											"end": 25263,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25010,
											"end": 25014,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25048,
											"end": 25050,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 25037,
											"end": 25046,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25033,
											"end": 25051,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25025,
											"end": 25051,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25025,
											"end": 25051,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25097,
											"end": 25106,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25091,
											"end": 25095,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25087,
											"end": 25107,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 25083,
											"end": 25084,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25072,
											"end": 25081,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 25068,
											"end": 25085,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25061,
											"end": 25108,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 25125,
											"end": 25256,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "881"
										},
										{
											"begin": 25251,
											"end": 25255,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25125,
											"end": 25256,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 25125,
											"end": 25256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25125,
											"end": 25256,
											"name": "tag",
											"source": 18,
											"value": "881"
										},
										{
											"begin": 25125,
											"end": 25256,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25117,
											"end": 25256,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25117,
											"end": 25256,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24844,
											"end": 25263,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24844,
											"end": 25263,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24844,
											"end": 25263,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24844,
											"end": 25263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25269,
											"end": 25711,
											"name": "tag",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 25269,
											"end": 25711,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25418,
											"end": 25422,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25456,
											"end": 25458,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 25445,
											"end": 25454,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25441,
											"end": 25459,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25433,
											"end": 25459,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25433,
											"end": 25459,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25469,
											"end": 25540,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "883"
										},
										{
											"begin": 25537,
											"end": 25538,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25526,
											"end": 25535,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 25522,
											"end": 25539,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25513,
											"end": 25519,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 25469,
											"end": 25540,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 25469,
											"end": 25540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25469,
											"end": 25540,
											"name": "tag",
											"source": 18,
											"value": "883"
										},
										{
											"begin": 25469,
											"end": 25540,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25550,
											"end": 25622,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "884"
										},
										{
											"begin": 25618,
											"end": 25620,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 25607,
											"end": 25616,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 25603,
											"end": 25621,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25594,
											"end": 25600,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 25550,
											"end": 25622,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 25550,
											"end": 25622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25550,
											"end": 25622,
											"name": "tag",
											"source": 18,
											"value": "884"
										},
										{
											"begin": 25550,
											"end": 25622,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25632,
											"end": 25704,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "885"
										},
										{
											"begin": 25700,
											"end": 25702,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 25689,
											"end": 25698,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 25685,
											"end": 25703,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25676,
											"end": 25682,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 25632,
											"end": 25704,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 25632,
											"end": 25704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25632,
											"end": 25704,
											"name": "tag",
											"source": 18,
											"value": "885"
										},
										{
											"begin": 25632,
											"end": 25704,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25269,
											"end": 25711,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 25269,
											"end": 25711,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 25269,
											"end": 25711,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25269,
											"end": 25711,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25269,
											"end": 25711,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25269,
											"end": 25711,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25269,
											"end": 25711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25717,
											"end": 25887,
											"name": "tag",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 25717,
											"end": 25887,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25857,
											"end": 25879,
											"name": "PUSH",
											"source": 18,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 25853,
											"end": 25854,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25845,
											"end": 25851,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25841,
											"end": 25855,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25834,
											"end": 25880,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 25717,
											"end": 25887,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25717,
											"end": 25887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25893,
											"end": 26259,
											"name": "tag",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 25893,
											"end": 26259,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26035,
											"end": 26038,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26056,
											"end": 26123,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "888"
										},
										{
											"begin": 26120,
											"end": 26122,
											"name": "PUSH",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 26115,
											"end": 26118,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 26056,
											"end": 26123,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 26056,
											"end": 26123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26056,
											"end": 26123,
											"name": "tag",
											"source": 18,
											"value": "888"
										},
										{
											"begin": 26056,
											"end": 26123,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26049,
											"end": 26123,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26049,
											"end": 26123,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26132,
											"end": 26225,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "889"
										},
										{
											"begin": 26221,
											"end": 26224,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26132,
											"end": 26225,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 26132,
											"end": 26225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26132,
											"end": 26225,
											"name": "tag",
											"source": 18,
											"value": "889"
										},
										{
											"begin": 26132,
											"end": 26225,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26250,
											"end": 26252,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 26245,
											"end": 26248,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26241,
											"end": 26253,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26234,
											"end": 26253,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26234,
											"end": 26253,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25893,
											"end": 26259,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 25893,
											"end": 26259,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25893,
											"end": 26259,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25893,
											"end": 26259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26265,
											"end": 26684,
											"name": "tag",
											"source": 18,
											"value": "448"
										},
										{
											"begin": 26265,
											"end": 26684,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26431,
											"end": 26435,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26469,
											"end": 26471,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 26458,
											"end": 26467,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26454,
											"end": 26472,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26446,
											"end": 26472,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26446,
											"end": 26472,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26518,
											"end": 26527,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26512,
											"end": 26516,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26508,
											"end": 26528,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 26504,
											"end": 26505,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26493,
											"end": 26502,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 26489,
											"end": 26506,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26482,
											"end": 26529,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 26546,
											"end": 26677,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "891"
										},
										{
											"begin": 26672,
											"end": 26676,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26546,
											"end": 26677,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 26546,
											"end": 26677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26546,
											"end": 26677,
											"name": "tag",
											"source": 18,
											"value": "891"
										},
										{
											"begin": 26546,
											"end": 26677,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26538,
											"end": 26677,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26538,
											"end": 26677,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26265,
											"end": 26684,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26265,
											"end": 26684,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26265,
											"end": 26684,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26265,
											"end": 26684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26690,
											"end": 26831,
											"name": "tag",
											"source": 18,
											"value": "594"
										},
										{
											"begin": 26690,
											"end": 26831,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26739,
											"end": 26743,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26762,
											"end": 26765,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26754,
											"end": 26765,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26754,
											"end": 26765,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26785,
											"end": 26788,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26782,
											"end": 26783,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26775,
											"end": 26789,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 26819,
											"end": 26823,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 26816,
											"end": 26817,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26806,
											"end": 26824,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 26798,
											"end": 26824,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26798,
											"end": 26824,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26690,
											"end": 26831,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26690,
											"end": 26831,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26690,
											"end": 26831,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26690,
											"end": 26831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26837,
											"end": 26930,
											"name": "tag",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 26837,
											"end": 26930,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26874,
											"end": 26880,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26921,
											"end": 26923,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 26916,
											"end": 26918,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 26909,
											"end": 26914,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 26905,
											"end": 26919,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26901,
											"end": 26924,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 26891,
											"end": 26924,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26891,
											"end": 26924,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26837,
											"end": 26930,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26837,
											"end": 26930,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26837,
											"end": 26930,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26837,
											"end": 26930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26936,
											"end": 27043,
											"name": "tag",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 26936,
											"end": 27043,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26980,
											"end": 26988,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27030,
											"end": 27035,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 27024,
											"end": 27028,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 27020,
											"end": 27036,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 26999,
											"end": 27036,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26999,
											"end": 27036,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26936,
											"end": 27043,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 26936,
											"end": 27043,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26936,
											"end": 27043,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26936,
											"end": 27043,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26936,
											"end": 27043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27049,
											"end": 27442,
											"name": "tag",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 27049,
											"end": 27442,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27118,
											"end": 27124,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27168,
											"end": 27169,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 27156,
											"end": 27166,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 27152,
											"end": 27170,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 27191,
											"end": 27288,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "896"
										},
										{
											"begin": 27221,
											"end": 27287,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27210,
											"end": 27219,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 27191,
											"end": 27288,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 27191,
											"end": 27288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27191,
											"end": 27288,
											"name": "tag",
											"source": 18,
											"value": "896"
										},
										{
											"begin": 27191,
											"end": 27288,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27309,
											"end": 27348,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "897"
										},
										{
											"begin": 27339,
											"end": 27347,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 27328,
											"end": 27337,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 27309,
											"end": 27348,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 27309,
											"end": 27348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27309,
											"end": 27348,
											"name": "tag",
											"source": 18,
											"value": "897"
										},
										{
											"begin": 27309,
											"end": 27348,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27297,
											"end": 27348,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 27297,
											"end": 27348,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27381,
											"end": 27385,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 27377,
											"end": 27386,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 27370,
											"end": 27375,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 27366,
											"end": 27387,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 27357,
											"end": 27387,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 27357,
											"end": 27387,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27430,
											"end": 27434,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 27420,
											"end": 27428,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 27416,
											"end": 27435,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 27409,
											"end": 27414,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 27406,
											"end": 27436,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 27396,
											"end": 27436,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 27396,
											"end": 27436,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27125,
											"end": 27442,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27125,
											"end": 27442,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27049,
											"end": 27442,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 27049,
											"end": 27442,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 27049,
											"end": 27442,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27049,
											"end": 27442,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27049,
											"end": 27442,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27049,
											"end": 27442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27448,
											"end": 27590,
											"name": "tag",
											"source": 18,
											"value": "598"
										},
										{
											"begin": 27448,
											"end": 27590,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27498,
											"end": 27507,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27531,
											"end": 27584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "899"
										},
										{
											"begin": 27549,
											"end": 27583,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "900"
										},
										{
											"begin": 27558,
											"end": 27582,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "901"
										},
										{
											"begin": 27576,
											"end": 27581,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 27558,
											"end": 27582,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 27558,
											"end": 27582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27558,
											"end": 27582,
											"name": "tag",
											"source": 18,
											"value": "901"
										},
										{
											"begin": 27558,
											"end": 27582,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27549,
											"end": 27583,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 27549,
											"end": 27583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27549,
											"end": 27583,
											"name": "tag",
											"source": 18,
											"value": "900"
										},
										{
											"begin": 27549,
											"end": 27583,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27531,
											"end": 27584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 27531,
											"end": 27584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27531,
											"end": 27584,
											"name": "tag",
											"source": 18,
											"value": "899"
										},
										{
											"begin": 27531,
											"end": 27584,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27518,
											"end": 27584,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27518,
											"end": 27584,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27448,
											"end": 27590,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 27448,
											"end": 27590,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27448,
											"end": 27590,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27448,
											"end": 27590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27596,
											"end": 27671,
											"name": "tag",
											"source": 18,
											"value": "599"
										},
										{
											"begin": 27596,
											"end": 27671,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27639,
											"end": 27642,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27660,
											"end": 27665,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27653,
											"end": 27665,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27653,
											"end": 27665,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27596,
											"end": 27671,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 27596,
											"end": 27671,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27596,
											"end": 27671,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27596,
											"end": 27671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27677,
											"end": 27946,
											"name": "tag",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 27677,
											"end": 27946,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27787,
											"end": 27826,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "904"
										},
										{
											"begin": 27818,
											"end": 27825,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 27787,
											"end": 27826,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "598"
										},
										{
											"begin": 27787,
											"end": 27826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27787,
											"end": 27826,
											"name": "tag",
											"source": 18,
											"value": "904"
										},
										{
											"begin": 27787,
											"end": 27826,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27848,
											"end": 27939,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "905"
										},
										{
											"begin": 27897,
											"end": 27938,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "906"
										},
										{
											"begin": 27921,
											"end": 27937,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 27897,
											"end": 27938,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "599"
										},
										{
											"begin": 27897,
											"end": 27938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27897,
											"end": 27938,
											"name": "tag",
											"source": 18,
											"value": "906"
										},
										{
											"begin": 27897,
											"end": 27938,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27889,
											"end": 27895,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 27882,
											"end": 27886,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 27876,
											"end": 27887,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 27848,
											"end": 27939,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 27848,
											"end": 27939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27848,
											"end": 27939,
											"name": "tag",
											"source": 18,
											"value": "905"
										},
										{
											"begin": 27848,
											"end": 27939,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27842,
											"end": 27846,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 27835,
											"end": 27940,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 27753,
											"end": 27946,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27677,
											"end": 27946,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27677,
											"end": 27946,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27677,
											"end": 27946,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27677,
											"end": 27946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27952,
											"end": 28025,
											"name": "tag",
											"source": 18,
											"value": "601"
										},
										{
											"begin": 27952,
											"end": 28025,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27997,
											"end": 28000,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27952,
											"end": 28025,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27952,
											"end": 28025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28031,
											"end": 28220,
											"name": "tag",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 28031,
											"end": 28220,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28108,
											"end": 28140,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "909"
										},
										{
											"begin": 28108,
											"end": 28140,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "601"
										},
										{
											"begin": 28108,
											"end": 28140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28108,
											"end": 28140,
											"name": "tag",
											"source": 18,
											"value": "909"
										},
										{
											"begin": 28108,
											"end": 28140,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28149,
											"end": 28214,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "910"
										},
										{
											"begin": 28207,
											"end": 28213,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 28199,
											"end": 28205,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 28193,
											"end": 28197,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 28149,
											"end": 28214,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 28149,
											"end": 28214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28149,
											"end": 28214,
											"name": "tag",
											"source": 18,
											"value": "910"
										},
										{
											"begin": 28149,
											"end": 28214,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28084,
											"end": 28220,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28031,
											"end": 28220,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28031,
											"end": 28220,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28031,
											"end": 28220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28226,
											"end": 28412,
											"name": "tag",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 28226,
											"end": 28412,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28286,
											"end": 28406,
											"name": "tag",
											"source": 18,
											"value": "912"
										},
										{
											"begin": 28286,
											"end": 28406,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28303,
											"end": 28306,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 28296,
											"end": 28301,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 28293,
											"end": 28307,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 28286,
											"end": 28406,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 28286,
											"end": 28406,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "914"
										},
										{
											"begin": 28286,
											"end": 28406,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 28357,
											"end": 28396,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "915"
										},
										{
											"begin": 28394,
											"end": 28395,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28387,
											"end": 28392,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28357,
											"end": 28396,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 28357,
											"end": 28396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28357,
											"end": 28396,
											"name": "tag",
											"source": 18,
											"value": "915"
										},
										{
											"begin": 28357,
											"end": 28396,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28330,
											"end": 28331,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 28323,
											"end": 28328,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 28319,
											"end": 28332,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 28310,
											"end": 28332,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 28310,
											"end": 28332,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28286,
											"end": 28406,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "912"
										},
										{
											"begin": 28286,
											"end": 28406,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28286,
											"end": 28406,
											"name": "tag",
											"source": 18,
											"value": "914"
										},
										{
											"begin": 28286,
											"end": 28406,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28226,
											"end": 28412,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28226,
											"end": 28412,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28226,
											"end": 28412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28418,
											"end": 28961,
											"name": "tag",
											"source": 18,
											"value": "604"
										},
										{
											"begin": 28418,
											"end": 28961,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28519,
											"end": 28521,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 28514,
											"end": 28517,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28511,
											"end": 28522,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 28508,
											"end": 28954,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 28508,
											"end": 28954,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "917"
										},
										{
											"begin": 28508,
											"end": 28954,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 28553,
											"end": 28591,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "918"
										},
										{
											"begin": 28585,
											"end": 28590,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 28553,
											"end": 28591,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "594"
										},
										{
											"begin": 28553,
											"end": 28591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28553,
											"end": 28591,
											"name": "tag",
											"source": 18,
											"value": "918"
										},
										{
											"begin": 28553,
											"end": 28591,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28637,
											"end": 28666,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "919"
										},
										{
											"begin": 28655,
											"end": 28665,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 28637,
											"end": 28666,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 28637,
											"end": 28666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28637,
											"end": 28666,
											"name": "tag",
											"source": 18,
											"value": "919"
										},
										{
											"begin": 28637,
											"end": 28666,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28627,
											"end": 28635,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 28623,
											"end": 28667,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 28820,
											"end": 28822,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 28808,
											"end": 28818,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 28805,
											"end": 28823,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 28802,
											"end": 28851,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 28802,
											"end": 28851,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "920"
										},
										{
											"begin": 28802,
											"end": 28851,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 28841,
											"end": 28849,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 28826,
											"end": 28849,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 28826,
											"end": 28849,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28802,
											"end": 28851,
											"name": "tag",
											"source": 18,
											"value": "920"
										},
										{
											"begin": 28802,
											"end": 28851,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28864,
											"end": 28944,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "921"
										},
										{
											"begin": 28920,
											"end": 28942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "922"
										},
										{
											"begin": 28938,
											"end": 28941,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 28920,
											"end": 28942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 28920,
											"end": 28942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28920,
											"end": 28942,
											"name": "tag",
											"source": 18,
											"value": "922"
										},
										{
											"begin": 28920,
											"end": 28942,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28910,
											"end": 28918,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 28906,
											"end": 28943,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 28893,
											"end": 28904,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28864,
											"end": 28944,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 28864,
											"end": 28944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28864,
											"end": 28944,
											"name": "tag",
											"source": 18,
											"value": "921"
										},
										{
											"begin": 28864,
											"end": 28944,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28523,
											"end": 28954,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28523,
											"end": 28954,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28508,
											"end": 28954,
											"name": "tag",
											"source": 18,
											"value": "917"
										},
										{
											"begin": 28508,
											"end": 28954,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28418,
											"end": 28961,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28418,
											"end": 28961,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28418,
											"end": 28961,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28418,
											"end": 28961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28967,
											"end": 29084,
											"name": "tag",
											"source": 18,
											"value": "605"
										},
										{
											"begin": 28967,
											"end": 29084,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29021,
											"end": 29029,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 29071,
											"end": 29076,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29065,
											"end": 29069,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29061,
											"end": 29077,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 29040,
											"end": 29077,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 29040,
											"end": 29077,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28967,
											"end": 29084,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 28967,
											"end": 29084,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 28967,
											"end": 29084,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28967,
											"end": 29084,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28967,
											"end": 29084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29090,
											"end": 29259,
											"name": "tag",
											"source": 18,
											"value": "606"
										},
										{
											"begin": 29090,
											"end": 29259,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29134,
											"end": 29140,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 29167,
											"end": 29218,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "925"
										},
										{
											"begin": 29215,
											"end": 29216,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 29211,
											"end": 29217,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 29203,
											"end": 29208,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 29200,
											"end": 29201,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 29196,
											"end": 29209,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 29167,
											"end": 29218,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "605"
										},
										{
											"begin": 29167,
											"end": 29218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29167,
											"end": 29218,
											"name": "tag",
											"source": 18,
											"value": "925"
										},
										{
											"begin": 29167,
											"end": 29218,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29163,
											"end": 29219,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 29248,
											"end": 29252,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 29242,
											"end": 29246,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 29238,
											"end": 29253,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 29228,
											"end": 29253,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 29228,
											"end": 29253,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29141,
											"end": 29259,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29090,
											"end": 29259,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 29090,
											"end": 29259,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 29090,
											"end": 29259,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29090,
											"end": 29259,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29090,
											"end": 29259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29264,
											"end": 29559,
											"name": "tag",
											"source": 18,
											"value": "607"
										},
										{
											"begin": 29264,
											"end": 29559,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29340,
											"end": 29344,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 29486,
											"end": 29515,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "927"
										},
										{
											"begin": 29511,
											"end": 29514,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 29505,
											"end": 29509,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 29486,
											"end": 29515,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "606"
										},
										{
											"begin": 29486,
											"end": 29515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29486,
											"end": 29515,
											"name": "tag",
											"source": 18,
											"value": "927"
										},
										{
											"begin": 29486,
											"end": 29515,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29478,
											"end": 29515,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 29478,
											"end": 29515,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29548,
											"end": 29551,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29545,
											"end": 29546,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 29541,
											"end": 29552,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 29535,
											"end": 29539,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29532,
											"end": 29553,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 29524,
											"end": 29553,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 29524,
											"end": 29553,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29264,
											"end": 29559,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 29264,
											"end": 29559,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 29264,
											"end": 29559,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29264,
											"end": 29559,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29264,
											"end": 29559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29564,
											"end": 30959,
											"name": "tag",
											"source": 18,
											"value": "486"
										},
										{
											"begin": 29564,
											"end": 30959,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29681,
											"end": 29718,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "929"
										},
										{
											"begin": 29714,
											"end": 29717,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29681,
											"end": 29718,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 29681,
											"end": 29718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29681,
											"end": 29718,
											"name": "tag",
											"source": 18,
											"value": "929"
										},
										{
											"begin": 29681,
											"end": 29718,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29783,
											"end": 29801,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29775,
											"end": 29781,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 29772,
											"end": 29802,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 29769,
											"end": 29825,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 29769,
											"end": 29825,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "930"
										},
										{
											"begin": 29769,
											"end": 29825,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 29805,
											"end": 29823,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "931"
										},
										{
											"begin": 29805,
											"end": 29823,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 29805,
											"end": 29823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29805,
											"end": 29823,
											"name": "tag",
											"source": 18,
											"value": "931"
										},
										{
											"begin": 29805,
											"end": 29823,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29769,
											"end": 29825,
											"name": "tag",
											"source": 18,
											"value": "930"
										},
										{
											"begin": 29769,
											"end": 29825,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29849,
											"end": 29887,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "932"
										},
										{
											"begin": 29881,
											"end": 29885,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29875,
											"end": 29886,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 29849,
											"end": 29887,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "162"
										},
										{
											"begin": 29849,
											"end": 29887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29849,
											"end": 29887,
											"name": "tag",
											"source": 18,
											"value": "932"
										},
										{
											"begin": 29849,
											"end": 29887,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29934,
											"end": 30001,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "933"
										},
										{
											"begin": 29994,
											"end": 30000,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29986,
											"end": 29992,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29980,
											"end": 29984,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 29934,
											"end": 30001,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "604"
										},
										{
											"begin": 29934,
											"end": 30001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29934,
											"end": 30001,
											"name": "tag",
											"source": 18,
											"value": "933"
										},
										{
											"begin": 29934,
											"end": 30001,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30028,
											"end": 30029,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30052,
											"end": 30056,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 30039,
											"end": 30056,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30039,
											"end": 30056,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30084,
											"end": 30086,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 30076,
											"end": 30082,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 30073,
											"end": 30087,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 30101,
											"end": 30102,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 30096,
											"end": 30714,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 30096,
											"end": 30714,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 30096,
											"end": 30714,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "935"
										},
										{
											"begin": 30096,
											"end": 30714,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 30758,
											"end": 30759,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30775,
											"end": 30781,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 30772,
											"end": 30849,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 30772,
											"end": 30849,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "936"
										},
										{
											"begin": 30772,
											"end": 30849,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 30824,
											"end": 30833,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30819,
											"end": 30822,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 30815,
											"end": 30834,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 30809,
											"end": 30835,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 30800,
											"end": 30835,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30800,
											"end": 30835,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30772,
											"end": 30849,
											"name": "tag",
											"source": 18,
											"value": "936"
										},
										{
											"begin": 30772,
											"end": 30849,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30875,
											"end": 30942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "937"
										},
										{
											"begin": 30935,
											"end": 30941,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 30928,
											"end": 30933,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30875,
											"end": 30942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "607"
										},
										{
											"begin": 30875,
											"end": 30942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30875,
											"end": 30942,
											"name": "tag",
											"source": 18,
											"value": "937"
										},
										{
											"begin": 30875,
											"end": 30942,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30869,
											"end": 30873,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 30862,
											"end": 30943,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 30731,
											"end": 30953,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30066,
											"end": 30953,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "934"
										},
										{
											"begin": 30066,
											"end": 30953,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30096,
											"end": 30714,
											"name": "tag",
											"source": 18,
											"value": "935"
										},
										{
											"begin": 30096,
											"end": 30714,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30148,
											"end": 30152,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 30144,
											"end": 30153,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 30136,
											"end": 30142,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 30132,
											"end": 30154,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 30182,
											"end": 30219,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "938"
										},
										{
											"begin": 30214,
											"end": 30218,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 30182,
											"end": 30219,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "594"
										},
										{
											"begin": 30182,
											"end": 30219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30182,
											"end": 30219,
											"name": "tag",
											"source": 18,
											"value": "938"
										},
										{
											"begin": 30182,
											"end": 30219,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30241,
											"end": 30242,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30255,
											"end": 30463,
											"name": "tag",
											"source": 18,
											"value": "939"
										},
										{
											"begin": 30255,
											"end": 30463,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30269,
											"end": 30276,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30266,
											"end": 30267,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 30263,
											"end": 30277,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 30255,
											"end": 30463,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 30255,
											"end": 30463,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "941"
										},
										{
											"begin": 30255,
											"end": 30463,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 30348,
											"end": 30357,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 30343,
											"end": 30346,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 30339,
											"end": 30358,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 30333,
											"end": 30359,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 30325,
											"end": 30331,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30318,
											"end": 30360,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 30399,
											"end": 30400,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 30391,
											"end": 30397,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30387,
											"end": 30401,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 30377,
											"end": 30401,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 30377,
											"end": 30401,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30446,
											"end": 30448,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 30435,
											"end": 30444,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 30431,
											"end": 30449,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 30418,
											"end": 30449,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 30418,
											"end": 30449,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30292,
											"end": 30296,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 30289,
											"end": 30290,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 30285,
											"end": 30297,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 30280,
											"end": 30297,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30280,
											"end": 30297,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30255,
											"end": 30463,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "939"
										},
										{
											"begin": 30255,
											"end": 30463,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30255,
											"end": 30463,
											"name": "tag",
											"source": 18,
											"value": "941"
										},
										{
											"begin": 30255,
											"end": 30463,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30491,
											"end": 30497,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 30482,
											"end": 30489,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 30479,
											"end": 30498,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 30476,
											"end": 30655,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 30476,
											"end": 30655,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "942"
										},
										{
											"begin": 30476,
											"end": 30655,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 30549,
											"end": 30558,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 30544,
											"end": 30547,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 30540,
											"end": 30559,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 30534,
											"end": 30560,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 30592,
											"end": 30640,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "943"
										},
										{
											"begin": 30634,
											"end": 30638,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 30626,
											"end": 30632,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 30622,
											"end": 30639,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 30611,
											"end": 30620,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30592,
											"end": 30640,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "606"
										},
										{
											"begin": 30592,
											"end": 30640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30592,
											"end": 30640,
											"name": "tag",
											"source": 18,
											"value": "943"
										},
										{
											"begin": 30592,
											"end": 30640,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30584,
											"end": 30590,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 30577,
											"end": 30641,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 30499,
											"end": 30655,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30476,
											"end": 30655,
											"name": "tag",
											"source": 18,
											"value": "942"
										},
										{
											"begin": 30476,
											"end": 30655,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30701,
											"end": 30702,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 30697,
											"end": 30698,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 30689,
											"end": 30695,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 30685,
											"end": 30699,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 30681,
											"end": 30703,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 30675,
											"end": 30679,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 30668,
											"end": 30704,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 30103,
											"end": 30714,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30103,
											"end": 30714,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30103,
											"end": 30714,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30066,
											"end": 30953,
											"name": "tag",
											"source": 18,
											"value": "934"
										},
										{
											"begin": 30066,
											"end": 30953,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30066,
											"end": 30953,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29656,
											"end": 30959,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29656,
											"end": 30959,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29656,
											"end": 30959,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29564,
											"end": 30959,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29564,
											"end": 30959,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29564,
											"end": 30959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30965,
											"end": 31145,
											"name": "tag",
											"source": 18,
											"value": "608"
										},
										{
											"begin": 30965,
											"end": 31145,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31013,
											"end": 31090,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31010,
											"end": 31011,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 31003,
											"end": 31091,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 31110,
											"end": 31114,
											"name": "PUSH",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 31107,
											"end": 31108,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 31100,
											"end": 31115,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 31134,
											"end": 31138,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 31131,
											"end": 31132,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 31124,
											"end": 31139,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 31151,
											"end": 31336,
											"name": "tag",
											"source": 18,
											"value": "503"
										},
										{
											"begin": 31151,
											"end": 31336,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31191,
											"end": 31192,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 31208,
											"end": 31228,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "946"
										},
										{
											"begin": 31226,
											"end": 31227,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 31208,
											"end": 31228,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 31208,
											"end": 31228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31208,
											"end": 31228,
											"name": "tag",
											"source": 18,
											"value": "946"
										},
										{
											"begin": 31208,
											"end": 31228,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31203,
											"end": 31228,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 31203,
											"end": 31228,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31242,
											"end": 31262,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "947"
										},
										{
											"begin": 31260,
											"end": 31261,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 31242,
											"end": 31262,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 31242,
											"end": 31262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31242,
											"end": 31262,
											"name": "tag",
											"source": 18,
											"value": "947"
										},
										{
											"begin": 31242,
											"end": 31262,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31237,
											"end": 31262,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 31237,
											"end": 31262,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31281,
											"end": 31282,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 31271,
											"end": 31306,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "948"
										},
										{
											"begin": 31271,
											"end": 31306,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 31286,
											"end": 31304,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "949"
										},
										{
											"begin": 31286,
											"end": 31304,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "608"
										},
										{
											"begin": 31286,
											"end": 31304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31286,
											"end": 31304,
											"name": "tag",
											"source": 18,
											"value": "949"
										},
										{
											"begin": 31286,
											"end": 31304,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31271,
											"end": 31306,
											"name": "tag",
											"source": 18,
											"value": "948"
										},
										{
											"begin": 31271,
											"end": 31306,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31328,
											"end": 31329,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 31325,
											"end": 31326,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 31321,
											"end": 31330,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 31316,
											"end": 31330,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 31316,
											"end": 31330,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31151,
											"end": 31336,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 31151,
											"end": 31336,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 31151,
											"end": 31336,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31151,
											"end": 31336,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31151,
											"end": 31336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31342,
											"end": 31440,
											"name": "tag",
											"source": 18,
											"value": "609"
										},
										{
											"begin": 31342,
											"end": 31440,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31393,
											"end": 31399,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 31427,
											"end": 31432,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 31421,
											"end": 31433,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 31411,
											"end": 31433,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 31411,
											"end": 31433,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31342,
											"end": 31440,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 31342,
											"end": 31440,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 31342,
											"end": 31440,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31342,
											"end": 31440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31446,
											"end": 31593,
											"name": "tag",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 31446,
											"end": 31593,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31547,
											"end": 31558,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 31584,
											"end": 31587,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 31569,
											"end": 31587,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 31569,
											"end": 31587,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31446,
											"end": 31593,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 31446,
											"end": 31593,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 31446,
											"end": 31593,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31446,
											"end": 31593,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31446,
											"end": 31593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31599,
											"end": 31985,
											"name": "tag",
											"source": 18,
											"value": "611"
										},
										{
											"begin": 31599,
											"end": 31985,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31703,
											"end": 31706,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 31731,
											"end": 31769,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "953"
										},
										{
											"begin": 31763,
											"end": 31768,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 31731,
											"end": 31769,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "609"
										},
										{
											"begin": 31731,
											"end": 31769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31731,
											"end": 31769,
											"name": "tag",
											"source": 18,
											"value": "953"
										},
										{
											"begin": 31731,
											"end": 31769,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31785,
											"end": 31873,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "954"
										},
										{
											"begin": 31866,
											"end": 31872,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 31861,
											"end": 31864,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 31785,
											"end": 31873,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 31785,
											"end": 31873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31785,
											"end": 31873,
											"name": "tag",
											"source": 18,
											"value": "954"
										},
										{
											"begin": 31785,
											"end": 31873,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31778,
											"end": 31873,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 31778,
											"end": 31873,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31882,
											"end": 31947,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "955"
										},
										{
											"begin": 31940,
											"end": 31946,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 31935,
											"end": 31938,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 31928,
											"end": 31932,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 31921,
											"end": 31926,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 31917,
											"end": 31933,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 31882,
											"end": 31947,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 31882,
											"end": 31947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31882,
											"end": 31947,
											"name": "tag",
											"source": 18,
											"value": "955"
										},
										{
											"begin": 31882,
											"end": 31947,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31972,
											"end": 31978,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 31967,
											"end": 31970,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 31963,
											"end": 31979,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 31956,
											"end": 31979,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 31956,
											"end": 31979,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31707,
											"end": 31985,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31599,
											"end": 31985,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 31599,
											"end": 31985,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 31599,
											"end": 31985,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31599,
											"end": 31985,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31599,
											"end": 31985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31991,
											"end": 32262,
											"name": "tag",
											"source": 18,
											"value": "511"
										},
										{
											"begin": 31991,
											"end": 32262,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32121,
											"end": 32124,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 32143,
											"end": 32236,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "957"
										},
										{
											"begin": 32232,
											"end": 32235,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 32223,
											"end": 32229,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 32143,
											"end": 32236,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "611"
										},
										{
											"begin": 32143,
											"end": 32236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32143,
											"end": 32236,
											"name": "tag",
											"source": 18,
											"value": "957"
										},
										{
											"begin": 32143,
											"end": 32236,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32136,
											"end": 32236,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 32136,
											"end": 32236,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32253,
											"end": 32256,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 32246,
											"end": 32256,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 32246,
											"end": 32256,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31991,
											"end": 32262,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 31991,
											"end": 32262,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 31991,
											"end": 32262,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31991,
											"end": 32262,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31991,
											"end": 32262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/SocialToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"claimReward()": "b88a802f",
							"decimals()": "313ce567",
							"initialize(string,string,address,(uint256,uint256,uint256,uint256,uint256,uint256))": "af9dcc2c",
							"lastMechanicsUpdate()": "9e24f236",
							"lastRewardClaim(address)": "d8ad5231",
							"mechanics()": "38b42785",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"socialOracle()": "78f3c4b6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"updateBasedOnMetrics()": "a7892c11",
							"updateMechanics((uint256,uint256,uint256,uint256,uint256,uint256))": "0b594036",
							"updateOracle(address)": "1cb44dfc",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CooldownPeriodNotElapsed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientTweetCount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMetricsTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOracleAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardClaimTooSoon\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minSentimentScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minEngagementRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTweetCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardBaseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penaltyBaseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cooldownPeriod\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct SocialToken.TokenMechanics\",\"name\":\"mechanics\",\"type\":\"tuple\"}],\"name\":\"MechanicsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"OracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sentimentScore\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"engagementRate\",\"type\":\"uint256\"}],\"name\":\"PenaltyApplied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sentimentScore\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"engagementRate\",\"type\":\"uint256\"}],\"name\":\"RewardDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_socialOracle\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minSentimentScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minEngagementRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTweetCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardBaseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penaltyBaseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cooldownPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct SocialToken.TokenMechanics\",\"name\":\"_mechanics\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastMechanicsUpdate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastRewardClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mechanics\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minSentimentScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minEngagementRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTweetCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardBaseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penaltyBaseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cooldownPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"socialOracle\",\"outputs\":[{\"internalType\":\"contract ISocialMetricsOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateBasedOnMetrics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minSentimentScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minEngagementRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTweetCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardBaseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penaltyBaseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cooldownPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct SocialToken.TokenMechanics\",\"name\":\"newMechanics\",\"type\":\"tuple\"}],\"name\":\"updateMechanics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"updateOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SocialToken.sol\":\"SocialToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xbb96dc9c468170c3224126e953de917e06332ec5909a3d85e6e5bb0df10c5139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d14e6486e127e7e31c2ffccfc212c7ebaaecf8fb05677575128b449ee113def2\",\"dweb:/ipfs/QmabvyfStwBcum8mGfkmxcTV45rjyHmzHGCxfxyhmu48Yx\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/SocialToken.sol\":{\"keccak256\":\"0x0f874dc49667a865f8bd47587c7a9e094174e69d6e2dd3ac12aaa9b675e1f5c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57e9c446861cae02d5bd3b7c1ca7a5bc9cbd0a72ae66ff614e03070c2f53a5b7\",\"dweb:/ipfs/QmZA75e3qddxuSEBB2znsspSZzh5453cYAyXVZc3ep3occ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 652,
								"contract": "contracts/SocialToken.sol:SocialToken",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 757,
								"contract": "contracts/SocialToken.sol:SocialToken",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 2756,
								"contract": "contracts/SocialToken.sol:SocialToken",
								"label": "socialOracle",
								"offset": 0,
								"slot": "50",
								"type": "t_contract(ISocialMetricsOracle)2742"
							},
							{
								"astId": 2772,
								"contract": "contracts/SocialToken.sol:SocialToken",
								"label": "mechanics",
								"offset": 0,
								"slot": "51",
								"type": "t_struct(TokenMechanics)2769_storage"
							},
							{
								"astId": 2774,
								"contract": "contracts/SocialToken.sol:SocialToken",
								"label": "lastMechanicsUpdate",
								"offset": 0,
								"slot": "57",
								"type": "t_uint256"
							},
							{
								"astId": 2778,
								"contract": "contracts/SocialToken.sol:SocialToken",
								"label": "lastRewardClaim",
								"offset": 0,
								"slot": "58",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ISocialMetricsOracle)2742": {
								"encoding": "inplace",
								"label": "contract ISocialMetricsOracle",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(TokenMechanics)2769_storage": {
								"encoding": "inplace",
								"label": "struct SocialToken.TokenMechanics",
								"members": [
									{
										"astId": 2758,
										"contract": "contracts/SocialToken.sol:SocialToken",
										"label": "minSentimentScore",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2760,
										"contract": "contracts/SocialToken.sol:SocialToken",
										"label": "minEngagementRate",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2762,
										"contract": "contracts/SocialToken.sol:SocialToken",
										"label": "minTweetCount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2764,
										"contract": "contracts/SocialToken.sol:SocialToken",
										"label": "rewardBaseAmount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2766,
										"contract": "contracts/SocialToken.sol:SocialToken",
										"label": "penaltyBaseAmount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2768,
										"contract": "contracts/SocialToken.sol:SocialToken",
										"label": "cooldownPeriod",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1421
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 1422,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1421,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1421,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								1421,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1403,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1883
						],
						"IERC1822Proxiable": [
							1452
						],
						"Initializable": [
							448
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 1453,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1452,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 1884,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 453,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1883,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 456,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 449,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 455,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 458,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1023:13:2"
									},
									"id": 459,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 460,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1452,
										"src": "1038:17:2"
									},
									"id": 461,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 457,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 630,
							"linearizedBaseContracts": [
								630,
								1452,
								448
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 468,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 463,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 466,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 465,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 464,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 467,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 472,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 470,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 471,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 475,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 480,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2645:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 483,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "2655:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:2"
											},
											{
												"id": 486,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 488,
									"name": "onlyProxy",
									"nameLocation": "2633:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:2"
									},
									"src": "2624:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2916:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 491,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "2926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:2"
											},
											{
												"id": 494,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:2"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 496,
									"name": "notDelegated",
									"nameLocation": "2901:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:2"
									},
									"src": "2892:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "3030:7:2",
										"statements": []
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 499,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 498,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3013:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:2"
									},
									"scope": 630,
									"src": "2970:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "3113:7:2",
										"statements": []
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 504,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3096:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:2"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 630,
									"src": "3043:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1451
									],
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "3786:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 516,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1883,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1883_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1604,
													"src": "3803:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 515,
												"id": 518,
												"nodeType": "Return",
												"src": "3796:39:2"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:2",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 512,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 511,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 496,
												"src": "3755:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:2"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "3777:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 513,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:2"
									},
									"scope": 630,
									"src": "3708:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "4266:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4294:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 530,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "4276:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4344:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4363:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 534,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "4322:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:2"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 528,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 527,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "4256:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4187:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4214:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:2"
									},
									"scope": 630,
									"src": "4161:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "4648:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 546,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4683:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4675:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 544,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4675:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4675:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 548,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4692:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4675:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 550,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1883,
																	"src": "4753:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1883_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4766:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1635,
																"src": "4753:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4753:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 553,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4789:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4753:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4675:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "4658:251:2",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "4848:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 556,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "4869:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4869:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 558,
															"nodeType": "RevertStatement",
															"src": "4862:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "4381:217:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4612:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:2:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4648:0:2"
									},
									"scope": 630,
									"src": "4603:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5084:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 568,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5106:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5098:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5098:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 570,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "5115:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5098:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 576,
												"nodeType": "IfStatement",
												"src": "5094:145:2",
												"trueBody": {
													"id": 575,
													"nodeType": "Block",
													"src": "5123:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 572,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "5199:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5199:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 574,
															"nodeType": "RevertStatement",
															"src": "5192:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "4921:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5041:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:2:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5084:0:2"
									},
									"scope": 630,
									"src": "5032:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5251:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5637:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5663:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "5655:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5655:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5654:27:2"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5698:0:2"
									},
									"scope": 630,
									"src": "5628:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "6142:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 617,
															"nodeType": "Block",
															"src": "6232:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 600,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "6250:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 601,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1883,
																				"src": "6258:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1883_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6271:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1604,
																			"src": "6258:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6250:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 609,
																	"nodeType": "IfStatement",
																	"src": "6246:120:2",
																	"trueBody": {
																		"id": 608,
																		"nodeType": "Block",
																		"src": "6292:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 605,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 598,
																							"src": "6346:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 604,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 480,
																						"src": "6317:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6317:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 607,
																				"nodeType": "RevertStatement",
																				"src": "6310:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 613,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6409:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 614,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "6428:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1883,
																				"src": "6379:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1883_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6392:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1698,
																			"src": "6379:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6379:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 616,
																	"nodeType": "ExpressionStatement",
																	"src": "6379:54:2"
																}
															]
														},
														"errorName": "",
														"id": 618,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 599,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 598,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6226:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 618,
																	"src": "6218:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 597,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6217:14:2"
														},
														"src": "6209:235:2"
													},
													{
														"block": {
															"id": 625,
															"nodeType": "Block",
															"src": "6451:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 622,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6560:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 619,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1883,
																				"src": "6518:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1883_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6531:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1609,
																			"src": "6518:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6518:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 624,
																	"nodeType": "RevertStatement",
																	"src": "6511:67:2"
																}
															]
														},
														"errorName": "",
														"id": 626,
														"nodeType": "TryCatchClause",
														"src": "6445:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 593,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "6174:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 592,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1452,
																"src": "6156:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1452_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6156:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1452",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6193:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1451,
														"src": "6156:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6156:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 627,
												"nodeType": "TryStatement",
												"src": "6152:437:2"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "5705:347:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6066:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6096:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6088:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6128:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6115:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6087:46:2"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6142:0:2"
									},
									"scope": 630,
									"src": "6057:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 631,
							"src": "986:5611:2",
							"usedErrors": [
								211,
								214,
								475,
								480,
								1609,
								1622,
								2007,
								2269
							],
							"usedEvents": [
								219,
								1429
							]
						}
					],
					"src": "115:6483:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1421
						],
						"Initializable": [
							448
						],
						"PausableUpgradeable": [
							758
						]
					},
					"id": 759,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 633,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 759,
							"sourceUnit": 1422,
							"src": "130:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 759,
							"sourceUnit": 449,
							"src": "172:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 634,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "180:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 637,
										"name": "Initializable",
										"nameLocations": [
											"718:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "718:13:3"
									},
									"id": 638,
									"nodeType": "InheritanceSpecifier",
									"src": "718:13:3"
								},
								{
									"baseName": {
										"id": 639,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"733:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1421,
										"src": "733:18:3"
									},
									"id": 640,
									"nodeType": "InheritanceSpecifier",
									"src": "733:18:3"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 636,
								"nodeType": "StructuredDocumentation",
								"src": "237:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 758,
							"linearizedBaseContracts": [
								758,
								1421,
								448
							],
							"name": "PausableUpgradeable",
							"nameLocation": "695:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "758:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 645,
									"name": "Paused",
									"nameLocation": "842:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "857:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "849:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:17:3"
									},
									"src": "836:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "872:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 650,
									"name": "Unpaused",
									"nameLocation": "953:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "962:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:3"
									},
									"src": "947:32:3"
								},
								{
									"constant": false,
									"id": 652,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "998:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 758,
									"src": "985:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 651,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "985:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "1137:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 658,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1147:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "1147:27:3"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "1012:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 656,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 655,
												"name": "onlyInitializing",
												"nameLocations": [
													"1120:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1120:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1120:16:3"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1093:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:3"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:0:3"
									},
									"scope": 758,
									"src": "1084:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "1250:32:3",
										"statements": [
											{
												"expression": {
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 667,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "1260:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1270:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1260:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "1260:15:3"
											}
										]
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 665,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 664,
												"name": "onlyInitializing",
												"nameLocations": [
													"1233:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1233:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1233:16:3"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1196:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:2:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:0:3"
									},
									"scope": 758,
									"src": "1187:95:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "1493:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 675,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "1503:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1503:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "1503:19:3"
											},
											{
												"id": 678,
												"nodeType": "PlaceholderStatement",
												"src": "1532:1:3"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "1288:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 680,
									"name": "whenNotPaused",
									"nameLocation": "1477:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:2:3"
									},
									"src": "1468:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "1740:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 683,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "1750:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "1750:16:3"
											},
											{
												"id": 686,
												"nodeType": "PlaceholderStatement",
												"src": "1776:1:3"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "1546:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 688,
									"name": "whenPaused",
									"nameLocation": "1727:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:2:3"
									},
									"src": "1718:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "1932:31:3",
										"statements": [
											{
												"expression": {
													"id": 694,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 652,
													"src": "1949:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 693,
												"id": 695,
												"nodeType": "Return",
												"src": "1942:14:3"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "1790:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1888:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:2:3"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1926:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1926:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1925:6:3"
									},
									"scope": 758,
									"src": "1879:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "2082:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2100:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 702,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "2101:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2101:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2111:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2092:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2092:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "2092:38:3"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "1969:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2040:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:2:3"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:0:3"
									},
									"scope": 758,
									"src": "2031:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "2257:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 714,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "2275:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2275:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2285:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2267:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2267:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "2267:41:3"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "2143:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2218:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2232:2:3"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:0:3"
									},
									"scope": 758,
									"src": "2209:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "2499:66:3",
										"statements": [
											{
												"expression": {
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 726,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "2509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2519:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2509:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "2509:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 731,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "2545:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2545:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 730,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "2538:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2538:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "EmitStatement",
												"src": "2533:25:3"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "2321:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 724,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 723,
												"name": "whenNotPaused",
												"nameLocations": [
													"2485:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "2485:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2485:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2459:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2465:2:3"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2499:0:3"
									},
									"scope": 758,
									"src": "2450:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "2745:69:3",
										"statements": [
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 742,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "2755:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2765:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2755:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "2755:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 747,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "2794:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2794:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 746,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "2785:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2785:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "EmitStatement",
												"src": "2780:27:3"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "2571:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 740,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 739,
												"name": "whenPaused",
												"nameLocations": [
													"2734:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 688,
												"src": "2734:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2734:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2706:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2714:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2745:0:3"
									},
									"scope": 758,
									"src": "2697:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "2820:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 757,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3099:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 758,
									"src": "3079:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 754,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3079:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 756,
										"length": {
											"hexValue": "3439",
											"id": 755,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3087:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3079:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 759,
							"src": "677:2430:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219,
								645,
								650
							]
						}
					],
					"src": "105:3003:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1421
						],
						"ERC20Upgradeable": [
							1375
						],
						"IERC20": [
							1971
						],
						"IERC20Errors": [
							1494
						],
						"IERC20Metadata": [
							1997
						],
						"Initializable": [
							448
						]
					},
					"id": 1376,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 760,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 762,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 1972,
							"src": "131:70:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 761,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1971,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 764,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 1998,
							"src": "202:97:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 763,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1997,
										"src": "210:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 1422,
							"src": "300:70:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 765,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1421,
										"src": "308:18:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 1590,
							"src": "371:83:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 767,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1494,
										"src": "379:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 449,
							"src": "455:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 769,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "463:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 772,
										"name": "Initializable",
										"nameLocations": [
											"1319:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1319:13:4"
									},
									"id": 773,
									"nodeType": "InheritanceSpecifier",
									"src": "1319:13:4"
								},
								{
									"baseName": {
										"id": 774,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1334:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1421,
										"src": "1334:18:4"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "1334:18:4"
								},
								{
									"baseName": {
										"id": 776,
										"name": "IERC20",
										"nameLocations": [
											"1354:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1971,
										"src": "1354:6:4"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "1354:6:4"
								},
								{
									"baseName": {
										"id": 778,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1362:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1997,
										"src": "1362:14:4"
									},
									"id": 779,
									"nodeType": "InheritanceSpecifier",
									"src": "1362:14:4"
								},
								{
									"baseName": {
										"id": 780,
										"name": "IERC20Errors",
										"nameLocations": [
											"1378:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1494,
										"src": "1378:12:4"
									},
									"id": 781,
									"nodeType": "InheritanceSpecifier",
									"src": "1378:12:4"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 771,
								"nodeType": "StructuredDocumentation",
								"src": "523:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1375,
							"linearizedBaseContracts": [
								1375,
								1494,
								1997,
								1971,
								1421,
								448
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1299:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "1397:63:4",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 799,
									"members": [
										{
											"constant": false,
											"id": 786,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1531:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1495:45:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 785,
												"keyName": "account",
												"keyNameLocation": "1511:7:4",
												"keyType": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1495:35:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 792,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1615:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1551:75:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 791,
												"keyName": "account",
												"keyNameLocation": "1567:7:4",
												"keyType": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1551:63:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 790,
													"keyName": "spender",
													"keyNameLocation": "1594:7:4",
													"keyType": {
														"id": 788,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1586:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1578:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 789,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1605:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 794,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1645:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1637:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 793,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 796,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1675:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1668:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 795,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1668:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 798,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1697:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1690:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 797,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1690:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1472:12:4",
									"nodeType": "StructDefinition",
									"scope": 1375,
									"src": "1465:246:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 802,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "1851:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "1826:114:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 800,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1826:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 801,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1874:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "2021:79:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2040:54:4",
													"nodeType": "YulBlock",
													"src": "2040:54:4",
													"statements": [
														{
															"nativeSrc": "2054:30:4",
															"nodeType": "YulAssignment",
															"src": "2054:30:4",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2064:20:4",
																"nodeType": "YulIdentifier",
																"src": "2064:20:4"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2054:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": true,
														"src": "2054:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 802,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:20:4",
														"valueSize": 1
													}
												],
												"id": 808,
												"nodeType": "InlineAssembly",
												"src": "2031:63:4"
											}
										]
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "1956:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:2:4"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2018:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "1997:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "ERC20Storage",
														"nameLocations": [
															"1997:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 799,
														"src": "1997:12:4"
													},
													"referencedDeclaration": 799,
													"src": "1997:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:24:4"
									},
									"scope": 1375,
									"src": "1947:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "2374:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 821,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "2407:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 822,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "2414:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 820,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2384:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2384:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "2384:38:4"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "2106:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 818,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 817,
												"name": "onlyInitializing",
												"nameLocations": [
													"2357:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2357:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2357:16:4"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2291:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2318:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2304:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 812,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2304:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2339:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2325:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 814,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2325:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:44:4"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:4"
									},
									"scope": 1375,
									"src": "2282:147:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "2537:114:4",
										"statements": [
											{
												"assignments": [
													837
												],
												"declarations": [
													{
														"constant": false,
														"id": 837,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2568:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "2547:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 836,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 835,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2547:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "2547:12:4"
															},
															"referencedDeclaration": 799,
															"src": "2547:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 840,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 838,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "2572:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2572:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2547:43:4"
											},
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 841,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "2600:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2602:5:4",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 796,
														"src": "2600:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 844,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "2610:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2600:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "2600:15:4"
											},
											{
												"expression": {
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 847,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "2625:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2627:7:4",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 798,
														"src": "2625:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 850,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "2637:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2625:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "2625:19:4"
											}
										]
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 833,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 832,
												"name": "onlyInitializing",
												"nameLocations": [
													"2520:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2520:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2520:16:4"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2444:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2481:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2467:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 827,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2467:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2502:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2488:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2488:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:44:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2537:0:4"
									},
									"scope": 1375,
									"src": "2435:216:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1984
									],
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "2776:84:4",
										"statements": [
											{
												"assignments": [
													862
												],
												"declarations": [
													{
														"constant": false,
														"id": 862,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2807:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "2786:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 861,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 860,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2786:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "2786:12:4"
															},
															"referencedDeclaration": 799,
															"src": "2786:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 865,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 863,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "2811:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2786:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 866,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "2846:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2848:5:4",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 796,
													"src": "2846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 859,
												"id": 868,
												"nodeType": "Return",
												"src": "2839:14:4"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "2657:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2725:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:2:4"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2761:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2761:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:15:4"
									},
									"scope": 1375,
									"src": "2716:144:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1990
									],
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "3035:86:4",
										"statements": [
											{
												"assignments": [
													878
												],
												"declarations": [
													{
														"constant": false,
														"id": 878,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3066:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "3045:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 877,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 876,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3045:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "3045:12:4"
															},
															"referencedDeclaration": 799,
															"src": "3045:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 881,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 879,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "3070:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3070:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3045:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 882,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "3105:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3107:7:4",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 798,
													"src": "3105:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 875,
												"id": 884,
												"nodeType": "Return",
												"src": "3098:16:4"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "2866:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2982:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2988:2:4"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "3020:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 873,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3020:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3019:15:4"
									},
									"scope": 1375,
									"src": "2973:148:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1996
									],
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "3810:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3827:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 891,
												"id": 893,
												"nodeType": "Return",
												"src": "3820:9:4"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "3127:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3763:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3771:2:4"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3803:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 889,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3803:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3802:7:4"
									},
									"scope": 1375,
									"src": "3754:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1920
									],
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "3957:91:4",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3988:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 910,
														"src": "3967:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 902,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 901,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3967:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "3967:12:4"
															},
															"referencedDeclaration": 799,
															"src": "3967:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 906,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 904,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "3992:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3992:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3967:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 907,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "4027:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4029:12:4",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 794,
													"src": "4027:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 900,
												"id": 909,
												"nodeType": "Return",
												"src": "4020:21:4"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "3842:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3905:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3916:2:4"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3948:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3947:9:4"
									},
									"scope": 1375,
									"src": "3896:152:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1928
									],
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "4180:97:4",
										"statements": [
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4211:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 930,
														"src": "4190:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 920,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 919,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4190:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "4190:12:4"
															},
															"referencedDeclaration": 799,
															"src": "4190:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 924,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 922,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "4215:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4190:43:4"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 925,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "4250:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4252:9:4",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 786,
														"src": "4250:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 928,
													"indexExpression": {
														"id": 927,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "4262:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4250:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 918,
												"id": 929,
												"nodeType": "Return",
												"src": "4243:27:4"
											}
										]
									},
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "4054:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4115:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4133:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "4125:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4124:17:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "4171:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4170:9:4"
									},
									"scope": 1375,
									"src": "4106:171:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1938
									],
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "4547:103:4",
										"statements": [
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4565:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 954,
														"src": "4557:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 941,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4557:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 943,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "4573:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4573:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4557:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 947,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "4605:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 948,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "4612:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "4616:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 946,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "4595:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4595:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "4595:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4639:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 940,
												"id": 953,
												"nodeType": "Return",
												"src": "4632:11:4"
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "4283:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4481:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4498:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4490:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4510:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4502:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4502:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:27:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4541:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4541:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4540:6:4"
									},
									"scope": 1375,
									"src": "4472:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1948
									],
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "4797:106:4",
										"statements": [
											{
												"assignments": [
													967
												],
												"declarations": [
													{
														"constant": false,
														"id": 967,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4828:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 978,
														"src": "4807:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 966,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 965,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4807:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "4807:12:4"
															},
															"referencedDeclaration": 799,
															"src": "4807:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 970,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 968,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "4832:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4832:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4807:43:4"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 971,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "4867:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4869:11:4",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 792,
															"src": "4867:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 974,
														"indexExpression": {
															"id": 973,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "4881:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4867:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 976,
													"indexExpression": {
														"id": 975,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "4888:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4867:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 964,
												"id": 977,
												"nodeType": "Return",
												"src": "4860:36:4"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "4656:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4717:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4735:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4727:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4750:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4742:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:32:4"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4788:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4788:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4787:9:4"
									},
									"scope": 1375,
									"src": "4708:195:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1958
									],
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "5289:107:4",
										"statements": [
											{
												"assignments": [
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5307:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1002,
														"src": "5299:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 989,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5299:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 991,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "5315:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5315:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 995,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "5346:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "5353:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 997,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "5362:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 994,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1258,
															1326
														],
														"referencedDeclaration": 1258,
														"src": "5337:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5337:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "5337:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5385:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 988,
												"id": 1001,
												"nodeType": "Return",
												"src": "5378:11:4"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "4909:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5219:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5235:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5227:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5252:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5244:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5226:32:4"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5283:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5283:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5282:6:4"
									},
									"scope": 1375,
									"src": "5210:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1970
									],
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "6081:151:4",
										"statements": [
											{
												"assignments": [
													1016
												],
												"declarations": [
													{
														"constant": false,
														"id": 1016,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6099:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1034,
														"src": "6091:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1015,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6091:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1019,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1017,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "6109:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6109:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6091:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1021,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "6147:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "6153:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "6162:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1020,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "6131:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "6131:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1027,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "6188:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "6194:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "6198:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1026,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "6178:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6178:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "6178:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6221:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1014,
												"id": 1033,
												"nodeType": "Return",
												"src": "6214:11:4"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "5402:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5997:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6018:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6010:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6010:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6032:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6024:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6044:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6036:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6009:41:4"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1012,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6074:6:4"
									},
									"scope": 1375,
									"src": "5988:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "6674:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1045,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "6688:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6704:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6696:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1046,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6696:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6696:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6688:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1059,
												"nodeType": "IfStatement",
												"src": "6684:86:4",
												"trueBody": {
													"id": 1058,
													"nodeType": "Block",
													"src": "6708:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6756:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6748:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1052,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6748:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6748:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1051,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "6729:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6729:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1057,
															"nodeType": "RevertStatement",
															"src": "6722:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1060,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "6783:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6797:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6789:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1061,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6789:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6789:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6783:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1074,
												"nodeType": "IfStatement",
												"src": "6779:86:4",
												"trueBody": {
													"id": 1073,
													"nodeType": "Block",
													"src": "6801:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6851:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6843:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1067,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6843:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6843:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1066,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "6822:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6822:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1072,
															"nodeType": "RevertStatement",
															"src": "6815:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1076,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "6882:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1077,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "6888:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "6892:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1075,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "6874:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6874:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "6874:24:4"
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "6238:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6614:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6632:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "6624:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6624:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6646:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "6638:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6658:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "6650:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6650:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6623:41:4"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6674:0:4"
									},
									"scope": 1375,
									"src": "6605:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "7295:1095:4",
										"statements": [
											{
												"assignments": [
													1094
												],
												"declarations": [
													{
														"constant": false,
														"id": 1094,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7326:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1173,
														"src": "7305:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1093,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1092,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7305:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "7305:12:4"
															},
															"referencedDeclaration": 799,
															"src": "7305:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1097,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1095,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "7330:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7330:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7305:43:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1098,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "7362:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7378:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7370:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1099,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7370:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7370:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7362:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1140,
													"nodeType": "Block",
													"src": "7538:366:4",
													"statements": [
														{
															"assignments": [
																1112
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1112,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7560:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1140,
																	"src": "7552:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1111,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7552:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1117,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1113,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "7574:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7576:9:4",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 786,
																	"src": "7574:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1116,
																"indexExpression": {
																	"id": 1115,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "7586:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7574:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7552:39:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1118,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "7609:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1119,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "7623:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7609:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1128,
															"nodeType": "IfStatement",
															"src": "7605:115:4",
															"trueBody": {
																"id": 1127,
																"nodeType": "Block",
																"src": "7630:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1122,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "7680:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1123,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "7686:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1124,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1089,
																					"src": "7699:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1121,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1464,
																				"src": "7655:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7655:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1126,
																		"nodeType": "RevertStatement",
																		"src": "7648:57:4"
																	}
																]
															}
														},
														{
															"id": 1139,
															"nodeType": "UncheckedBlock",
															"src": "7733:161:4",
															"statements": [
																{
																	"expression": {
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1129,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1094,
																					"src": "7840:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1132,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7842:9:4",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 786,
																				"src": "7840:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1133,
																			"indexExpression": {
																				"id": 1131,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "7852:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7840:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1134,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1112,
																				"src": "7860:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1135,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1089,
																				"src": "7874:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7860:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7840:39:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1138,
																	"nodeType": "ExpressionStatement",
																	"src": "7840:39:4"
																}
															]
														}
													]
												},
												"id": 1141,
												"nodeType": "IfStatement",
												"src": "7358:546:4",
												"trueBody": {
													"id": 1110,
													"nodeType": "Block",
													"src": "7382:150:4",
													"statements": [
														{
															"expression": {
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1104,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "7498:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7500:12:4",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "7498:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1107,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "7516:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7498:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1109,
															"nodeType": "ExpressionStatement",
															"src": "7498:23:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1142,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "7918:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7932:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7924:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1143,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7924:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7924:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7918:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1165,
													"nodeType": "Block",
													"src": "8135:208:4",
													"statements": [
														{
															"id": 1164,
															"nodeType": "UncheckedBlock",
															"src": "8149:184:4",
															"statements": [
																{
																	"expression": {
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1156,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1094,
																					"src": "8294:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8296:9:4",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 786,
																				"src": "8294:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1160,
																			"indexExpression": {
																				"id": 1158,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1087,
																				"src": "8306:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8294:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1161,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "8313:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8294:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1163,
																	"nodeType": "ExpressionStatement",
																	"src": "8294:24:4"
																}
															]
														}
													]
												},
												"id": 1166,
												"nodeType": "IfStatement",
												"src": "7914:429:4",
												"trueBody": {
													"id": 1155,
													"nodeType": "Block",
													"src": "7936:193:4",
													"statements": [
														{
															"id": 1154,
															"nodeType": "UncheckedBlock",
															"src": "7950:169:4",
															"statements": [
																{
																	"expression": {
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 1148,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1094,
																				"src": "8081:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8083:12:4",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 794,
																			"src": "8081:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1151,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "8099:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8081:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1153,
																	"nodeType": "ExpressionStatement",
																	"src": "8081:23:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1168,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "8367:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1169,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "8373:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1170,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "8377:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1167,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1905,
														"src": "8358:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8358:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "EmitStatement",
												"src": "8353:30:4"
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "6911:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7229:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7245:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "7237:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7259:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "7251:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7251:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7271:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "7263:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7263:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7236:41:4"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7295:0:4"
									},
									"scope": 1375,
									"src": "7220:1170:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "8789:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1182,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "8803:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8822:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8814:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1183,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8814:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8814:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8803:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1196,
												"nodeType": "IfStatement",
												"src": "8799:91:4",
												"trueBody": {
													"id": 1195,
													"nodeType": "Block",
													"src": "8826:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8876:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8868:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1189,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8868:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8868:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1188,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "8847:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8847:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1194,
															"nodeType": "RevertStatement",
															"src": "8840:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8915:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8907:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1198,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8907:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8907:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1202,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "8919:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1203,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "8928:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1197,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "8899:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8899:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "8899:35:4"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "8396:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8742:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8756:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "8748:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8748:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8773:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "8765:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8747:32:4"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8789:0:4"
									},
									"scope": 1375,
									"src": "8733:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "9315:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "9329:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9348:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9340:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1216,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9340:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9340:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9329:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1229,
												"nodeType": "IfStatement",
												"src": "9325:89:4",
												"trueBody": {
													"id": 1228,
													"nodeType": "Block",
													"src": "9352:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1224,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9400:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9392:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1222,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9392:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9392:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1221,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "9373:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9373:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1227,
															"nodeType": "RevertStatement",
															"src": "9366:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1231,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "9431:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9448:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9440:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1232,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9440:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9440:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1236,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "9452:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1230,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "9423:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9423:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "9423:35:4"
											}
										]
									},
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "8947:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9268:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9282:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "9274:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9274:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9299:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "9291:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9291:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9273:32:4"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9315:0:4"
									},
									"scope": 1375,
									"src": "9259:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "10075:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1251,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "10094:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1252,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "10101:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1253,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "10110:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10117:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1250,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1258,
															1326
														],
														"referencedDeclaration": 1326,
														"src": "10085:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10085:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "10085:37:4"
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "9471:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10010:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10027:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "10019:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10019:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10042:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "10034:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10034:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "10051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10018:47:4"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10075:0:4"
									},
									"scope": 1375,
									"src": "10001:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "11074:389:4",
										"statements": [
											{
												"assignments": [
													1272
												],
												"declarations": [
													{
														"constant": false,
														"id": 1272,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11105:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1325,
														"src": "11084:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1271,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1270,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11084:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "11084:12:4"
															},
															"referencedDeclaration": 799,
															"src": "11084:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1275,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1273,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "11109:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11109:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11084:43:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1276,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "11141:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11158:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11150:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1277,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11150:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11150:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11141:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "11137:89:4",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "11162:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11212:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11204:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1283,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11204:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11204:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1282,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1488,
																	"src": "11183:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11183:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1288,
															"nodeType": "RevertStatement",
															"src": "11176:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1291,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "11239:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11258:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11250:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1292,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11250:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11250:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11239:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1305,
												"nodeType": "IfStatement",
												"src": "11235:90:4",
												"trueBody": {
													"id": 1304,
													"nodeType": "Block",
													"src": "11262:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11311:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11303:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1298,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11303:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11303:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1297,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "11283:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11283:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1303,
															"nodeType": "RevertStatement",
															"src": "11276:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1306,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "11334:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11336:11:4",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 792,
																"src": "11334:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1311,
															"indexExpression": {
																"id": 1308,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "11348:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11334:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1312,
														"indexExpression": {
															"id": 1309,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "11355:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11334:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1313,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "11366:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11334:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "11334:37:4"
											},
											{
												"condition": {
													"id": 1316,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1267,
													"src": "11385:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1324,
												"nodeType": "IfStatement",
												"src": "11381:76:4",
												"trueBody": {
													"id": 1323,
													"nodeType": "Block",
													"src": "11396:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1318,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "11424:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1319,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "11431:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1320,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1265,
																		"src": "11440:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1317,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1914,
																	"src": "11415:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11415:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1322,
															"nodeType": "EmitStatement",
															"src": "11410:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "10135:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10985:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11002:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "10994:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10994:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11017:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "11009:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11009:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11034:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "11026:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11026:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11046:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "11041:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11041:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10993:63:4"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11074:0:4"
									},
									"scope": 1375,
									"src": "10976:487:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "11834:388:4",
										"statements": [
											{
												"assignments": [
													1337
												],
												"declarations": [
													{
														"constant": false,
														"id": 1337,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11852:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1373,
														"src": "11844:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1336,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11844:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1342,
												"initialValue": {
													"arguments": [
														{
															"id": 1339,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "11881:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1340,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "11888:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1338,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "11871:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11871:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11844:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1343,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "11910:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11935:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1345,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11935:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1344,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11930:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11930:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11944:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11930:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11910:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1372,
												"nodeType": "IfStatement",
												"src": "11906:310:4",
												"trueBody": {
													"id": 1371,
													"nodeType": "Block",
													"src": "11949:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1350,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "11967:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1351,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "11986:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11967:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1360,
															"nodeType": "IfStatement",
															"src": "11963:130:4",
															"trueBody": {
																"id": 1359,
																"nodeType": "Block",
																"src": "11993:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1354,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1331,
																					"src": "12045:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1355,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "12054:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1356,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1333,
																					"src": "12072:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1353,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1483,
																				"src": "12018:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12018:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1358,
																		"nodeType": "RevertStatement",
																		"src": "12011:67:4"
																	}
																]
															}
														},
														{
															"id": 1370,
															"nodeType": "UncheckedBlock",
															"src": "12106:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1362,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1329,
																				"src": "12143:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1363,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1331,
																				"src": "12150:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1364,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "12159:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1365,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1333,
																					"src": "12178:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12159:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12185:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1361,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1258,
																				1326
																			],
																			"referencedDeclaration": 1326,
																			"src": "12134:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12134:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1369,
																	"nodeType": "ExpressionStatement",
																	"src": "12134:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "11469:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11754:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11778:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11770:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11770:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11793:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11785:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11785:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11810:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11802:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11769:47:4"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11834:0:4"
									},
									"scope": 1375,
									"src": "11745:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1376,
							"src": "1281:10943:4",
							"usedErrors": [
								211,
								214,
								1464,
								1469,
								1474,
								1483,
								1488,
								1493
							],
							"usedEvents": [
								219,
								1905,
								1914
							]
						}
					],
					"src": "105:12120:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1421
						],
						"Initializable": [
							448
						]
					},
					"id": 1422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1377,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1379,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1422,
							"sourceUnit": 449,
							"src": "126:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1378,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1381,
										"name": "Initializable",
										"nameLocations": [
											"728:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:5"
									},
									"id": 1382,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:5"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1380,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1421,
							"linearizedBaseContracts": [
								1421,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "800:7:5",
										"statements": []
									},
									"id": 1388,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1385,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1384,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:5"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:5"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:5"
									},
									"scope": 1421,
									"src": "748:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "875:7:5",
										"statements": []
									},
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1391,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1390,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:5"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:5"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:5"
									},
									"scope": 1421,
									"src": "813:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "949:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1399,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1398,
												"id": 1401,
												"nodeType": "Return",
												"src": "959:17:5"
											}
										]
									},
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:5"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "940:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:5"
									},
									"scope": 1421,
									"src": "887:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "1056:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1408,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1407,
												"id": 1410,
												"nodeType": "Return",
												"src": "1066:15:5"
											}
										]
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:5"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "1040:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:5"
									},
									"scope": 1421,
									"src": "989:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "1166:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1416,
												"id": 1418,
												"nodeType": "Return",
												"src": "1176:8:5"
											}
										]
									},
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:5"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "1157:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:5"
									},
									"scope": 1421,
									"src": "1094:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1422,
							"src": "688:505:5",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							1442
						]
					},
					"id": 1443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1423,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1424,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:6",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 1442,
							"linearizedBaseContracts": [
								1442
							],
							"name": "IERC1967",
							"nameLocation": "245:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:6",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1429,
									"name": "Upgraded",
									"nameLocation": "339:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "348:30:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:6"
									},
									"src": "333:47:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1430,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:6",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1436,
									"name": "AdminChanged",
									"nameLocation": "464:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "477:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "500:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:6"
									},
									"src": "458:60:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:6",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1441,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "609:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:6"
									},
									"src": "588:45:6"
								}
							],
							"scope": 1443,
							"src": "235:400:6",
							"usedErrors": [],
							"usedEvents": [
								1429,
								1436,
								1441
							]
						}
					],
					"src": "107:529:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1452
						]
					},
					"id": 1453,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1444,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1445,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:7",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1452,
							"linearizedBaseContracts": [
								1452
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:7",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:7"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "869:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1448,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:7"
									},
									"scope": 1452,
									"src": "821:57:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1453,
							"src": "344:536:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1589
						],
						"IERC20Errors": [
							1494
						],
						"IERC721Errors": [
							1542
						]
					},
					"id": 1590,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1454,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1455,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:8",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 1494,
							"linearizedBaseContracts": [
								1494
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:8",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1464,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "654:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "670:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "687:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:8"
									},
									"src": "623:80:8"
								},
								{
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:8",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1469,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "891:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:8"
									},
									"src": "866:41:8"
								},
								{
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:8",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1474,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "1104:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:8"
									},
									"src": "1077:45:8"
								},
								{
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:8",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1483,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1511:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1528:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1547:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:8"
									},
									"src": "1478:85:8"
								},
								{
									"documentation": {
										"id": 1484,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:8",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1488,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "1775:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:8"
									},
									"src": "1748:45:8"
								},
								{
									"documentation": {
										"id": 1489,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:8",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1493,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "2025:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:8"
									},
									"src": "1999:43:8"
								}
							],
							"scope": 1590,
							"src": "280:1764:8",
							"usedErrors": [
								1464,
								1469,
								1474,
								1483,
								1488,
								1493
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1495,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:8",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 1542,
							"linearizedBaseContracts": [
								1542
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1496,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:8",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1500,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "2469:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:8"
									},
									"src": "2444:40:8"
								},
								{
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:8",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1505,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "2656:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:8"
									},
									"src": "2627:46:8"
								},
								{
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:8",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1514,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "3000:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "3016:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "3033:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:8"
									},
									"src": "2973:75:8"
								},
								{
									"documentation": {
										"id": 1515,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:8",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1519,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "3237:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:8"
									},
									"src": "3211:42:8"
								},
								{
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:8",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1524,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "3451:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:8"
									},
									"src": "3423:46:8"
								},
								{
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:8",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1531,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "3760:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "3778:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:8"
									},
									"src": "3727:68:8"
								},
								{
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:8",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1536,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "4008:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:8"
									},
									"src": "3980:46:8"
								},
								{
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:8",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1541,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "4262:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:8"
									},
									"src": "4234:46:8"
								}
							],
							"scope": 1590,
							"src": "2190:2092:8",
							"usedErrors": [
								1500,
								1505,
								1514,
								1519,
								1524,
								1531,
								1536,
								1541
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1543,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:8",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1589,
							"linearizedBaseContracts": [
								1589
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1544,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:8",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1554,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "4860:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "4876:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "4893:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "4909:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:8"
									},
									"src": "4827:99:8"
								},
								{
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:8",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1559,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "5116:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:8"
									},
									"src": "5089:43:8"
								},
								{
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:8",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1564,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "5331:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:8"
									},
									"src": "5302:47:8"
								},
								{
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:8",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1571,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "5651:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "5669:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:8"
									},
									"src": "5616:68:8"
								},
								{
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:8",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1576,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "5898:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:8"
									},
									"src": "5869:47:8"
								},
								{
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:8",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1581,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "6153:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:8"
									},
									"src": "6124:47:8"
								},
								{
									"documentation": {
										"id": 1582,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:8",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1588,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "6494:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "6513:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:8"
									},
									"src": "6462:73:8"
								}
							],
							"scope": 1590,
							"src": "4430:2107:8",
							"usedErrors": [
								1554,
								1559,
								1564,
								1571,
								1576,
								1581,
								1588
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							2256
						],
						"ERC1967Utils": [
							1883
						],
						"IBeacon": [
							1893
						],
						"IERC1967": [
							1442
						],
						"StorageSlot": [
							2402
						]
					},
					"id": 1884,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1591,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1593,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1884,
							"sourceUnit": 1894,
							"src": "140:46:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1592,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1893,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 1595,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1884,
							"sourceUnit": 1443,
							"src": "187:55:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1594,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "195:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1597,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1884,
							"sourceUnit": 2257,
							"src": "243:48:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1596,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2256,
										"src": "251:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1599,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1884,
							"sourceUnit": 2403,
							"src": "292:56:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1598,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2402,
										"src": "300:11:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1600,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:9",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 1883,
							"linearizedBaseContracts": [
								1883
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:9",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1604,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "763:114:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1602,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1603,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1605,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:9",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1609,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "993:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:9"
									},
									"src": "958:59:9"
								},
								{
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:9",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1614,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "1114:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:9"
									},
									"src": "1088:41:9"
								},
								{
									"documentation": {
										"id": 1615,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:9",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1619,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1228:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:9"
									},
									"src": "1201:43:9"
								},
								{
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:9",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1622,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:9"
									},
									"src": "1337:26:9"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "1502:77:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1630,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "1546:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1628,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2402,
																"src": "1519:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2402_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:9",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2313,
															"src": "1519:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2284_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2284_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:9",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2283,
													"src": "1519:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1627,
												"id": 1633,
												"nodeType": "Return",
												"src": "1512:60:9"
											}
										]
									},
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:9",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:9"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "1493:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:9"
									},
									"scope": 1883,
									"src": "1441:138:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "1734:218:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1641,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1638,
																"src": "1748:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1651,
												"nodeType": "IfStatement",
												"src": "1744:119:9",
												"trueBody": {
													"id": 1650,
													"nodeType": "Block",
													"src": "1784:79:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1647,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1638,
																		"src": "1834:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1646,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1609,
																	"src": "1805:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1649,
															"nodeType": "RevertStatement",
															"src": "1798:54:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1655,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1604,
																	"src": "1899:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1652,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2402,
																	"src": "1872:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2402_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:9",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2313,
																"src": "1872:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2284_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2284_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2283,
														"src": "1872:53:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1658,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "1928:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1660,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:9"
											}
										]
									},
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:9",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "1699:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:9"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:9"
									},
									"scope": 1883,
									"src": "1671:281:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "2345:263:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1671,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "2374:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1670,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "2355:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1673,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1677,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "2425:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1674,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "2407:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1442_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:9",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1429,
														"src": "2407:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1679,
												"nodeType": "EmitStatement",
												"src": "2402:41:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1680,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "2458:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1682,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1695,
													"nodeType": "Block",
													"src": "2559:43:9",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1692,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "2573:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1694,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:9"
														}
													]
												},
												"id": 1696,
												"nodeType": "IfStatement",
												"src": "2454:148:9",
												"trueBody": {
													"id": 1691,
													"nodeType": "Block",
													"src": "2475:78:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1687,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1665,
																		"src": "2518:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1688,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "2537:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1684,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2256,
																		"src": "2489:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2256_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:9",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2173,
																	"src": "2489:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1690,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1663,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:9",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "2290:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "2317:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1666,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:9"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:9"
									},
									"scope": 1883,
									"src": "2264:344:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:9",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1702,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "2829:105:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1700,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1701,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1714,
										"nodeType": "Block",
										"src": "3339:68:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1710,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1702,
																"src": "3383:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1708,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2402,
																"src": "3356:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2402_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:9",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2313,
															"src": "3356:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2284_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2284_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:9",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2283,
													"src": "3356:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1707,
												"id": 1713,
												"nodeType": "Return",
												"src": "3349:51:9"
											}
										]
									},
									"documentation": {
										"id": 1703,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:9",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:9"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "3330:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:9"
									},
									"scope": 1883,
									"src": "3287:120:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1745,
										"nodeType": "Block",
										"src": "3535:172:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1721,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "3549:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1722,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1735,
												"nodeType": "IfStatement",
												"src": "3545:91:9",
												"trueBody": {
													"id": 1734,
													"nodeType": "Block",
													"src": "3573:63:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1730,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1728,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1727,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1614,
																	"src": "3594:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1733,
															"nodeType": "RevertStatement",
															"src": "3587:38:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1739,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1702,
																	"src": "3672:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1736,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2402,
																	"src": "3645:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2402_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:9",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2313,
																"src": "3645:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2284_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2284_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2283,
														"src": "3645:44:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1742,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "3692:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1744,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:9"
											}
										]
									},
									"documentation": {
										"id": 1716,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:9",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 1746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "3509:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:9"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:9"
									},
									"scope": 1883,
									"src": "3490:217:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1764,
										"nodeType": "Block",
										"src": "3875:94:9",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1755,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "3912:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1757,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "3924:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1752,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "3890:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1442_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:9",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1436,
														"src": "3890:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1759,
												"nodeType": "EmitStatement",
												"src": "3885:48:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1761,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "3953:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1760,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1746,
														"src": "3943:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1763,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:9"
											}
										]
									},
									"documentation": {
										"id": 1747,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:9",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "3848:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:9"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:9"
									},
									"scope": 1883,
									"src": "3827:142:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:9",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1769,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1883,
									"src": "4246:106:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1767,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1768,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1781,
										"nodeType": "Block",
										"src": "4468:69:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1777,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1769,
																"src": "4512:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1775,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2402,
																"src": "4485:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2402_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:9",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2313,
															"src": "4485:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2284_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2284_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1779,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:9",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2283,
													"src": "4485:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1774,
												"id": 1780,
												"nodeType": "Return",
												"src": "4478:52:9"
											}
										]
									},
									"documentation": {
										"id": 1770,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:9",
										"text": " @dev Returns the current beacon."
									},
									"id": 1782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:9"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "4459:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:9"
									},
									"scope": 1883,
									"src": "4415:122:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1827,
										"nodeType": "Block",
										"src": "4667:390:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1788,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "4681:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1798,
												"nodeType": "IfStatement",
												"src": "4677:95:9",
												"trueBody": {
													"id": 1797,
													"nodeType": "Block",
													"src": "4709:63:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1794,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1785,
																		"src": "4751:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1793,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "4730:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1796,
															"nodeType": "RevertStatement",
															"src": "4723:38:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1802,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1769,
																	"src": "4809:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1799,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2402,
																	"src": "4782:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2402_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:9",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2313,
																"src": "4782:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2284_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2284_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1804,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2283,
														"src": "4782:45:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1805,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1785,
														"src": "4830:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1807,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:9"
											},
											{
												"assignments": [
													1809
												],
												"declarations": [
													{
														"constant": false,
														"id": 1809,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:9",
														"nodeType": "VariableDeclaration",
														"scope": 1827,
														"src": "4850:28:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1808,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1815,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1811,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1785,
																	"src": "4889:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1810,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1893,
																"src": "4881:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1893_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1893",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:9",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1892,
														"src": "4881:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1816,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1809,
																"src": "4930:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1826,
												"nodeType": "IfStatement",
												"src": "4926:125:9",
												"trueBody": {
													"id": 1825,
													"nodeType": "Block",
													"src": "4969:82:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1822,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1809,
																		"src": "5019:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1821,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1609,
																	"src": "4990:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1824,
															"nodeType": "RevertStatement",
															"src": "4983:57:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:9",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 1828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "4640:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:9"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:9"
									},
									"scope": 1883,
									"src": "4620:437:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1867,
										"nodeType": "Block",
										"src": "5661:263:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1837,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "5682:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1836,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "5671:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1839,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1843,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "5731:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1840,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "5707:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1442_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:9",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1441,
														"src": "5707:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1845,
												"nodeType": "EmitStatement",
												"src": "5702:39:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1846,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1833,
															"src": "5756:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1865,
													"nodeType": "Block",
													"src": "5875:43:9",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1862,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "5889:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1864,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:9"
														}
													]
												},
												"id": 1866,
												"nodeType": "IfStatement",
												"src": "5752:166:9",
												"trueBody": {
													"id": 1861,
													"nodeType": "Block",
													"src": "5773:96:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1854,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1831,
																						"src": "5824:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1853,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1893,
																					"src": "5816:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1893_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1893",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:9",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1892,
																			"src": "5816:33:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1858,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1833,
																		"src": "5853:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1850,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2256,
																		"src": "5787:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2256_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:9",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2173,
																	"src": "5787:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1860,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:9",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "5614:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "5633:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1832,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:9"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:9"
									},
									"scope": 1883,
									"src": "5582:342:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1881,
										"nodeType": "Block",
										"src": "6149:86:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1872,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:9",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1880,
												"nodeType": "IfStatement",
												"src": "6159:70:9",
												"trueBody": {
													"id": 1879,
													"nodeType": "Block",
													"src": "6178:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1876,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "6199:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1878,
															"nodeType": "RevertStatement",
															"src": "6192:26:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:9",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:9"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:9"
									},
									"scope": 1883,
									"src": "6113:122:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1884,
							"src": "496:5741:9",
							"usedErrors": [
								1609,
								1614,
								1619,
								1622
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1893
						]
					},
					"id": 1894,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1885,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1886,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:10",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1893,
							"linearizedBaseContracts": [
								1893
							],
							"name": "IBeacon",
							"nameLocation": "224:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:10",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1892,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:10"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "460:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:10"
									},
									"scope": 1893,
									"src": "411:58:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1894,
							"src": "214:257:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1971
						]
					},
					"id": 1972,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1895,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1896,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:11",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1971,
							"linearizedBaseContracts": [
								1971
							],
							"name": "IERC20",
							"nameLocation": "214:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1897,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:11",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1905,
									"name": "Transfer",
									"nameLocation": "396:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "405:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "427:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "447:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:11"
									},
									"src": "390:72:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1906,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:11",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1914,
									"name": "Approval",
									"nameLocation": "627:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "636:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1910,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "659:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "684:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:11"
									},
									"src": "621:78:11"
								},
								{
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:11",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1920,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:11"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "821:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:11"
									},
									"scope": 1971,
									"src": "775:55:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1921,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:11",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1928,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "931:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:11"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "971:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:11"
									},
									"scope": 1971,
									"src": "912:68:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1929,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:11",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1938,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "1222:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "1234:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:11"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "1267:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:11"
									},
									"scope": 1971,
									"src": "1204:69:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:11",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "1567:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "1582:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:11"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "1622:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:11"
									},
									"scope": 1971,
									"src": "1548:83:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:11",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "2326:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "2343:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:11"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "2376:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1955,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:11"
									},
									"scope": 1971,
									"src": "2309:73:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:11",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "2712:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "2726:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "2738:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:11"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "2771:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1967,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:11"
									},
									"scope": 1971,
									"src": "2690:87:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1972,
							"src": "204:2575:11",
							"usedErrors": [],
							"usedEvents": [
								1905,
								1914
							]
						}
					],
					"src": "106:2674:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1971
						],
						"IERC20Metadata": [
							1997
						]
					},
					"id": 1998,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1973,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1975,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1998,
							"sourceUnit": 1972,
							"src": "151:37:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1974,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1971,
										"src": "159:6:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1977,
										"name": "IERC20",
										"nameLocations": [
											"306:6:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1971,
										"src": "306:6:12"
									},
									"id": 1978,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:12"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1976,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:12",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1997,
							"linearizedBaseContracts": [
								1997,
								1971
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1979,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:12",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1984,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:12"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "417:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1981,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:12"
									},
									"scope": 1997,
									"src": "378:54:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1985,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:12",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:12"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "540:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1987,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:12"
									},
									"scope": 1997,
									"src": "499:56:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:12",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1996,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:12"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "674:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1993,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:12"
									},
									"scope": 1997,
									"src": "631:50:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1998,
							"src": "278:405:12",
							"usedErrors": [],
							"usedEvents": [
								1905,
								1914
							]
						}
					],
					"src": "125:559:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2256
						],
						"Errors": [
							2278
						]
					},
					"id": 2257,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1999,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 2001,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2257,
							"sourceUnit": 2279,
							"src": "127:36:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2000,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2278,
										"src": "135:6:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2002,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:13",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2256,
							"linearizedBaseContracts": [
								2256
							],
							"name": "Address",
							"nameLocation": "241:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2003,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:13",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 2007,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "358:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:13"
									},
									"src": "335:39:13"
								},
								{
									"body": {
										"id": 2053,
										"nodeType": "Block",
										"src": "1361:278:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2017,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2256",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2256",
																		"typeString": "library Address"
																	}
																],
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2015,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:13",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2020,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2012,
														"src": "1399:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2034,
												"nodeType": "IfStatement",
												"src": "1371:125:13",
												"trueBody": {
													"id": 2033,
													"nodeType": "Block",
													"src": "1407:89:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2027,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2256",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2256",
																						"typeString": "library Address"
																					}
																				],
																				"id": 2026,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2025,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:13",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:13",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2030,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2012,
																		"src": "1478:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2022,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "1428:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2278_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:13",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2266,
																	"src": "1428:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2032,
															"nodeType": "RevertStatement",
															"src": "1421:64:13"
														}
													]
												}
											},
											{
												"assignments": [
													2036,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2036,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2053,
														"src": "1507:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2035,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2043,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2037,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2010,
																"src": "1525:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:13",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2039,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "1547:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:13"
											},
											{
												"condition": {
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:13",
													"subExpression": {
														"id": 2044,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2036,
														"src": "1573:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2052,
												"nodeType": "IfStatement",
												"src": "1568:65:13",
												"trueBody": {
													"id": 2051,
													"nodeType": "Block",
													"src": "1582:51:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2046,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "1603:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2278_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:13",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2269,
																	"src": "1603:17:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2050,
															"nodeType": "RevertStatement",
															"src": "1596:26:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2008,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:13",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "1309:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:13",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "1336:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:13"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:13"
									},
									"scope": 2256,
									"src": "1290:349:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2070,
										"nodeType": "Block",
										"src": "2573:62:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2065,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2057,
															"src": "2612:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2066,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2059,
															"src": "2620:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2064,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2121,
														"src": "2590:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2063,
												"id": 2069,
												"nodeType": "Return",
												"src": "2583:45:13"
											}
										]
									},
									"documentation": {
										"id": 2055,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:13",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 2071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "2506:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "2522:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2058,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:13"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "2559:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2061,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:13"
									},
									"scope": 2256,
									"src": "2484:151:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2120,
										"nodeType": "Block",
										"src": "3072:294:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2085,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2256",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2256",
																		"typeString": "library Address"
																	}
																],
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2083,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:13",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2088,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2078,
														"src": "3110:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2102,
												"nodeType": "IfStatement",
												"src": "3082:123:13",
												"trueBody": {
													"id": 2101,
													"nodeType": "Block",
													"src": "3117:88:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2095,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2256",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2256",
																						"typeString": "library Address"
																					}
																				],
																				"id": 2094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2093,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:13",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:13",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2098,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2078,
																		"src": "3188:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2090,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "3138:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2278_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:13",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2266,
																	"src": "3138:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2100,
															"nodeType": "RevertStatement",
															"src": "3131:63:13"
														}
													]
												}
											},
											{
												"assignments": [
													2104,
													2106
												],
												"declarations": [
													{
														"constant": false,
														"id": 2104,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2120,
														"src": "3215:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2103,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2106,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 2120,
														"src": "3229:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2105,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2113,
												"initialValue": {
													"arguments": [
														{
															"id": 2111,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "3282:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2107,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2074,
																"src": "3256:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:13",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2109,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2078,
																"src": "3275:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2115,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "3331:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2116,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2104,
															"src": "3339:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2117,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2106,
															"src": "3348:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2114,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "3304:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2082,
												"id": 2119,
												"nodeType": "Return",
												"src": "3297:62:13"
											}
										]
									},
									"documentation": {
										"id": 2072,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 2121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "2990:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "3006:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2075,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "3025:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:13"
									},
									"returnParameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "3058:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2080,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:13"
									},
									"scope": 2256,
									"src": "2959:407:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2146,
										"nodeType": "Block",
										"src": "3605:154:13",
										"statements": [
											{
												"assignments": [
													2132,
													2134
												],
												"declarations": [
													{
														"constant": false,
														"id": 2132,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2146,
														"src": "3616:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2131,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2134,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 2146,
														"src": "3630:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2133,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2139,
												"initialValue": {
													"arguments": [
														{
															"id": 2137,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "3675:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2135,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2124,
															"src": "3657:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:13",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2141,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2124,
															"src": "3724:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2142,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2132,
															"src": "3732:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2143,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2134,
															"src": "3741:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2140,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "3697:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2130,
												"id": 2145,
												"nodeType": "Return",
												"src": "3690:62:13"
											}
										]
									},
									"documentation": {
										"id": 2122,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 2147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "3533:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "3549:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2125,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:13"
									},
									"returnParameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "3591:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:13"
									},
									"scope": 2256,
									"src": "3505:254:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2172,
										"nodeType": "Block",
										"src": "3997:156:13",
										"statements": [
											{
												"assignments": [
													2158,
													2160
												],
												"declarations": [
													{
														"constant": false,
														"id": 2158,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2172,
														"src": "4008:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2157,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2160,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 2172,
														"src": "4022:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2159,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2165,
												"initialValue": {
													"arguments": [
														{
															"id": 2163,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2152,
															"src": "4069:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2161,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2150,
															"src": "4049:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:13",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2167,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2150,
															"src": "4118:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2168,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "4126:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2169,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "4135:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2166,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "4091:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2156,
												"id": 2171,
												"nodeType": "Return",
												"src": "4084:62:13"
											}
										]
									},
									"documentation": {
										"id": 2148,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "3930:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "3946:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2151,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:13"
									},
									"returnParameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "3983:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2154,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:13"
									},
									"scope": 2256,
									"src": "3900:253:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2212,
										"nodeType": "Block",
										"src": "4579:424:13",
										"statements": [
											{
												"condition": {
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:13",
													"subExpression": {
														"id": 2185,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2178,
														"src": "4594:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2210,
													"nodeType": "Block",
													"src": "4653:344:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2192,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2180,
																			"src": "4841:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:13",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2196,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2176,
																				"src": "4867:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:13",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:13",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2207,
															"nodeType": "IfStatement",
															"src": "4837:119:13",
															"trueBody": {
																"id": 2206,
																"nodeType": "Block",
																"src": "4892:64:13",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2203,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2176,
																					"src": "4934:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2202,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2007,
																				"src": "4917:16:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 2204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2205,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:13"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2208,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2180,
																"src": "4976:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2184,
															"id": 2209,
															"nodeType": "Return",
															"src": "4969:17:13"
														}
													]
												},
												"id": 2211,
												"nodeType": "IfStatement",
												"src": "4589:408:13",
												"trueBody": {
													"id": 2191,
													"nodeType": "Block",
													"src": "4603:44:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2188,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2180,
																		"src": "4625:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2187,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2255,
																	"src": "4617:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2190,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2174,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:13",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 2213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "4466:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "4490:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "4512:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:13"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "4565:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2182,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:13"
									},
									"scope": 2256,
									"src": "4421:582:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2234,
										"nodeType": "Block",
										"src": "5307:122:13",
										"statements": [
											{
												"condition": {
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:13",
													"subExpression": {
														"id": 2223,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2216,
														"src": "5322:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2232,
													"nodeType": "Block",
													"src": "5381:42:13",
													"statements": [
														{
															"expression": {
																"id": 2230,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2218,
																"src": "5402:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2222,
															"id": 2231,
															"nodeType": "Return",
															"src": "5395:17:13"
														}
													]
												},
												"id": 2233,
												"nodeType": "IfStatement",
												"src": "5317:106:13",
												"trueBody": {
													"id": 2229,
													"nodeType": "Block",
													"src": "5331:44:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2226,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2218,
																		"src": "5353:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2225,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2255,
																	"src": "5345:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2228,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2214,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:13",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 2235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "5231:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "5245:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:13"
									},
									"returnParameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "5293:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:13"
									},
									"scope": 2256,
									"src": "5205:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2254,
										"nodeType": "Block",
										"src": "5598:432:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2241,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2238,
															"src": "5674:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2252,
													"nodeType": "Block",
													"src": "5973:51:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2247,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "5994:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2278_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:13",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2269,
																	"src": "5994:17:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2251,
															"nodeType": "RevertStatement",
															"src": "5987:26:13"
														}
													]
												},
												"id": 2253,
												"nodeType": "IfStatement",
												"src": "5670:354:13",
												"trueBody": {
													"id": 2246,
													"nodeType": "Block",
													"src": "5697:270:13",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:13",
																"nodeType": "YulBlock",
																"src": "5824:133:13",
																"statements": [
																	{
																		"nativeSrc": "5842:40:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:13"
																			},
																			"nativeSrc": "5865:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:13"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:13",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:13",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:13",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:13"
																					},
																					"nativeSrc": "5906:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:13"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:13",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:13"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:13"
																			},
																			"nativeSrc": "5899:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:13"
																		},
																		"nativeSrc": "5899:44:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:13"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 2238,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:13",
																	"valueSize": 1
																},
																{
																	"declaration": 2238,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:13",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 2245,
															"nodeType": "InlineAssembly",
															"src": "5799:158:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2236,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:13",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 2255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "5560:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:13"
									},
									"returnParameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:13"
									},
									"scope": 2256,
									"src": "5543:487:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2257,
							"src": "233:5799:13",
							"usedErrors": [
								2007
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							2278
						]
					},
					"id": 2279,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2258,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2259,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:14",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 2278,
							"linearizedBaseContracts": [
								2278
							],
							"name": "Errors",
							"nameLocation": "419:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2260,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:14",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 2266,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "557:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "574:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:14"
									},
									"src": "531:59:14"
								},
								{
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:14",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 2269,
									"name": "FailedCall",
									"nameLocation": "696:10:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:14"
									},
									"src": "690:19:14"
								},
								{
									"documentation": {
										"id": 2270,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:14",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 2272,
									"name": "FailedDeployment",
									"nameLocation": "772:16:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:14"
									},
									"src": "766:25:14"
								},
								{
									"documentation": {
										"id": 2273,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:14",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 2277,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "884:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:14"
									},
									"src": "860:33:14"
								}
							],
							"scope": 2279,
							"src": "411:484:14",
							"usedErrors": [
								2266,
								2269,
								2272,
								2277
							],
							"usedEvents": []
						}
					],
					"src": "100:796:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2402
						]
					},
					"id": 2403,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2280,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2281,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:15",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 2402,
							"linearizedBaseContracts": [
								2402
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2284,
									"members": [
										{
											"constant": false,
											"id": 2283,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2284,
											"src": "1462:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2282,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:15",
									"nodeType": "StructDefinition",
									"scope": 2402,
									"src": "1433:49:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2287,
									"members": [
										{
											"constant": false,
											"id": 2286,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2287,
											"src": "1517:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2285,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:15",
									"nodeType": "StructDefinition",
									"scope": 2402,
									"src": "1488:46:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2290,
									"members": [
										{
											"constant": false,
											"id": 2289,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2290,
											"src": "1569:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2288,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:15",
									"nodeType": "StructDefinition",
									"scope": 2402,
									"src": "1540:49:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2293,
									"members": [
										{
											"constant": false,
											"id": 2292,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2293,
											"src": "1624:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2291,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:15",
									"nodeType": "StructDefinition",
									"scope": 2402,
									"src": "1595:49:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 2296,
									"members": [
										{
											"constant": false,
											"id": 2295,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2296,
											"src": "1678:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 2294,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:15",
									"nodeType": "StructDefinition",
									"scope": 2402,
									"src": "1650:47:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2299,
									"members": [
										{
											"constant": false,
											"id": 2298,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2299,
											"src": "1731:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2297,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:15",
									"nodeType": "StructDefinition",
									"scope": 2402,
									"src": "1703:47:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2302,
									"members": [
										{
											"constant": false,
											"id": 2301,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2302,
											"src": "1783:11:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2300,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:15",
									"nodeType": "StructDefinition",
									"scope": 2402,
									"src": "1756:45:15",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2312,
										"nodeType": "Block",
										"src": "1983:79:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:15",
													"nodeType": "YulBlock",
													"src": "2018:38:15",
													"statements": [
														{
															"nativeSrc": "2032:14:15",
															"nodeType": "YulAssignment",
															"src": "2032:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:15",
																"nodeType": "YulIdentifier",
																"src": "2042:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2309,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2305,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:15",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2311,
												"nodeType": "InlineAssembly",
												"src": "1993:63:15"
											}
										]
									},
									"documentation": {
										"id": 2303,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:15",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "1923:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2304,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:15"
									},
									"returnParameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "1960:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2284_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2308,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2307,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2284,
														"src": "1960:11:15"
													},
													"referencedDeclaration": 2284,
													"src": "1960:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2284_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:15"
									},
									"scope": 2402,
									"src": "1899:163:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2323,
										"nodeType": "Block",
										"src": "2243:79:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:15",
													"nodeType": "YulBlock",
													"src": "2278:38:15",
													"statements": [
														{
															"nativeSrc": "2292:14:15",
															"nodeType": "YulAssignment",
															"src": "2292:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:15",
																"nodeType": "YulIdentifier",
																"src": "2302:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2320,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2316,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:15",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2322,
												"nodeType": "InlineAssembly",
												"src": "2253:63:15"
											}
										]
									},
									"documentation": {
										"id": 2314,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:15",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "2183:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:15"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "2220:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2287_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2319,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2318,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2287,
														"src": "2220:11:15"
													},
													"referencedDeclaration": 2287,
													"src": "2220:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2287_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:15"
									},
									"scope": 2402,
									"src": "2159:163:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2334,
										"nodeType": "Block",
										"src": "2503:79:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:15",
													"nodeType": "YulBlock",
													"src": "2538:38:15",
													"statements": [
														{
															"nativeSrc": "2552:14:15",
															"nodeType": "YulAssignment",
															"src": "2552:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:15",
																"nodeType": "YulIdentifier",
																"src": "2562:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2331,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2327,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:15",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2333,
												"nodeType": "InlineAssembly",
												"src": "2513:63:15"
											}
										]
									},
									"documentation": {
										"id": 2325,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:15",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "2443:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:15"
									},
									"returnParameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "2480:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2290_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2330,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2329,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2290,
														"src": "2480:11:15"
													},
													"referencedDeclaration": 2290,
													"src": "2480:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2290_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:15"
									},
									"scope": 2402,
									"src": "2419:163:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2345,
										"nodeType": "Block",
										"src": "2763:79:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:15",
													"nodeType": "YulBlock",
													"src": "2798:38:15",
													"statements": [
														{
															"nativeSrc": "2812:14:15",
															"nodeType": "YulAssignment",
															"src": "2812:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:15",
																"nodeType": "YulIdentifier",
																"src": "2822:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2342,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2338,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:15",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2344,
												"nodeType": "InlineAssembly",
												"src": "2773:63:15"
											}
										]
									},
									"documentation": {
										"id": 2336,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:15",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "2703:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:15"
									},
									"returnParameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "2740:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2293_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2340,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2293,
														"src": "2740:11:15"
													},
													"referencedDeclaration": 2293,
													"src": "2740:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2293_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:15"
									},
									"scope": 2402,
									"src": "2679:163:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2356,
										"nodeType": "Block",
										"src": "3020:79:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:15",
													"nodeType": "YulBlock",
													"src": "3055:38:15",
													"statements": [
														{
															"nativeSrc": "3069:14:15",
															"nodeType": "YulAssignment",
															"src": "3069:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:15",
																"nodeType": "YulIdentifier",
																"src": "3079:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2353,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2349,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:15",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2355,
												"nodeType": "InlineAssembly",
												"src": "3030:63:15"
											}
										]
									},
									"documentation": {
										"id": 2347,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:15",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 2357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "2961:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:15"
									},
									"returnParameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "2998:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$2296_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 2352,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2351,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2296,
														"src": "2998:10:15"
													},
													"referencedDeclaration": 2296,
													"src": "2998:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$2296_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:15"
									},
									"scope": 2402,
									"src": "2938:161:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2367,
										"nodeType": "Block",
										"src": "3277:79:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:15",
													"nodeType": "YulBlock",
													"src": "3312:38:15",
													"statements": [
														{
															"nativeSrc": "3326:14:15",
															"nodeType": "YulAssignment",
															"src": "3326:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:15",
																"nodeType": "YulIdentifier",
																"src": "3336:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2364,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2360,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:15",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2366,
												"nodeType": "InlineAssembly",
												"src": "3287:63:15"
											}
										]
									},
									"documentation": {
										"id": 2358,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:15",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 2368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "3218:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2359,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:15"
									},
									"returnParameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "3255:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2299_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2362,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2299,
														"src": "3255:10:15"
													},
													"referencedDeclaration": 2299,
													"src": "3255:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2299_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:15"
									},
									"scope": 2402,
									"src": "3195:161:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2378,
										"nodeType": "Block",
										"src": "3558:85:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:15",
													"nodeType": "YulBlock",
													"src": "3593:44:15",
													"statements": [
														{
															"nativeSrc": "3607:20:15",
															"nodeType": "YulAssignment",
															"src": "3607:20:15",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:15",
																"nodeType": "YulIdentifier",
																"src": "3617:10:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2375,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2371,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:15",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2377,
												"nodeType": "InlineAssembly",
												"src": "3568:69:15"
											}
										]
									},
									"documentation": {
										"id": 2369,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:15",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "3491:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2370,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:15"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "3536:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2299_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2374,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2373,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2299,
														"src": "3536:10:15"
													},
													"referencedDeclaration": 2299,
													"src": "3536:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2299_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:15"
									},
									"scope": 2402,
									"src": "3468:175:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2389,
										"nodeType": "Block",
										"src": "3818:79:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:15",
													"nodeType": "YulBlock",
													"src": "3853:38:15",
													"statements": [
														{
															"nativeSrc": "3867:14:15",
															"nodeType": "YulAssignment",
															"src": "3867:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:15",
																"nodeType": "YulIdentifier",
																"src": "3877:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2386,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2382,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:15",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2388,
												"nodeType": "InlineAssembly",
												"src": "3828:63:15"
											}
										]
									},
									"documentation": {
										"id": 2380,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:15",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "3760:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:15"
									},
									"returnParameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "3797:19:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2302_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2385,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2384,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2302,
														"src": "3797:9:15"
													},
													"referencedDeclaration": 2302,
													"src": "3797:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2302_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:15"
									},
									"scope": 2402,
									"src": "3738:159:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2400,
										"nodeType": "Block",
										"src": "4094:85:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:15",
													"nodeType": "YulBlock",
													"src": "4129:44:15",
													"statements": [
														{
															"nativeSrc": "4143:20:15",
															"nodeType": "YulAssignment",
															"src": "4143:20:15",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:15",
																"nodeType": "YulIdentifier",
																"src": "4153:10:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:15"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2397,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2393,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:15",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2399,
												"nodeType": "InlineAssembly",
												"src": "4104:69:15"
											}
										]
									},
									"documentation": {
										"id": 2391,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:15",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "4029:19:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:15"
									},
									"returnParameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "4073:19:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2302_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2395,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2302,
														"src": "4073:9:15"
													},
													"referencedDeclaration": 2302,
													"src": "4073:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2302_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:15"
									},
									"scope": 2402,
									"src": "4007:172:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2403,
							"src": "1407:2774:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2714
						]
					},
					"id": 2715,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2404,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2405,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:16",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 2714,
							"linearizedBaseContracts": [
								2714
							],
							"name": "SafeMath",
							"nameLocation": "490:8:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2436,
										"nodeType": "Block",
										"src": "717:140:16",
										"statements": [
											{
												"id": 2435,
												"nodeType": "UncheckedBlock",
												"src": "727:124:16",
												"statements": [
													{
														"assignments": [
															2418
														],
														"declarations": [
															{
																"constant": false,
																"id": 2418,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2435,
																"src": "751:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2417,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2422,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2419,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2408,
																"src": "763:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2420,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2410,
																"src": "767:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2423,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2418,
																"src": "786:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2424,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2408,
																"src": "790:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2430,
														"nodeType": "IfStatement",
														"src": "782:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2428,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2416,
															"id": 2429,
															"nodeType": "Return",
															"src": "793:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2432,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2418,
																	"src": "838:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2433,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2416,
														"id": 2434,
														"nodeType": "Return",
														"src": "824:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2406,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:16",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "657:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "668:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:16"
									},
									"returnParameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "702:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2412,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "708:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:16"
									},
									"scope": 2714,
									"src": "641:216:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2464,
										"nodeType": "Block",
										"src": "1078:113:16",
										"statements": [
											{
												"id": 2463,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2449,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2442,
																"src": "1116:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2450,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2440,
																"src": "1120:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2456,
														"nodeType": "IfStatement",
														"src": "1112:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2454,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2448,
															"id": 2455,
															"nodeType": "Return",
															"src": "1123:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2458,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2440,
																		"src": "1168:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2459,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2442,
																		"src": "1172:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2461,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2448,
														"id": 2462,
														"nodeType": "Return",
														"src": "1154:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2438,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:16",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "1018:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "1029:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:16"
									},
									"returnParameters": {
										"id": 2448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "1063:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "1069:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:16"
									},
									"scope": 2714,
									"src": "1002:189:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2506,
										"nodeType": "Block",
										"src": "1415:417:16",
										"statements": [
											{
												"id": 2505,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2477,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2468,
																"src": "1683:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2484,
														"nodeType": "IfStatement",
														"src": "1679:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2482,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2476,
															"id": 2483,
															"nodeType": "Return",
															"src": "1691:16:16"
														}
													},
													{
														"assignments": [
															2486
														],
														"declarations": [
															{
																"constant": false,
																"id": 2486,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2505,
																"src": "1721:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2485,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2490,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2487,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2468,
																"src": "1733:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2488,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2470,
																"src": "1737:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2491,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2486,
																	"src": "1756:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2492,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2468,
																	"src": "1760:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2494,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2470,
																"src": "1765:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2500,
														"nodeType": "IfStatement",
														"src": "1752:33:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2498,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2476,
															"id": 2499,
															"nodeType": "Return",
															"src": "1768:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2502,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2486,
																	"src": "1813:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2503,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2476,
														"id": 2504,
														"nodeType": "Return",
														"src": "1799:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2466,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:16",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "1355:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "1366:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:16"
									},
									"returnParameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "1400:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2472,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "1406:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:16"
									},
									"scope": 2714,
									"src": "1339:493:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2534,
										"nodeType": "Block",
										"src": "2057:114:16",
										"statements": [
											{
												"id": 2533,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2519,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2512,
																"src": "2095:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2526,
														"nodeType": "IfStatement",
														"src": "2091:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2524,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2518,
															"id": 2525,
															"nodeType": "Return",
															"src": "2103:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2528,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2510,
																		"src": "2148:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2529,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2512,
																		"src": "2152:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2531,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2518,
														"id": 2532,
														"nodeType": "Return",
														"src": "2134:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2508,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:16",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2535,
												"src": "1997:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2535,
												"src": "2008:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:16"
									},
									"returnParameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2535,
												"src": "2042:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2514,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2535,
												"src": "2048:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:16"
									},
									"scope": 2714,
									"src": "1981:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2562,
										"nodeType": "Block",
										"src": "2406:114:16",
										"statements": [
											{
												"id": 2561,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2547,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2540,
																"src": "2444:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2554,
														"nodeType": "IfStatement",
														"src": "2440:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2552,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2546,
															"id": 2553,
															"nodeType": "Return",
															"src": "2452:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2556,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2538,
																		"src": "2497:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2557,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2540,
																		"src": "2501:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2559,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2546,
														"id": 2560,
														"nodeType": "Return",
														"src": "2483:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2536,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:16",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2563,
												"src": "2346:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2563,
												"src": "2357:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:16"
									},
									"returnParameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2563,
												"src": "2391:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2542,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2563,
												"src": "2397:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:16"
									},
									"scope": 2714,
									"src": "2330:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2577,
										"nodeType": "Block",
										"src": "2822:29:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2573,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2566,
														"src": "2839:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2574,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2568,
														"src": "2843:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2572,
												"id": 2576,
												"nodeType": "Return",
												"src": "2832:12:16"
											}
										]
									},
									"documentation": {
										"id": 2564,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:16",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2578,
												"src": "2768:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2578,
												"src": "2779:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:16"
									},
									"returnParameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2578,
												"src": "2813:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:16"
									},
									"scope": 2714,
									"src": "2755:96:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2592,
										"nodeType": "Block",
										"src": "3189:29:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2588,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2581,
														"src": "3206:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2589,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2583,
														"src": "3210:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2587,
												"id": 2591,
												"nodeType": "Return",
												"src": "3199:12:16"
											}
										]
									},
									"documentation": {
										"id": 2579,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:16",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "3135:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "3146:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:16"
									},
									"returnParameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "3180:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:16"
									},
									"scope": 2714,
									"src": "3122:96:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2607,
										"nodeType": "Block",
										"src": "3532:29:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2603,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2596,
														"src": "3549:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2604,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2598,
														"src": "3553:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2602,
												"id": 2606,
												"nodeType": "Return",
												"src": "3542:12:16"
											}
										]
									},
									"documentation": {
										"id": 2594,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:16",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "3478:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "3489:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:16"
									},
									"returnParameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2608,
												"src": "3523:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:16"
									},
									"scope": 2714,
									"src": "3465:96:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2622,
										"nodeType": "Block",
										"src": "3917:29:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2618,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2611,
														"src": "3934:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2619,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2613,
														"src": "3938:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2617,
												"id": 2621,
												"nodeType": "Return",
												"src": "3927:12:16"
											}
										]
									},
									"documentation": {
										"id": 2609,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:16",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "3863:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "3874:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:16"
									},
									"returnParameters": {
										"id": 2617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "3908:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:16"
									},
									"scope": 2714,
									"src": "3850:96:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2637,
										"nodeType": "Block",
										"src": "4466:29:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2633,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2626,
														"src": "4483:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2634,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2628,
														"src": "4487:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2632,
												"id": 2636,
												"nodeType": "Return",
												"src": "4476:12:16"
											}
										]
									},
									"documentation": {
										"id": 2624,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:16",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "4412:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "4423:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:16"
									},
									"returnParameters": {
										"id": 2632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "4457:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:16"
									},
									"scope": 2714,
									"src": "4399:96:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2662,
										"nodeType": "Block",
										"src": "5054:106:16",
										"statements": [
											{
												"id": 2661,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:16",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2651,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2643,
																		"src": "5096:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 2652,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2641,
																		"src": "5101:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2654,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2645,
																	"src": "5104:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2650,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2656,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2657,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2641,
																"src": "5138:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2658,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2643,
																"src": "5142:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2649,
														"id": 2660,
														"nodeType": "Return",
														"src": "5131:12:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2639,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:16",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "4972:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "4983:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2645,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "4994:26:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2644,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:16"
									},
									"returnParameters": {
										"id": 2649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "5045:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:16"
									},
									"scope": 2714,
									"src": "4959:201:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2687,
										"nodeType": "Block",
										"src": "5739:105:16",
										"statements": [
											{
												"id": 2686,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:16",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2676,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2668,
																		"src": "5781:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2679,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2670,
																	"src": "5788:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2675,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2681,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2682,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2666,
																"src": "5822:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2683,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2668,
																"src": "5826:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2674,
														"id": 2685,
														"nodeType": "Return",
														"src": "5815:12:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2664,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:16",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "5657:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "5668:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "5679:26:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:16"
									},
									"returnParameters": {
										"id": 2674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "5730:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:16"
									},
									"scope": 2714,
									"src": "5644:200:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2712,
										"nodeType": "Block",
										"src": "6585:105:16",
										"statements": [
											{
												"id": 2711,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:16",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2701,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2693,
																		"src": "6627:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2704,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2695,
																	"src": "6634:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2700,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2706,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2707,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2691,
																"src": "6668:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2708,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2693,
																"src": "6672:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2699,
														"id": 2710,
														"nodeType": "Return",
														"src": "6661:12:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2689,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:16",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2713,
												"src": "6503:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2693,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2713,
												"src": "6514:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2695,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2713,
												"src": "6525:26:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2694,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:16"
									},
									"returnParameters": {
										"id": 2699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2713,
												"src": "6576:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:16"
									},
									"scope": 2714,
									"src": "6490:200:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2715,
							"src": "482:6210:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:16"
				},
				"id": 16
			},
			"contracts/SocialToken.sol": {
				"ast": {
					"absolutePath": "contracts/SocialToken.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1421
						],
						"ERC1967Utils": [
							1883
						],
						"ERC20Upgradeable": [
							1375
						],
						"IERC1822Proxiable": [
							1452
						],
						"IERC20": [
							1971
						],
						"IERC20Errors": [
							1494
						],
						"IERC20Metadata": [
							1997
						],
						"ISocialMetricsOracle": [
							2742
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"PausableUpgradeable": [
							758
						],
						"SafeMath": [
							2714
						],
						"SocialToken": [
							3277
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 3278,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2716,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 2717,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3278,
							"sourceUnit": 1376,
							"src": "57:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 2718,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3278,
							"sourceUnit": 195,
							"src": "136:75:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2719,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3278,
							"sourceUnit": 631,
							"src": "212:77:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"id": 2720,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3278,
							"sourceUnit": 759,
							"src": "290:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2721,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3278,
							"sourceUnit": 2715,
							"src": "369:57:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISocialMetricsOracle",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2742,
							"linearizedBaseContracts": [
								2742
							],
							"name": "ISocialMetricsOracle",
							"nameLocation": "438:20:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISocialMetricsOracle.SocialMetrics",
									"id": 2730,
									"members": [
										{
											"constant": false,
											"id": 2723,
											"mutability": "mutable",
											"name": "tweetCount",
											"nameLocation": "504:10:17",
											"nodeType": "VariableDeclaration",
											"scope": 2730,
											"src": "496:18:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2722,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "496:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2725,
											"mutability": "mutable",
											"name": "sentimentScore",
											"nameLocation": "532:14:17",
											"nodeType": "VariableDeclaration",
											"scope": 2730,
											"src": "524:22:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2724,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2727,
											"mutability": "mutable",
											"name": "engagementRate",
											"nameLocation": "564:14:17",
											"nodeType": "VariableDeclaration",
											"scope": 2730,
											"src": "556:22:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2726,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "556:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2729,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "596:9:17",
											"nodeType": "VariableDeclaration",
											"scope": 2730,
											"src": "588:17:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2728,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "588:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SocialMetrics",
									"nameLocation": "472:13:17",
									"nodeType": "StructDefinition",
									"scope": 2742,
									"src": "465:147:17",
									"visibility": "public"
								},
								{
									"functionSelector": "395924dc",
									"id": 2736,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestMetrics",
									"nameLocation": "631:16:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:17"
									},
									"returnParameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "673:20:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
													"typeString": "struct ISocialMetricsOracle.SocialMetrics"
												},
												"typeName": {
													"id": 2733,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2732,
														"name": "SocialMetrics",
														"nameLocations": [
															"673:13:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2730,
														"src": "673:13:17"
													},
													"referencedDeclaration": 2730,
													"src": "673:13:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SocialMetrics_$2730_storage_ptr",
														"typeString": "struct ISocialMetricsOracle.SocialMetrics"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:22:17"
									},
									"scope": 2742,
									"src": "622:73:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "09c22c5d",
									"id": 2741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestSocialMetrics",
									"nameLocation": "709:20:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "729:2:17"
									},
									"returnParameters": {
										"id": 2740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2741,
												"src": "750:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2738,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "749:9:17"
									},
									"scope": 2742,
									"src": "700:59:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3278,
							"src": "428:333:17",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2743,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"787:16:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1375,
										"src": "787:16:17"
									},
									"id": 2744,
									"nodeType": "InheritanceSpecifier",
									"src": "787:16:17"
								},
								{
									"baseName": {
										"id": 2745,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"805:18:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "805:18:17"
									},
									"id": 2746,
									"nodeType": "InheritanceSpecifier",
									"src": "805:18:17"
								},
								{
									"baseName": {
										"id": 2747,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"825:15:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "825:15:17"
									},
									"id": 2748,
									"nodeType": "InheritanceSpecifier",
									"src": "825:15:17"
								},
								{
									"baseName": {
										"id": 2749,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"842:19:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 758,
										"src": "842:19:17"
									},
									"id": 2750,
									"nodeType": "InheritanceSpecifier",
									"src": "842:19:17"
								}
							],
							"canonicalName": "SocialToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3277,
							"linearizedBaseContracts": [
								3277,
								758,
								630,
								1452,
								194,
								1375,
								1494,
								1997,
								1971,
								1421,
								448
							],
							"name": "SocialToken",
							"nameLocation": "772:11:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2753,
									"libraryName": {
										"id": 2751,
										"name": "SafeMath",
										"nameLocations": [
											"874:8:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2714,
										"src": "874:8:17"
									},
									"nodeType": "UsingForDirective",
									"src": "868:27:17",
									"typeName": {
										"id": 2752,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "887:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "78f3c4b6",
									"id": 2756,
									"mutability": "mutable",
									"name": "socialOracle",
									"nameLocation": "953:12:17",
									"nodeType": "VariableDeclaration",
									"scope": 3277,
									"src": "925:40:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISocialMetricsOracle_$2742",
										"typeString": "contract ISocialMetricsOracle"
									},
									"typeName": {
										"id": 2755,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2754,
											"name": "ISocialMetricsOracle",
											"nameLocations": [
												"925:20:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2742,
											"src": "925:20:17"
										},
										"referencedDeclaration": 2742,
										"src": "925:20:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISocialMetricsOracle_$2742",
											"typeString": "contract ISocialMetricsOracle"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "SocialToken.TokenMechanics",
									"id": 2769,
									"members": [
										{
											"constant": false,
											"id": 2758,
											"mutability": "mutable",
											"name": "minSentimentScore",
											"nameLocation": "1053:17:17",
											"nodeType": "VariableDeclaration",
											"scope": 2769,
											"src": "1045:25:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2757,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1045:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2760,
											"mutability": "mutable",
											"name": "minEngagementRate",
											"nameLocation": "1140:17:17",
											"nodeType": "VariableDeclaration",
											"scope": 2769,
											"src": "1132:25:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2759,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1132:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2762,
											"mutability": "mutable",
											"name": "minTweetCount",
											"nameLocation": "1227:13:17",
											"nodeType": "VariableDeclaration",
											"scope": 2769,
											"src": "1219:21:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2761,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1219:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2764,
											"mutability": "mutable",
											"name": "rewardBaseAmount",
											"nameLocation": "1308:16:17",
											"nodeType": "VariableDeclaration",
											"scope": 2769,
											"src": "1300:24:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2763,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2766,
											"mutability": "mutable",
											"name": "penaltyBaseAmount",
											"nameLocation": "1375:17:17",
											"nodeType": "VariableDeclaration",
											"scope": 2769,
											"src": "1367:25:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2765,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1367:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2768,
											"mutability": "mutable",
											"name": "cooldownPeriod",
											"nameLocation": "1444:14:17",
											"nodeType": "VariableDeclaration",
											"scope": 2769,
											"src": "1436:22:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2767,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1436:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenMechanics",
									"nameLocation": "1020:14:17",
									"nodeType": "StructDefinition",
									"scope": 3277,
									"src": "1013:499:17",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "38b42785",
									"id": 2772,
									"mutability": "mutable",
									"name": "mechanics",
									"nameLocation": "1544:9:17",
									"nodeType": "VariableDeclaration",
									"scope": 3277,
									"src": "1522:31:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage",
										"typeString": "struct SocialToken.TokenMechanics"
									},
									"typeName": {
										"id": 2771,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2770,
											"name": "TokenMechanics",
											"nameLocations": [
												"1522:14:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2769,
											"src": "1522:14:17"
										},
										"referencedDeclaration": 2769,
										"src": "1522:14:17",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage_ptr",
											"typeString": "struct SocialToken.TokenMechanics"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9e24f236",
									"id": 2774,
									"mutability": "mutable",
									"name": "lastMechanicsUpdate",
									"nameLocation": "1605:19:17",
									"nodeType": "VariableDeclaration",
									"scope": 3277,
									"src": "1590:34:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2773,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1590:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d8ad5231",
									"id": 2778,
									"mutability": "mutable",
									"name": "lastRewardClaim",
									"nameLocation": "1665:15:17",
									"nodeType": "VariableDeclaration",
									"scope": 3277,
									"src": "1630:50:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2777,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2775,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1638:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1630:27:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2776,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1649:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "3df77beb5db05fcdd70a30fc8adf3f83f9501b68579455adbd100b8180940394",
									"id": 2782,
									"name": "OracleUpdated",
									"nameLocation": "1711:13:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2780,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOracle",
												"nameLocation": "1741:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "1725:25:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1725:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1724:27:17"
									},
									"src": "1705:47:17"
								},
								{
									"anonymous": false,
									"eventSelector": "367b6b00685ae263e44e2231e399d2e112eac1979516a9e0e1069d7cd4ac3a2d",
									"id": 2787,
									"name": "MechanicsUpdated",
									"nameLocation": "1763:16:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2785,
												"indexed": false,
												"mutability": "mutable",
												"name": "mechanics",
												"nameLocation": "1795:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "1780:24:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenMechanics_$2769_memory_ptr",
													"typeString": "struct SocialToken.TokenMechanics"
												},
												"typeName": {
													"id": 2784,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2783,
														"name": "TokenMechanics",
														"nameLocations": [
															"1780:14:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2769,
														"src": "1780:14:17"
													},
													"referencedDeclaration": 2769,
													"src": "1780:14:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage_ptr",
														"typeString": "struct SocialToken.TokenMechanics"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:26:17"
									},
									"src": "1757:49:17"
								},
								{
									"anonymous": false,
									"eventSelector": "da04004d58812f3e164f58e498158acca1b0054d975fce0e3bafdf56f2e254ba",
									"id": 2795,
									"name": "RewardDistributed",
									"nameLocation": "1817:17:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2789,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1843:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "1835:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2791,
												"indexed": false,
												"mutability": "mutable",
												"name": "sentimentScore",
												"nameLocation": "1859:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "1851:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2793,
												"indexed": false,
												"mutability": "mutable",
												"name": "engagementRate",
												"nameLocation": "1883:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "1875:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:64:17"
									},
									"src": "1811:88:17"
								},
								{
									"anonymous": false,
									"eventSelector": "0958e73d0165cd8413c567ddcfecfbdfb06498a561de5cd56849c2b463f66cdf",
									"id": 2803,
									"name": "PenaltyApplied",
									"nameLocation": "1910:14:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2797,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1933:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "1925:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2799,
												"indexed": false,
												"mutability": "mutable",
												"name": "sentimentScore",
												"nameLocation": "1949:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "1941:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1941:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2801,
												"indexed": false,
												"mutability": "mutable",
												"name": "engagementRate",
												"nameLocation": "1973:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "1965:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1924:64:17"
									},
									"src": "1904:85:17"
								},
								{
									"errorSelector": "55210681",
									"id": 2805,
									"name": "InvalidOracleAddress",
									"nameLocation": "2015:20:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2035:2:17"
									},
									"src": "2009:29:17"
								},
								{
									"errorSelector": "4a448f37",
									"id": 2807,
									"name": "CooldownPeriodNotElapsed",
									"nameLocation": "2049:24:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2073:2:17"
									},
									"src": "2043:33:17"
								},
								{
									"errorSelector": "7428474c",
									"id": 2809,
									"name": "InvalidMetricsTimestamp",
									"nameLocation": "2087:23:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2110:2:17"
									},
									"src": "2081:32:17"
								},
								{
									"errorSelector": "da2029d1",
									"id": 2811,
									"name": "InsufficientTweetCount",
									"nameLocation": "2124:22:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2146:2:17"
									},
									"src": "2118:31:17"
								},
								{
									"errorSelector": "2bc08a73",
									"id": 2813,
									"name": "RewardClaimTooSoon",
									"nameLocation": "2160:18:17",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2178:2:17"
									},
									"src": "2154:27:17"
								},
								{
									"body": {
										"id": 2820,
										"nodeType": "Block",
										"src": "2254:39:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2817,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "2264:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2264:22:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2819,
												"nodeType": "ExpressionStatement",
												"src": "2264:22:17"
											}
										]
									},
									"documentation": {
										"id": 2814,
										"nodeType": "StructuredDocumentation",
										"src": "2187:48:17",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 2821,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2251:2:17"
									},
									"returnParameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2254:0:17"
									},
									"scope": 3277,
									"src": "2240:53:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2882,
										"nodeType": "Block",
										"src": "2475:398:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2836,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2823,
															"src": "2498:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2837,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2825,
															"src": "2504:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2835,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "2485:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 2838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2485:26:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2839,
												"nodeType": "ExpressionStatement",
												"src": "2485:26:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2841,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2536:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2540:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2536:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2840,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2521:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:26:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2844,
												"nodeType": "ExpressionStatement",
												"src": "2521:26:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2845,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "2557:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2557:17:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2847,
												"nodeType": "ExpressionStatement",
												"src": "2557:17:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2848,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "2584:22:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2584:24:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2850,
												"nodeType": "ExpressionStatement",
												"src": "2584:24:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2851,
														"name": "_socialOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2827,
														"src": "2623:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2854,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2648:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2853,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2640:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2852,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2640:7:17",
																"typeDescriptions": {}
															}
														},
														"id": 2855,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2640:10:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2623:27:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2860,
												"nodeType": "IfStatement",
												"src": "2619:62:17",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2857,
															"name": "InvalidOracleAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2805,
															"src": "2659:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2659:22:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2859,
													"nodeType": "RevertStatement",
													"src": "2652:29:17"
												}
											},
											{
												"expression": {
													"id": 2865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2861,
														"name": "socialOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2756,
														"src": "2691:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISocialMetricsOracle_$2742",
															"typeString": "contract ISocialMetricsOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2863,
																"name": "_socialOracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2827,
																"src": "2727:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2862,
															"name": "ISocialMetricsOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2742,
															"src": "2706:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISocialMetricsOracle_$2742_$",
																"typeString": "type(contract ISocialMetricsOracle)"
															}
														},
														"id": 2864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2706:35:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISocialMetricsOracle_$2742",
															"typeString": "contract ISocialMetricsOracle"
														}
													},
													"src": "2691:50:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISocialMetricsOracle_$2742",
														"typeString": "contract ISocialMetricsOracle"
													}
												},
												"id": 2866,
												"nodeType": "ExpressionStatement",
												"src": "2691:50:17"
											},
											{
												"expression": {
													"id": 2869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2867,
														"name": "mechanics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2772,
														"src": "2751:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage",
															"typeString": "struct SocialToken.TokenMechanics storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2868,
														"name": "_mechanics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2830,
														"src": "2763:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenMechanics_$2769_memory_ptr",
															"typeString": "struct SocialToken.TokenMechanics memory"
														}
													},
													"src": "2751:22:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage",
														"typeString": "struct SocialToken.TokenMechanics storage ref"
													}
												},
												"id": 2870,
												"nodeType": "ExpressionStatement",
												"src": "2751:22:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2872,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2829:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2833:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2829:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030303030",
																"id": 2874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2841:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2851:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2876,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 895,
																		"src": "2855:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 2877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2855:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "2851:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2841:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2871,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "2823:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:43:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2881,
												"nodeType": "ExpressionStatement",
												"src": "2823:43:17"
											}
										]
									},
									"functionSelector": "af9dcc2c",
									"id": 2883,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2833,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2832,
												"name": "initializer",
												"nameLocations": [
													"2463:11:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "2463:11:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "2463:11:17"
										}
									],
									"name": "initialize",
									"nameLocation": "2308:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2823,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2342:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "2328:18:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2822,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2328:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2825,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "2370:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "2356:20:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2824,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2356:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2827,
												"mutability": "mutable",
												"name": "_socialOracle",
												"nameLocation": "2394:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "2386:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2830,
												"mutability": "mutable",
												"name": "_mechanics",
												"nameLocation": "2439:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "2417:32:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenMechanics_$2769_memory_ptr",
													"typeString": "struct SocialToken.TokenMechanics"
												},
												"typeName": {
													"id": 2829,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2828,
														"name": "TokenMechanics",
														"nameLocations": [
															"2417:14:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2769,
														"src": "2417:14:17"
													},
													"referencedDeclaration": 2769,
													"src": "2417:14:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage_ptr",
														"typeString": "struct SocialToken.TokenMechanics"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:137:17"
									},
									"returnParameters": {
										"id": 2834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2475:0:17"
									},
									"scope": 3277,
									"src": "2299:574:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2960,
										"nodeType": "Block",
										"src": "2970:937:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2888,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2984:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2990:9:17",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2984:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2890,
															"name": "lastMechanicsUpdate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2774,
															"src": "3002:19:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 2891,
																"name": "mechanics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2772,
																"src": "3024:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage",
																	"typeString": "struct SocialToken.TokenMechanics storage ref"
																}
															},
															"id": 2892,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3034:14:17",
															"memberName": "cooldownPeriod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2768,
															"src": "3024:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3002:46:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2984:64:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2898,
												"nodeType": "IfStatement",
												"src": "2980:116:17",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2895,
															"name": "CooldownPeriodNotElapsed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2807,
															"src": "3070:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3070:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2897,
													"nodeType": "RevertStatement",
													"src": "3063:33:17"
												}
											},
											{
												"assignments": [
													2903
												],
												"declarations": [
													{
														"constant": false,
														"id": 2903,
														"mutability": "mutable",
														"name": "metrics",
														"nameLocation": "3149:7:17",
														"nodeType": "VariableDeclaration",
														"scope": 2960,
														"src": "3107:49:17",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
															"typeString": "struct ISocialMetricsOracle.SocialMetrics"
														},
														"typeName": {
															"id": 2902,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2901,
																"name": "ISocialMetricsOracle.SocialMetrics",
																"nameLocations": [
																	"3107:20:17",
																	"3128:13:17"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2730,
																"src": "3107:34:17"
															},
															"referencedDeclaration": 2730,
															"src": "3107:34:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SocialMetrics_$2730_storage_ptr",
																"typeString": "struct ISocialMetricsOracle.SocialMetrics"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2907,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2904,
															"name": "socialOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2756,
															"src": "3159:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISocialMetricsOracle_$2742",
																"typeString": "contract ISocialMetricsOracle"
															}
														},
														"id": 2905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3172:16:17",
														"memberName": "getLatestMetrics",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2736,
														"src": "3159:29:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_struct$_SocialMetrics_$2730_memory_ptr_$",
															"typeString": "function () view external returns (struct ISocialMetricsOracle.SocialMetrics memory)"
														}
													},
													"id": 2906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3159:31:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
														"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3107:83:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2908,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3241:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3247:9:17",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3241:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 2910,
																"name": "metrics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2903,
																"src": "3259:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
																	"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
																}
															},
															"id": 2911,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3267:9:17",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2729,
															"src": "3259:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3241:35:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2913,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3279:7:17",
														"subdenomination": "hours",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "1"
													},
													"src": "3241:45:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2918,
												"nodeType": "IfStatement",
												"src": "3237:96:17",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2915,
															"name": "InvalidMetricsTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2809,
															"src": "3308:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3308:25:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2917,
													"nodeType": "RevertStatement",
													"src": "3301:32:17"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2919,
															"name": "metrics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2903,
															"src": "3347:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
																"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
															}
														},
														"id": 2920,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3355:10:17",
														"memberName": "tweetCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2723,
														"src": "3347:18:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2921,
															"name": "mechanics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2772,
															"src": "3368:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage",
																"typeString": "struct SocialToken.TokenMechanics storage ref"
															}
														},
														"id": 2922,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3378:13:17",
														"memberName": "minTweetCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2762,
														"src": "3368:23:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3347:44:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2927,
												"nodeType": "IfStatement",
												"src": "3343:94:17",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2924,
															"name": "InsufficientTweetCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2811,
															"src": "3413:22:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3413:24:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2926,
													"nodeType": "RevertStatement",
													"src": "3406:31:17"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2928,
																"name": "metrics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2903,
																"src": "3501:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
																	"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
																}
															},
															"id": 2929,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3509:14:17",
															"memberName": "sentimentScore",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2725,
															"src": "3501:22:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"expression": {
																"id": 2930,
																"name": "mechanics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2772,
																"src": "3527:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage",
																	"typeString": "struct SocialToken.TokenMechanics storage ref"
																}
															},
															"id": 2931,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3537:17:17",
															"memberName": "minSentimentScore",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2758,
															"src": "3527:27:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3501:53:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2933,
																"name": "metrics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2903,
																"src": "3570:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
																	"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
																}
															},
															"id": 2934,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3578:14:17",
															"memberName": "engagementRate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2727,
															"src": "3570:22:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"expression": {
																"id": 2935,
																"name": "mechanics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2772,
																"src": "3596:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage",
																	"typeString": "struct SocialToken.TokenMechanics storage ref"
																}
															},
															"id": 2936,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3606:17:17",
															"memberName": "minEngagementRate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2760,
															"src": "3596:27:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3570:53:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3501:122:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2948,
													"nodeType": "Block",
													"src": "3696:56:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2945,
																		"name": "metrics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2903,
																		"src": "3733:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
																			"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
																			"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
																		}
																	],
																	"id": 2944,
																	"name": "_handleNegativeMetrics",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3100,
																	"src": "3710:22:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SocialMetrics_$2730_memory_ptr_$returns$__$",
																		"typeString": "function (struct ISocialMetricsOracle.SocialMetrics memory)"
																	}
																},
																"id": 2946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3710:31:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2947,
															"nodeType": "ExpressionStatement",
															"src": "3710:31:17"
														}
													]
												},
												"id": 2949,
												"nodeType": "IfStatement",
												"src": "3484:268:17",
												"trueBody": {
													"id": 2943,
													"nodeType": "Block",
													"src": "3634:56:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2940,
																		"name": "metrics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2903,
																		"src": "3671:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
																			"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
																			"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
																		}
																	],
																	"id": 2939,
																	"name": "_handlePositiveMetrics",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3061,
																	"src": "3648:22:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SocialMetrics_$2730_memory_ptr_$returns$__$",
																		"typeString": "function (struct ISocialMetricsOracle.SocialMetrics memory)"
																	}
																},
																"id": 2941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3648:31:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2942,
															"nodeType": "ExpressionStatement",
															"src": "3648:31:17"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2950,
														"name": "lastMechanicsUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2774,
														"src": "3762:19:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2951,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3784:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3790:9:17",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3784:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3762:37:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2954,
												"nodeType": "ExpressionStatement",
												"src": "3762:37:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2955,
															"name": "socialOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2756,
															"src": "3865:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISocialMetricsOracle_$2742",
																"typeString": "contract ISocialMetricsOracle"
															}
														},
														"id": 2957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3878:20:17",
														"memberName": "requestSocialMetrics",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2741,
														"src": "3865:33:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bytes32_$",
															"typeString": "function () external returns (bytes32)"
														}
													},
													"id": 2958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3865:35:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2959,
												"nodeType": "ExpressionStatement",
												"src": "3865:35:17"
											}
										]
									},
									"functionSelector": "a7892c11",
									"id": 2961,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2886,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2885,
												"name": "whenNotPaused",
												"nameLocations": [
													"2956:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "2956:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "2956:13:17"
										}
									],
									"name": "updateBasedOnMetrics",
									"nameLocation": "2924:20:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2944:2:17"
									},
									"returnParameters": {
										"id": 2887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2970:0:17"
									},
									"scope": 3277,
									"src": "2915:992:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3021,
										"nodeType": "Block",
										"src": "3959:550:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2966,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3973:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:9:17",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3973:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 2968,
																"name": "lastRewardClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2778,
																"src": "3991:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2971,
															"indexExpression": {
																"expression": {
																	"id": 2969,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4007:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4011:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4007:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3991:27:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 2972,
																"name": "mechanics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2772,
																"src": "4021:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage",
																	"typeString": "struct SocialToken.TokenMechanics storage ref"
																}
															},
															"id": 2973,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4031:14:17",
															"memberName": "cooldownPeriod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2768,
															"src": "4021:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3991:54:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3973:72:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2979,
												"nodeType": "IfStatement",
												"src": "3969:117:17",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2976,
															"name": "RewardClaimTooSoon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2813,
															"src": "4066:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4066:20:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2978,
													"nodeType": "RevertStatement",
													"src": "4059:27:17"
												}
											},
											{
												"assignments": [
													2984
												],
												"declarations": [
													{
														"constant": false,
														"id": 2984,
														"mutability": "mutable",
														"name": "metrics",
														"nameLocation": "4139:7:17",
														"nodeType": "VariableDeclaration",
														"scope": 3021,
														"src": "4097:49:17",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
															"typeString": "struct ISocialMetricsOracle.SocialMetrics"
														},
														"typeName": {
															"id": 2983,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2982,
																"name": "ISocialMetricsOracle.SocialMetrics",
																"nameLocations": [
																	"4097:20:17",
																	"4118:13:17"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2730,
																"src": "4097:34:17"
															},
															"referencedDeclaration": 2730,
															"src": "4097:34:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SocialMetrics_$2730_storage_ptr",
																"typeString": "struct ISocialMetricsOracle.SocialMetrics"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2988,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2985,
															"name": "socialOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2756,
															"src": "4149:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISocialMetricsOracle_$2742",
																"typeString": "contract ISocialMetricsOracle"
															}
														},
														"id": 2986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4162:16:17",
														"memberName": "getLatestMetrics",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2736,
														"src": "4149:29:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_struct$_SocialMetrics_$2730_memory_ptr_$",
															"typeString": "function () view external returns (struct ISocialMetricsOracle.SocialMetrics memory)"
														}
													},
													"id": 2987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4149:31:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
														"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4097:83:17"
											},
											{
												"assignments": [
													2990
												],
												"declarations": [
													{
														"constant": false,
														"id": 2990,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "4207:12:17",
														"nodeType": "VariableDeclaration",
														"scope": 3021,
														"src": "4199:20:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2989,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4199:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3001,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2992,
																"name": "metrics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2984,
																"src": "4252:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
																	"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
																}
															},
															"id": 2993,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4260:14:17",
															"memberName": "sentimentScore",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2725,
															"src": "4252:22:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2994,
																"name": "metrics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2984,
																"src": "4288:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
																	"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
																}
															},
															"id": 2995,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4296:14:17",
															"memberName": "engagementRate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2727,
															"src": "4288:22:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2997,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4334:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4338:6:17",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4334:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2996,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "4324:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4324:21:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2991,
														"name": "_calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3146,
														"src": "4222:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 3000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4222:133:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4199:156:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3002,
														"name": "rewardAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2990,
														"src": "4370:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4385:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4370:16:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3020,
												"nodeType": "IfStatement",
												"src": "4366:137:17",
												"trueBody": {
													"id": 3019,
													"nodeType": "Block",
													"src": "4388:115:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3006,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4408:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4412:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4408:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3008,
																		"name": "rewardAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2990,
																		"src": "4420:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3005,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "4402:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 3009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4402:31:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3010,
															"nodeType": "ExpressionStatement",
															"src": "4402:31:17"
														},
														{
															"expression": {
																"id": 3017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3011,
																		"name": "lastRewardClaim",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2778,
																		"src": "4447:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3014,
																	"indexExpression": {
																		"expression": {
																			"id": 3012,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4463:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4467:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4463:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4447:27:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3015,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4477:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4483:9:17",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4477:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4447:45:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3018,
															"nodeType": "ExpressionStatement",
															"src": "4447:45:17"
														}
													]
												}
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 3022,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2964,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2963,
												"name": "whenNotPaused",
												"nameLocations": [
													"3945:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "3945:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3945:13:17"
										}
									],
									"name": "claimReward",
									"nameLocation": "3922:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3933:2:17"
									},
									"returnParameters": {
										"id": 2965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3959:0:17"
									},
									"scope": 3277,
									"src": "3913:596:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3060,
										"nodeType": "Block",
										"src": "4633:354:17",
										"statements": [
											{
												"assignments": [
													3029
												],
												"declarations": [
													{
														"constant": false,
														"id": 3029,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "4651:12:17",
														"nodeType": "VariableDeclaration",
														"scope": 3060,
														"src": "4643:20:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3028,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4643:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3038,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3031,
																"name": "metrics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3025,
																"src": "4696:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
																	"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
																}
															},
															"id": 3032,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4704:14:17",
															"memberName": "sentimentScore",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2725,
															"src": "4696:22:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3033,
																"name": "metrics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3025,
																"src": "4732:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
																	"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
																}
															},
															"id": 3034,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4740:14:17",
															"memberName": "engagementRate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2727,
															"src": "4732:22:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3035,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 911,
																"src": "4768:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 3036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4768:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3030,
														"name": "_calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3146,
														"src": "4666:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 3037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4666:125:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4643:148:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3039,
														"name": "rewardAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3029,
														"src": "4806:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3040,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4821:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4806:16:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3059,
												"nodeType": "IfStatement",
												"src": "4802:179:17",
												"trueBody": {
													"id": 3058,
													"nodeType": "Block",
													"src": "4824:157:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 3045,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4852:4:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SocialToken_$3277",
																					"typeString": "contract SocialToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SocialToken_$3277",
																					"typeString": "contract SocialToken"
																				}
																			],
																			"id": 3044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4844:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3043,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4844:7:17",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4844:13:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3047,
																		"name": "rewardAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3029,
																		"src": "4859:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3042,
																	"name": "_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1240,
																	"src": "4838:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 3048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4838:34:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3049,
															"nodeType": "ExpressionStatement",
															"src": "4838:34:17"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3051,
																		"name": "rewardAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3029,
																		"src": "4909:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 3052,
																			"name": "metrics",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "4923:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
																				"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
																			}
																		},
																		"id": 3053,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4931:14:17",
																		"memberName": "sentimentScore",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2725,
																		"src": "4923:22:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 3054,
																			"name": "metrics",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "4947:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
																				"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
																			}
																		},
																		"id": 3055,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4955:14:17",
																		"memberName": "engagementRate",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2727,
																		"src": "4947:22:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3050,
																	"name": "RewardDistributed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2795,
																	"src": "4891:17:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 3056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4891:79:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3057,
															"nodeType": "EmitStatement",
															"src": "4886:84:17"
														}
													]
												}
											}
										]
									},
									"id": 3061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_handlePositiveMetrics",
									"nameLocation": "4550:22:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3025,
												"mutability": "mutable",
												"name": "metrics",
												"nameLocation": "4615:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3061,
												"src": "4573:49:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
													"typeString": "struct ISocialMetricsOracle.SocialMetrics"
												},
												"typeName": {
													"id": 3024,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3023,
														"name": "ISocialMetricsOracle.SocialMetrics",
														"nameLocations": [
															"4573:20:17",
															"4594:13:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2730,
														"src": "4573:34:17"
													},
													"referencedDeclaration": 2730,
													"src": "4573:34:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SocialMetrics_$2730_storage_ptr",
														"typeString": "struct ISocialMetricsOracle.SocialMetrics"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4572:51:17"
									},
									"returnParameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4633:0:17"
									},
									"scope": 3277,
									"src": "4541:446:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3099,
										"nodeType": "Block",
										"src": "5085:356:17",
										"statements": [
											{
												"assignments": [
													3068
												],
												"declarations": [
													{
														"constant": false,
														"id": 3068,
														"mutability": "mutable",
														"name": "penaltyAmount",
														"nameLocation": "5103:13:17",
														"nodeType": "VariableDeclaration",
														"scope": 3099,
														"src": "5095:21:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3067,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5095:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3077,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3070,
																"name": "metrics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3064,
																"src": "5150:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
																	"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
																}
															},
															"id": 3071,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5158:14:17",
															"memberName": "sentimentScore",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2725,
															"src": "5150:22:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3072,
																"name": "metrics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3064,
																"src": "5186:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
																	"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
																}
															},
															"id": 3073,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5194:14:17",
															"memberName": "engagementRate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2727,
															"src": "5186:22:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3074,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 911,
																"src": "5222:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 3075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5222:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3069,
														"name": "_calculatePenalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3204,
														"src": "5119:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 3076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5119:126:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5095:150:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3078,
														"name": "penaltyAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3068,
														"src": "5260:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5276:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5260:17:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3098,
												"nodeType": "IfStatement",
												"src": "5256:179:17",
												"trueBody": {
													"id": 3097,
													"nodeType": "Block",
													"src": "5279:156:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 3084,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5307:4:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SocialToken_$3277",
																					"typeString": "contract SocialToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SocialToken_$3277",
																					"typeString": "contract SocialToken"
																				}
																			],
																			"id": 3083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5299:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3082,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5299:7:17",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5299:13:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3086,
																		"name": "penaltyAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3068,
																		"src": "5314:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3081,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "5293:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 3087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5293:35:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3088,
															"nodeType": "ExpressionStatement",
															"src": "5293:35:17"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3090,
																		"name": "penaltyAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3068,
																		"src": "5362:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 3091,
																			"name": "metrics",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3064,
																			"src": "5377:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
																				"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
																			}
																		},
																		"id": 3092,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5385:14:17",
																		"memberName": "sentimentScore",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2725,
																		"src": "5377:22:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 3093,
																			"name": "metrics",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3064,
																			"src": "5401:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
																				"typeString": "struct ISocialMetricsOracle.SocialMetrics memory"
																			}
																		},
																		"id": 3094,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5409:14:17",
																		"memberName": "engagementRate",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2727,
																		"src": "5401:22:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3089,
																	"name": "PenaltyApplied",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2803,
																	"src": "5347:14:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 3095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5347:77:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3096,
															"nodeType": "EmitStatement",
															"src": "5342:82:17"
														}
													]
												}
											}
										]
									},
									"id": 3100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_handleNegativeMetrics",
									"nameLocation": "5002:22:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3064,
												"mutability": "mutable",
												"name": "metrics",
												"nameLocation": "5067:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3100,
												"src": "5025:49:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SocialMetrics_$2730_memory_ptr",
													"typeString": "struct ISocialMetricsOracle.SocialMetrics"
												},
												"typeName": {
													"id": 3063,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3062,
														"name": "ISocialMetricsOracle.SocialMetrics",
														"nameLocations": [
															"5025:20:17",
															"5046:13:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2730,
														"src": "5025:34:17"
													},
													"referencedDeclaration": 2730,
													"src": "5025:34:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SocialMetrics_$2730_storage_ptr",
														"typeString": "struct ISocialMetricsOracle.SocialMetrics"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5024:51:17"
									},
									"returnParameters": {
										"id": 3066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5085:0:17"
									},
									"scope": 3277,
									"src": "4993:448:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3145,
										"nodeType": "Block",
										"src": "5603:437:17",
										"statements": [
											{
												"assignments": [
													3112
												],
												"declarations": [
													{
														"constant": false,
														"id": 3112,
														"mutability": "mutable",
														"name": "sentimentMultiplier",
														"nameLocation": "5621:19:17",
														"nodeType": "VariableDeclaration",
														"scope": 3145,
														"src": "5613:27:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3111,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5613:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3118,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3115,
																"name": "mechanics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2772,
																"src": "5662:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage",
																	"typeString": "struct SocialToken.TokenMechanics storage ref"
																}
															},
															"id": 3116,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5672:17:17",
															"memberName": "minSentimentScore",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2758,
															"src": "5662:27:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3113,
															"name": "sentimentScore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3102,
															"src": "5643:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5658:3:17",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2593,
														"src": "5643:18:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:47:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5613:77:17"
											},
											{
												"assignments": [
													3120
												],
												"declarations": [
													{
														"constant": false,
														"id": 3120,
														"mutability": "mutable",
														"name": "engagementMultiplier",
														"nameLocation": "5708:20:17",
														"nodeType": "VariableDeclaration",
														"scope": 3145,
														"src": "5700:28:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3119,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5700:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3126,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3123,
																"name": "mechanics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2772,
																"src": "5750:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage",
																	"typeString": "struct SocialToken.TokenMechanics storage ref"
																}
															},
															"id": 3124,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5760:17:17",
															"memberName": "minEngagementRate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2760,
															"src": "5750:27:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3121,
															"name": "engagementRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3104,
															"src": "5731:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5746:3:17",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2593,
														"src": "5731:18:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5731:47:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5700:78:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 3142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6002:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "3130303030",
																	"id": 3139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5954:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 3136,
																			"name": "baseAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3106,
																			"src": "5925:10:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 3133,
																					"name": "engagementMultiplier",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3120,
																					"src": "5886:20:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 3130,
																							"name": "sentimentMultiplier",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3112,
																							"src": "5848:19:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 3127,
																								"name": "mechanics",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2772,
																								"src": "5804:9:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage",
																									"typeString": "struct SocialToken.TokenMechanics storage ref"
																								}
																							},
																							"id": 3128,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5814:16:17",
																							"memberName": "rewardBaseAmount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2764,
																							"src": "5804:26:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 3129,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5844:3:17",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2608,
																						"src": "5804:43:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 3131,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5804:64:17",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3132,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5882:3:17",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2608,
																				"src": "5804:81:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5804:103:17",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5921:3:17",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2608,
																		"src": "5804:120:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5804:132:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5950:3:17",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2623,
																"src": "5804:149:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5804:156:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5998:3:17",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2623,
														"src": "5804:197:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5804:202:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3110,
												"id": 3144,
												"nodeType": "Return",
												"src": "5797:209:17"
											}
										]
									},
									"id": 3146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateReward",
									"nameLocation": "5456:16:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3102,
												"mutability": "mutable",
												"name": "sentimentScore",
												"nameLocation": "5490:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "5482:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5482:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3104,
												"mutability": "mutable",
												"name": "engagementRate",
												"nameLocation": "5522:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "5514:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5514:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3106,
												"mutability": "mutable",
												"name": "baseAmount",
												"nameLocation": "5554:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "5546:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5546:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5472:98:17"
									},
									"returnParameters": {
										"id": 3110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "5594:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5594:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5593:9:17"
									},
									"scope": 3277,
									"src": "5447:593:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3203,
										"nodeType": "Block",
										"src": "6203:542:17",
										"statements": [
											{
												"assignments": [
													3158
												],
												"declarations": [
													{
														"constant": false,
														"id": 3158,
														"mutability": "mutable",
														"name": "sentimentDiff",
														"nameLocation": "6221:13:17",
														"nodeType": "VariableDeclaration",
														"scope": 3203,
														"src": "6213:21:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3157,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6213:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3170,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3159,
																"name": "mechanics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2772,
																"src": "6237:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage",
																	"typeString": "struct SocialToken.TokenMechanics storage ref"
																}
															},
															"id": 3160,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6247:17:17",
															"memberName": "minSentimentScore",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2758,
															"src": "6237:27:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3161,
															"name": "sentimentScore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3148,
															"src": "6267:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6237:44:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 3168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6347:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 3169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6237:111:17",
													"trueExpression": {
														"arguments": [
															{
																"id": 3166,
																"name": "sentimentScore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3148,
																"src": "6329:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 3163,
																	"name": "mechanics",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2772,
																	"src": "6297:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage",
																		"typeString": "struct SocialToken.TokenMechanics storage ref"
																	}
																},
																"id": 3164,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6307:17:17",
																"memberName": "minSentimentScore",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2758,
																"src": "6297:27:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6325:3:17",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2593,
															"src": "6297:31:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6297:47:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6213:135:17"
											},
											{
												"assignments": [
													3172
												],
												"declarations": [
													{
														"constant": false,
														"id": 3172,
														"mutability": "mutable",
														"name": "engagementDiff",
														"nameLocation": "6366:14:17",
														"nodeType": "VariableDeclaration",
														"scope": 3203,
														"src": "6358:22:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3171,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6358:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3184,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3173,
																"name": "mechanics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2772,
																"src": "6383:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage",
																	"typeString": "struct SocialToken.TokenMechanics storage ref"
																}
															},
															"id": 3174,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6393:17:17",
															"memberName": "minEngagementRate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2760,
															"src": "6383:27:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3175,
															"name": "engagementRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3150,
															"src": "6413:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6383:44:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 3182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6493:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 3183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6383:111:17",
													"trueExpression": {
														"arguments": [
															{
																"id": 3180,
																"name": "engagementRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3150,
																"src": "6475:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 3177,
																	"name": "mechanics",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2772,
																	"src": "6443:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage",
																		"typeString": "struct SocialToken.TokenMechanics storage ref"
																	}
																},
																"id": 3178,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6453:17:17",
																"memberName": "minEngagementRate",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2760,
																"src": "6443:27:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6471:3:17",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2593,
															"src": "6443:31:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6443:47:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6358:136:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 3200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6707:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "3130303030",
																	"id": 3197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6659:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 3194,
																			"name": "baseAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3152,
																			"src": "6630:10:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 3191,
																					"name": "engagementDiff",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3172,
																					"src": "6597:14:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 3188,
																							"name": "sentimentDiff",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3158,
																							"src": "6565:13:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 3185,
																								"name": "mechanics",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2772,
																								"src": "6520:9:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage",
																									"typeString": "struct SocialToken.TokenMechanics storage ref"
																								}
																							},
																							"id": 3186,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6530:17:17",
																							"memberName": "penaltyBaseAmount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2766,
																							"src": "6520:27:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 3187,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6561:3:17",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2608,
																						"src": "6520:44:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 3189,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6520:59:17",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6593:3:17",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2608,
																				"src": "6520:76:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6520:92:17",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6626:3:17",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2608,
																		"src": "6520:109:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6520:121:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6655:3:17",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2623,
																"src": "6520:138:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6520:145:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6703:3:17",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2623,
														"src": "6520:186:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6520:191:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3156,
												"id": 3202,
												"nodeType": "Return",
												"src": "6513:198:17"
											}
										]
									},
									"id": 3204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculatePenalty",
									"nameLocation": "6055:17:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3148,
												"mutability": "mutable",
												"name": "sentimentScore",
												"nameLocation": "6090:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 3204,
												"src": "6082:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6082:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3150,
												"mutability": "mutable",
												"name": "engagementRate",
												"nameLocation": "6122:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 3204,
												"src": "6114:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6114:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "baseAmount",
												"nameLocation": "6154:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 3204,
												"src": "6146:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6146:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6072:98:17"
									},
									"returnParameters": {
										"id": 3156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3204,
												"src": "6194:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6194:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6193:9:17"
									},
									"scope": 3277,
									"src": "6046:699:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3231,
										"nodeType": "Block",
										"src": "6834:170:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3211,
														"name": "newOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3206,
														"src": "6848:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6869:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6861:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3212,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6861:7:17",
																"typeDescriptions": {}
															}
														},
														"id": 3215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6861:10:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6848:23:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3220,
												"nodeType": "IfStatement",
												"src": "6844:58:17",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3217,
															"name": "InvalidOracleAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2805,
															"src": "6880:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 3218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6880:22:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 3219,
													"nodeType": "RevertStatement",
													"src": "6873:29:17"
												}
											},
											{
												"expression": {
													"id": 3225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3221,
														"name": "socialOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2756,
														"src": "6912:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISocialMetricsOracle_$2742",
															"typeString": "contract ISocialMetricsOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3223,
																"name": "newOracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3206,
																"src": "6948:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3222,
															"name": "ISocialMetricsOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2742,
															"src": "6927:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISocialMetricsOracle_$2742_$",
																"typeString": "type(contract ISocialMetricsOracle)"
															}
														},
														"id": 3224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6927:31:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISocialMetricsOracle_$2742",
															"typeString": "contract ISocialMetricsOracle"
														}
													},
													"src": "6912:46:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISocialMetricsOracle_$2742",
														"typeString": "contract ISocialMetricsOracle"
													}
												},
												"id": 3226,
												"nodeType": "ExpressionStatement",
												"src": "6912:46:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3228,
															"name": "newOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3206,
															"src": "6987:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3227,
														"name": "OracleUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2782,
														"src": "6973:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6973:24:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3230,
												"nodeType": "EmitStatement",
												"src": "6968:29:17"
											}
										]
									},
									"functionSelector": "1cb44dfc",
									"id": 3232,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3209,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3208,
												"name": "onlyOwner",
												"nameLocations": [
													"6824:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "6824:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "6824:9:17"
										}
									],
									"name": "updateOracle",
									"nameLocation": "6783:12:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3206,
												"mutability": "mutable",
												"name": "newOracle",
												"nameLocation": "6804:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3232,
												"src": "6796:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6796:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6795:19:17"
									},
									"returnParameters": {
										"id": 3210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6834:0:17"
									},
									"scope": 3277,
									"src": "6774:230:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3248,
										"nodeType": "Block",
										"src": "7090:86:17",
										"statements": [
											{
												"expression": {
													"id": 3242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3240,
														"name": "mechanics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2772,
														"src": "7100:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage",
															"typeString": "struct SocialToken.TokenMechanics storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3241,
														"name": "newMechanics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3235,
														"src": "7112:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenMechanics_$2769_memory_ptr",
															"typeString": "struct SocialToken.TokenMechanics memory"
														}
													},
													"src": "7100:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage",
														"typeString": "struct SocialToken.TokenMechanics storage ref"
													}
												},
												"id": 3243,
												"nodeType": "ExpressionStatement",
												"src": "7100:24:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3245,
															"name": "newMechanics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3235,
															"src": "7156:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenMechanics_$2769_memory_ptr",
																"typeString": "struct SocialToken.TokenMechanics memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TokenMechanics_$2769_memory_ptr",
																"typeString": "struct SocialToken.TokenMechanics memory"
															}
														],
														"id": 3244,
														"name": "MechanicsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2787,
														"src": "7139:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_struct$_TokenMechanics_$2769_memory_ptr_$returns$__$",
															"typeString": "function (struct SocialToken.TokenMechanics memory)"
														}
													},
													"id": 3246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7139:30:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3247,
												"nodeType": "EmitStatement",
												"src": "7134:35:17"
											}
										]
									},
									"functionSelector": "0b594036",
									"id": 3249,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3238,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3237,
												"name": "onlyOwner",
												"nameLocations": [
													"7080:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "7080:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "7080:9:17"
										}
									],
									"name": "updateMechanics",
									"nameLocation": "7019:15:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3235,
												"mutability": "mutable",
												"name": "newMechanics",
												"nameLocation": "7057:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3249,
												"src": "7035:34:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenMechanics_$2769_memory_ptr",
													"typeString": "struct SocialToken.TokenMechanics"
												},
												"typeName": {
													"id": 3234,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3233,
														"name": "TokenMechanics",
														"nameLocations": [
															"7035:14:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2769,
														"src": "7035:14:17"
													},
													"referencedDeclaration": 2769,
													"src": "7035:14:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenMechanics_$2769_storage_ptr",
														"typeString": "struct SocialToken.TokenMechanics"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7034:36:17"
									},
									"returnParameters": {
										"id": 3239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7090:0:17"
									},
									"scope": 3277,
									"src": "7010:166:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3257,
										"nodeType": "Block",
										"src": "7218:25:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3254,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "7228:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7228:8:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3256,
												"nodeType": "ExpressionStatement",
												"src": "7228:8:17"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 3258,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3252,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3251,
												"name": "onlyOwner",
												"nameLocations": [
													"7208:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "7208:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "7208:9:17"
										}
									],
									"name": "pause",
									"nameLocation": "7191:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7196:2:17"
									},
									"returnParameters": {
										"id": 3253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7218:0:17"
									},
									"scope": 3277,
									"src": "7182:61:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3266,
										"nodeType": "Block",
										"src": "7287:27:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3263,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "7297:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7297:10:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3265,
												"nodeType": "ExpressionStatement",
												"src": "7297:10:17"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 3267,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3261,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3260,
												"name": "onlyOwner",
												"nameLocations": [
													"7277:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "7277:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "7277:9:17"
										}
									],
									"name": "unpause",
									"nameLocation": "7258:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7265:2:17"
									},
									"returnParameters": {
										"id": 3262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7287:0:17"
									},
									"scope": 3277,
									"src": "7249:65:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										584
									],
									"body": {
										"id": 3275,
										"nodeType": "Block",
										"src": "7414:2:17",
										"statements": []
									},
									"id": 3276,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3273,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3272,
												"name": "onlyOwner",
												"nameLocations": [
													"7404:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "7404:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "7404:9:17"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "7359:17:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3271,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7395:8:17"
									},
									"parameters": {
										"id": 3270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3276,
												"src": "7377:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:9:17"
									},
									"returnParameters": {
										"id": 3274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7414:0:17"
									},
									"scope": 3277,
									"src": "7350:66:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3278,
							"src": "763:6655:17",
							"usedErrors": [
								30,
								35,
								211,
								214,
								475,
								480,
								1464,
								1469,
								1474,
								1483,
								1488,
								1493,
								1609,
								1622,
								2007,
								2269,
								2805,
								2807,
								2809,
								2811,
								2813
							],
							"usedEvents": [
								41,
								219,
								645,
								650,
								1429,
								1905,
								1914,
								2782,
								2787,
								2795,
								2803
							]
						}
					],
					"src": "32:7386:17"
				},
				"id": 17
			}
		}
	}
}